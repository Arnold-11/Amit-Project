
FinalProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000474c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000128  00800060  0000474c  000047e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800188  00800188  00004908  2**0
                  ALLOC
  3 .stab         00002910  00000000  00000000  00004908  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000cd1  00000000  00000000  00007218  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00007ee9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f2  00000000  00000000  00008089  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240b  00000000  00000000  0000827b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001386  00000000  00000000  0000a686  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d6  00000000  00000000  0000ba0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  0000cbe4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f6  00000000  00000000  0000cda4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000096e  00000000  00000000  0000d09a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000da08  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 1d 08 	jmp	0x103a	; 0x103a <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e4       	ldi	r30, 0x4C	; 76
      68:	f7 e4       	ldi	r31, 0x47	; 71
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 38       	cpi	r26, 0x88	; 136
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a8 e8       	ldi	r26, 0x88	; 136
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ac 38       	cpi	r26, 0x8C	; 140
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 85 0d 	call	0x1b0a	; 0x1b0a <main>
      8a:	0c 94 a4 23 	jmp	0x4748	; 0x4748 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 6d 23 	jmp	0x46da	; 0x46da <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a9 e7       	ldi	r26, 0x79	; 121
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 89 23 	jmp	0x4712	; 0x4712 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 79 23 	jmp	0x46f2	; 0x46f2 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 95 23 	jmp	0x472a	; 0x472a <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 79 23 	jmp	0x46f2	; 0x46f2 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 95 23 	jmp	0x472a	; 0x472a <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 6d 23 	jmp	0x46da	; 0x46da <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	89 e7       	ldi	r24, 0x79	; 121
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 89 23 	jmp	0x4712	; 0x4712 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 75 23 	jmp	0x46ea	; 0x46ea <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	69 e7       	ldi	r22, 0x79	; 121
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 91 23 	jmp	0x4722	; 0x4722 <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 79 23 	jmp	0x46f2	; 0x46f2 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 95 23 	jmp	0x472a	; 0x472a <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 79 23 	jmp	0x46f2	; 0x46f2 <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 95 23 	jmp	0x472a	; 0x472a <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 79 23 	jmp	0x46f2	; 0x46f2 <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 95 23 	jmp	0x472a	; 0x472a <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 7d 23 	jmp	0x46fa	; 0x46fa <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 99 23 	jmp	0x4732	; 0x4732 <__epilogue_restores__+0x20>

00000952 <__floatunsisf>:
     952:	a8 e0       	ldi	r26, 0x08	; 8
     954:	b0 e0       	ldi	r27, 0x00	; 0
     956:	ef ea       	ldi	r30, 0xAF	; 175
     958:	f4 e0       	ldi	r31, 0x04	; 4
     95a:	0c 94 75 23 	jmp	0x46ea	; 0x46ea <__prologue_saves__+0x10>
     95e:	7b 01       	movw	r14, r22
     960:	8c 01       	movw	r16, r24
     962:	61 15       	cp	r22, r1
     964:	71 05       	cpc	r23, r1
     966:	81 05       	cpc	r24, r1
     968:	91 05       	cpc	r25, r1
     96a:	19 f4       	brne	.+6      	; 0x972 <__floatunsisf+0x20>
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	89 83       	std	Y+1, r24	; 0x01
     970:	60 c0       	rjmp	.+192    	; 0xa32 <__floatunsisf+0xe0>
     972:	83 e0       	ldi	r24, 0x03	; 3
     974:	89 83       	std	Y+1, r24	; 0x01
     976:	8e e1       	ldi	r24, 0x1E	; 30
     978:	c8 2e       	mov	r12, r24
     97a:	d1 2c       	mov	r13, r1
     97c:	dc 82       	std	Y+4, r13	; 0x04
     97e:	cb 82       	std	Y+3, r12	; 0x03
     980:	ed 82       	std	Y+5, r14	; 0x05
     982:	fe 82       	std	Y+6, r15	; 0x06
     984:	0f 83       	std	Y+7, r16	; 0x07
     986:	18 87       	std	Y+8, r17	; 0x08
     988:	c8 01       	movw	r24, r16
     98a:	b7 01       	movw	r22, r14
     98c:	0e 94 22 05 	call	0xa44	; 0xa44 <__clzsi2>
     990:	fc 01       	movw	r30, r24
     992:	31 97       	sbiw	r30, 0x01	; 1
     994:	f7 ff       	sbrs	r31, 7
     996:	3b c0       	rjmp	.+118    	; 0xa0e <__floatunsisf+0xbc>
     998:	22 27       	eor	r18, r18
     99a:	33 27       	eor	r19, r19
     99c:	2e 1b       	sub	r18, r30
     99e:	3f 0b       	sbc	r19, r31
     9a0:	57 01       	movw	r10, r14
     9a2:	68 01       	movw	r12, r16
     9a4:	02 2e       	mov	r0, r18
     9a6:	04 c0       	rjmp	.+8      	; 0x9b0 <__floatunsisf+0x5e>
     9a8:	d6 94       	lsr	r13
     9aa:	c7 94       	ror	r12
     9ac:	b7 94       	ror	r11
     9ae:	a7 94       	ror	r10
     9b0:	0a 94       	dec	r0
     9b2:	d2 f7       	brpl	.-12     	; 0x9a8 <__floatunsisf+0x56>
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	60 e0       	ldi	r22, 0x00	; 0
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	a0 e0       	ldi	r26, 0x00	; 0
     9c2:	b0 e0       	ldi	r27, 0x00	; 0
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__floatunsisf+0x7c>
     9c6:	88 0f       	add	r24, r24
     9c8:	99 1f       	adc	r25, r25
     9ca:	aa 1f       	adc	r26, r26
     9cc:	bb 1f       	adc	r27, r27
     9ce:	2a 95       	dec	r18
     9d0:	d2 f7       	brpl	.-12     	; 0x9c6 <__floatunsisf+0x74>
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	a1 09       	sbc	r26, r1
     9d6:	b1 09       	sbc	r27, r1
     9d8:	8e 21       	and	r24, r14
     9da:	9f 21       	and	r25, r15
     9dc:	a0 23       	and	r26, r16
     9de:	b1 23       	and	r27, r17
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	a1 05       	cpc	r26, r1
     9e4:	b1 05       	cpc	r27, r1
     9e6:	21 f0       	breq	.+8      	; 0x9f0 <__floatunsisf+0x9e>
     9e8:	41 e0       	ldi	r20, 0x01	; 1
     9ea:	50 e0       	ldi	r21, 0x00	; 0
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	4a 29       	or	r20, r10
     9f2:	5b 29       	or	r21, r11
     9f4:	6c 29       	or	r22, r12
     9f6:	7d 29       	or	r23, r13
     9f8:	4d 83       	std	Y+5, r20	; 0x05
     9fa:	5e 83       	std	Y+6, r21	; 0x06
     9fc:	6f 83       	std	Y+7, r22	; 0x07
     9fe:	78 87       	std	Y+8, r23	; 0x08
     a00:	8e e1       	ldi	r24, 0x1E	; 30
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	8e 1b       	sub	r24, r30
     a06:	9f 0b       	sbc	r25, r31
     a08:	9c 83       	std	Y+4, r25	; 0x04
     a0a:	8b 83       	std	Y+3, r24	; 0x03
     a0c:	12 c0       	rjmp	.+36     	; 0xa32 <__floatunsisf+0xe0>
     a0e:	30 97       	sbiw	r30, 0x00	; 0
     a10:	81 f0       	breq	.+32     	; 0xa32 <__floatunsisf+0xe0>
     a12:	0e 2e       	mov	r0, r30
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <__floatunsisf+0xcc>
     a16:	ee 0c       	add	r14, r14
     a18:	ff 1c       	adc	r15, r15
     a1a:	00 1f       	adc	r16, r16
     a1c:	11 1f       	adc	r17, r17
     a1e:	0a 94       	dec	r0
     a20:	d2 f7       	brpl	.-12     	; 0xa16 <__floatunsisf+0xc4>
     a22:	ed 82       	std	Y+5, r14	; 0x05
     a24:	fe 82       	std	Y+6, r15	; 0x06
     a26:	0f 83       	std	Y+7, r16	; 0x07
     a28:	18 87       	std	Y+8, r17	; 0x08
     a2a:	ce 1a       	sub	r12, r30
     a2c:	df 0a       	sbc	r13, r31
     a2e:	dc 82       	std	Y+4, r13	; 0x04
     a30:	cb 82       	std	Y+3, r12	; 0x03
     a32:	1a 82       	std	Y+2, r1	; 0x02
     a34:	ce 01       	movw	r24, r28
     a36:	01 96       	adiw	r24, 0x01	; 1
     a38:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     a3c:	28 96       	adiw	r28, 0x08	; 8
     a3e:	ea e0       	ldi	r30, 0x0A	; 10
     a40:	0c 94 91 23 	jmp	0x4722	; 0x4722 <__epilogue_restores__+0x10>

00000a44 <__clzsi2>:
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	7b 01       	movw	r14, r22
     a4e:	8c 01       	movw	r16, r24
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	e8 16       	cp	r14, r24
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	f8 06       	cpc	r15, r24
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	08 07       	cpc	r16, r24
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	18 07       	cpc	r17, r24
     a60:	88 f4       	brcc	.+34     	; 0xa84 <__clzsi2+0x40>
     a62:	8f ef       	ldi	r24, 0xFF	; 255
     a64:	e8 16       	cp	r14, r24
     a66:	f1 04       	cpc	r15, r1
     a68:	01 05       	cpc	r16, r1
     a6a:	11 05       	cpc	r17, r1
     a6c:	31 f0       	breq	.+12     	; 0xa7a <__clzsi2+0x36>
     a6e:	28 f0       	brcs	.+10     	; 0xa7a <__clzsi2+0x36>
     a70:	88 e0       	ldi	r24, 0x08	; 8
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	a0 e0       	ldi	r26, 0x00	; 0
     a76:	b0 e0       	ldi	r27, 0x00	; 0
     a78:	17 c0       	rjmp	.+46     	; 0xaa8 <__clzsi2+0x64>
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	a0 e0       	ldi	r26, 0x00	; 0
     a80:	b0 e0       	ldi	r27, 0x00	; 0
     a82:	12 c0       	rjmp	.+36     	; 0xaa8 <__clzsi2+0x64>
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	e8 16       	cp	r14, r24
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	f8 06       	cpc	r15, r24
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	08 07       	cpc	r16, r24
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	18 07       	cpc	r17, r24
     a94:	28 f0       	brcs	.+10     	; 0xaa0 <__clzsi2+0x5c>
     a96:	88 e1       	ldi	r24, 0x18	; 24
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__clzsi2+0x64>
     aa0:	80 e1       	ldi	r24, 0x10	; 16
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	a0 e0       	ldi	r26, 0x00	; 0
     aa6:	b0 e0       	ldi	r27, 0x00	; 0
     aa8:	20 e2       	ldi	r18, 0x20	; 32
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	28 1b       	sub	r18, r24
     ab2:	39 0b       	sbc	r19, r25
     ab4:	4a 0b       	sbc	r20, r26
     ab6:	5b 0b       	sbc	r21, r27
     ab8:	04 c0       	rjmp	.+8      	; 0xac2 <__clzsi2+0x7e>
     aba:	16 95       	lsr	r17
     abc:	07 95       	ror	r16
     abe:	f7 94       	ror	r15
     ac0:	e7 94       	ror	r14
     ac2:	8a 95       	dec	r24
     ac4:	d2 f7       	brpl	.-12     	; 0xaba <__clzsi2+0x76>
     ac6:	f7 01       	movw	r30, r14
     ac8:	ef 57       	subi	r30, 0x7F	; 127
     aca:	ff 4f       	sbci	r31, 0xFF	; 255
     acc:	80 81       	ld	r24, Z
     ace:	28 1b       	sub	r18, r24
     ad0:	31 09       	sbc	r19, r1
     ad2:	41 09       	sbc	r20, r1
     ad4:	51 09       	sbc	r21, r1
     ad6:	c9 01       	movw	r24, r18
     ad8:	1f 91       	pop	r17
     ada:	0f 91       	pop	r16
     adc:	ff 90       	pop	r15
     ade:	ef 90       	pop	r14
     ae0:	08 95       	ret

00000ae2 <__pack_f>:
     ae2:	df 92       	push	r13
     ae4:	ef 92       	push	r14
     ae6:	ff 92       	push	r15
     ae8:	0f 93       	push	r16
     aea:	1f 93       	push	r17
     aec:	fc 01       	movw	r30, r24
     aee:	e4 80       	ldd	r14, Z+4	; 0x04
     af0:	f5 80       	ldd	r15, Z+5	; 0x05
     af2:	06 81       	ldd	r16, Z+6	; 0x06
     af4:	17 81       	ldd	r17, Z+7	; 0x07
     af6:	d1 80       	ldd	r13, Z+1	; 0x01
     af8:	80 81       	ld	r24, Z
     afa:	82 30       	cpi	r24, 0x02	; 2
     afc:	48 f4       	brcc	.+18     	; 0xb10 <__pack_f+0x2e>
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	a0 e1       	ldi	r26, 0x10	; 16
     b04:	b0 e0       	ldi	r27, 0x00	; 0
     b06:	e8 2a       	or	r14, r24
     b08:	f9 2a       	or	r15, r25
     b0a:	0a 2b       	or	r16, r26
     b0c:	1b 2b       	or	r17, r27
     b0e:	a5 c0       	rjmp	.+330    	; 0xc5a <__pack_f+0x178>
     b10:	84 30       	cpi	r24, 0x04	; 4
     b12:	09 f4       	brne	.+2      	; 0xb16 <__pack_f+0x34>
     b14:	9f c0       	rjmp	.+318    	; 0xc54 <__pack_f+0x172>
     b16:	82 30       	cpi	r24, 0x02	; 2
     b18:	21 f4       	brne	.+8      	; 0xb22 <__pack_f+0x40>
     b1a:	ee 24       	eor	r14, r14
     b1c:	ff 24       	eor	r15, r15
     b1e:	87 01       	movw	r16, r14
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <__pack_f+0x4a>
     b22:	e1 14       	cp	r14, r1
     b24:	f1 04       	cpc	r15, r1
     b26:	01 05       	cpc	r16, r1
     b28:	11 05       	cpc	r17, r1
     b2a:	19 f4       	brne	.+6      	; 0xb32 <__pack_f+0x50>
     b2c:	e0 e0       	ldi	r30, 0x00	; 0
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	96 c0       	rjmp	.+300    	; 0xc5e <__pack_f+0x17c>
     b32:	62 81       	ldd	r22, Z+2	; 0x02
     b34:	73 81       	ldd	r23, Z+3	; 0x03
     b36:	9f ef       	ldi	r25, 0xFF	; 255
     b38:	62 38       	cpi	r22, 0x82	; 130
     b3a:	79 07       	cpc	r23, r25
     b3c:	0c f0       	brlt	.+2      	; 0xb40 <__pack_f+0x5e>
     b3e:	5b c0       	rjmp	.+182    	; 0xbf6 <__pack_f+0x114>
     b40:	22 e8       	ldi	r18, 0x82	; 130
     b42:	3f ef       	ldi	r19, 0xFF	; 255
     b44:	26 1b       	sub	r18, r22
     b46:	37 0b       	sbc	r19, r23
     b48:	2a 31       	cpi	r18, 0x1A	; 26
     b4a:	31 05       	cpc	r19, r1
     b4c:	2c f0       	brlt	.+10     	; 0xb58 <__pack_f+0x76>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e0       	ldi	r20, 0x00	; 0
     b54:	50 e0       	ldi	r21, 0x00	; 0
     b56:	2a c0       	rjmp	.+84     	; 0xbac <__pack_f+0xca>
     b58:	b8 01       	movw	r22, r16
     b5a:	a7 01       	movw	r20, r14
     b5c:	02 2e       	mov	r0, r18
     b5e:	04 c0       	rjmp	.+8      	; 0xb68 <__pack_f+0x86>
     b60:	76 95       	lsr	r23
     b62:	67 95       	ror	r22
     b64:	57 95       	ror	r21
     b66:	47 95       	ror	r20
     b68:	0a 94       	dec	r0
     b6a:	d2 f7       	brpl	.-12     	; 0xb60 <__pack_f+0x7e>
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	a0 e0       	ldi	r26, 0x00	; 0
     b72:	b0 e0       	ldi	r27, 0x00	; 0
     b74:	04 c0       	rjmp	.+8      	; 0xb7e <__pack_f+0x9c>
     b76:	88 0f       	add	r24, r24
     b78:	99 1f       	adc	r25, r25
     b7a:	aa 1f       	adc	r26, r26
     b7c:	bb 1f       	adc	r27, r27
     b7e:	2a 95       	dec	r18
     b80:	d2 f7       	brpl	.-12     	; 0xb76 <__pack_f+0x94>
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	a1 09       	sbc	r26, r1
     b86:	b1 09       	sbc	r27, r1
     b88:	8e 21       	and	r24, r14
     b8a:	9f 21       	and	r25, r15
     b8c:	a0 23       	and	r26, r16
     b8e:	b1 23       	and	r27, r17
     b90:	00 97       	sbiw	r24, 0x00	; 0
     b92:	a1 05       	cpc	r26, r1
     b94:	b1 05       	cpc	r27, r1
     b96:	21 f0       	breq	.+8      	; 0xba0 <__pack_f+0xbe>
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	a0 e0       	ldi	r26, 0x00	; 0
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	9a 01       	movw	r18, r20
     ba2:	ab 01       	movw	r20, r22
     ba4:	28 2b       	or	r18, r24
     ba6:	39 2b       	or	r19, r25
     ba8:	4a 2b       	or	r20, r26
     baa:	5b 2b       	or	r21, r27
     bac:	da 01       	movw	r26, r20
     bae:	c9 01       	movw	r24, r18
     bb0:	8f 77       	andi	r24, 0x7F	; 127
     bb2:	90 70       	andi	r25, 0x00	; 0
     bb4:	a0 70       	andi	r26, 0x00	; 0
     bb6:	b0 70       	andi	r27, 0x00	; 0
     bb8:	80 34       	cpi	r24, 0x40	; 64
     bba:	91 05       	cpc	r25, r1
     bbc:	a1 05       	cpc	r26, r1
     bbe:	b1 05       	cpc	r27, r1
     bc0:	39 f4       	brne	.+14     	; 0xbd0 <__pack_f+0xee>
     bc2:	27 ff       	sbrs	r18, 7
     bc4:	09 c0       	rjmp	.+18     	; 0xbd8 <__pack_f+0xf6>
     bc6:	20 5c       	subi	r18, 0xC0	; 192
     bc8:	3f 4f       	sbci	r19, 0xFF	; 255
     bca:	4f 4f       	sbci	r20, 0xFF	; 255
     bcc:	5f 4f       	sbci	r21, 0xFF	; 255
     bce:	04 c0       	rjmp	.+8      	; 0xbd8 <__pack_f+0xf6>
     bd0:	21 5c       	subi	r18, 0xC1	; 193
     bd2:	3f 4f       	sbci	r19, 0xFF	; 255
     bd4:	4f 4f       	sbci	r20, 0xFF	; 255
     bd6:	5f 4f       	sbci	r21, 0xFF	; 255
     bd8:	e0 e0       	ldi	r30, 0x00	; 0
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	20 30       	cpi	r18, 0x00	; 0
     bde:	a0 e0       	ldi	r26, 0x00	; 0
     be0:	3a 07       	cpc	r19, r26
     be2:	a0 e0       	ldi	r26, 0x00	; 0
     be4:	4a 07       	cpc	r20, r26
     be6:	a0 e4       	ldi	r26, 0x40	; 64
     be8:	5a 07       	cpc	r21, r26
     bea:	10 f0       	brcs	.+4      	; 0xbf0 <__pack_f+0x10e>
     bec:	e1 e0       	ldi	r30, 0x01	; 1
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	79 01       	movw	r14, r18
     bf2:	8a 01       	movw	r16, r20
     bf4:	27 c0       	rjmp	.+78     	; 0xc44 <__pack_f+0x162>
     bf6:	60 38       	cpi	r22, 0x80	; 128
     bf8:	71 05       	cpc	r23, r1
     bfa:	64 f5       	brge	.+88     	; 0xc54 <__pack_f+0x172>
     bfc:	fb 01       	movw	r30, r22
     bfe:	e1 58       	subi	r30, 0x81	; 129
     c00:	ff 4f       	sbci	r31, 0xFF	; 255
     c02:	d8 01       	movw	r26, r16
     c04:	c7 01       	movw	r24, r14
     c06:	8f 77       	andi	r24, 0x7F	; 127
     c08:	90 70       	andi	r25, 0x00	; 0
     c0a:	a0 70       	andi	r26, 0x00	; 0
     c0c:	b0 70       	andi	r27, 0x00	; 0
     c0e:	80 34       	cpi	r24, 0x40	; 64
     c10:	91 05       	cpc	r25, r1
     c12:	a1 05       	cpc	r26, r1
     c14:	b1 05       	cpc	r27, r1
     c16:	39 f4       	brne	.+14     	; 0xc26 <__pack_f+0x144>
     c18:	e7 fe       	sbrs	r14, 7
     c1a:	0d c0       	rjmp	.+26     	; 0xc36 <__pack_f+0x154>
     c1c:	80 e4       	ldi	r24, 0x40	; 64
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	a0 e0       	ldi	r26, 0x00	; 0
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <__pack_f+0x14c>
     c26:	8f e3       	ldi	r24, 0x3F	; 63
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	a0 e0       	ldi	r26, 0x00	; 0
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	e8 0e       	add	r14, r24
     c30:	f9 1e       	adc	r15, r25
     c32:	0a 1f       	adc	r16, r26
     c34:	1b 1f       	adc	r17, r27
     c36:	17 ff       	sbrs	r17, 7
     c38:	05 c0       	rjmp	.+10     	; 0xc44 <__pack_f+0x162>
     c3a:	16 95       	lsr	r17
     c3c:	07 95       	ror	r16
     c3e:	f7 94       	ror	r15
     c40:	e7 94       	ror	r14
     c42:	31 96       	adiw	r30, 0x01	; 1
     c44:	87 e0       	ldi	r24, 0x07	; 7
     c46:	16 95       	lsr	r17
     c48:	07 95       	ror	r16
     c4a:	f7 94       	ror	r15
     c4c:	e7 94       	ror	r14
     c4e:	8a 95       	dec	r24
     c50:	d1 f7       	brne	.-12     	; 0xc46 <__pack_f+0x164>
     c52:	05 c0       	rjmp	.+10     	; 0xc5e <__pack_f+0x17c>
     c54:	ee 24       	eor	r14, r14
     c56:	ff 24       	eor	r15, r15
     c58:	87 01       	movw	r16, r14
     c5a:	ef ef       	ldi	r30, 0xFF	; 255
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	6e 2f       	mov	r22, r30
     c60:	67 95       	ror	r22
     c62:	66 27       	eor	r22, r22
     c64:	67 95       	ror	r22
     c66:	90 2f       	mov	r25, r16
     c68:	9f 77       	andi	r25, 0x7F	; 127
     c6a:	d7 94       	ror	r13
     c6c:	dd 24       	eor	r13, r13
     c6e:	d7 94       	ror	r13
     c70:	8e 2f       	mov	r24, r30
     c72:	86 95       	lsr	r24
     c74:	49 2f       	mov	r20, r25
     c76:	46 2b       	or	r20, r22
     c78:	58 2f       	mov	r21, r24
     c7a:	5d 29       	or	r21, r13
     c7c:	b7 01       	movw	r22, r14
     c7e:	ca 01       	movw	r24, r20
     c80:	1f 91       	pop	r17
     c82:	0f 91       	pop	r16
     c84:	ff 90       	pop	r15
     c86:	ef 90       	pop	r14
     c88:	df 90       	pop	r13
     c8a:	08 95       	ret

00000c8c <__unpack_f>:
     c8c:	fc 01       	movw	r30, r24
     c8e:	db 01       	movw	r26, r22
     c90:	40 81       	ld	r20, Z
     c92:	51 81       	ldd	r21, Z+1	; 0x01
     c94:	22 81       	ldd	r18, Z+2	; 0x02
     c96:	62 2f       	mov	r22, r18
     c98:	6f 77       	andi	r22, 0x7F	; 127
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	22 1f       	adc	r18, r18
     c9e:	22 27       	eor	r18, r18
     ca0:	22 1f       	adc	r18, r18
     ca2:	93 81       	ldd	r25, Z+3	; 0x03
     ca4:	89 2f       	mov	r24, r25
     ca6:	88 0f       	add	r24, r24
     ca8:	82 2b       	or	r24, r18
     caa:	28 2f       	mov	r18, r24
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	99 1f       	adc	r25, r25
     cb0:	99 27       	eor	r25, r25
     cb2:	99 1f       	adc	r25, r25
     cb4:	11 96       	adiw	r26, 0x01	; 1
     cb6:	9c 93       	st	X, r25
     cb8:	11 97       	sbiw	r26, 0x01	; 1
     cba:	21 15       	cp	r18, r1
     cbc:	31 05       	cpc	r19, r1
     cbe:	a9 f5       	brne	.+106    	; 0xd2a <__unpack_f+0x9e>
     cc0:	41 15       	cp	r20, r1
     cc2:	51 05       	cpc	r21, r1
     cc4:	61 05       	cpc	r22, r1
     cc6:	71 05       	cpc	r23, r1
     cc8:	11 f4       	brne	.+4      	; 0xcce <__unpack_f+0x42>
     cca:	82 e0       	ldi	r24, 0x02	; 2
     ccc:	37 c0       	rjmp	.+110    	; 0xd3c <__unpack_f+0xb0>
     cce:	82 e8       	ldi	r24, 0x82	; 130
     cd0:	9f ef       	ldi	r25, 0xFF	; 255
     cd2:	13 96       	adiw	r26, 0x03	; 3
     cd4:	9c 93       	st	X, r25
     cd6:	8e 93       	st	-X, r24
     cd8:	12 97       	sbiw	r26, 0x02	; 2
     cda:	9a 01       	movw	r18, r20
     cdc:	ab 01       	movw	r20, r22
     cde:	67 e0       	ldi	r22, 0x07	; 7
     ce0:	22 0f       	add	r18, r18
     ce2:	33 1f       	adc	r19, r19
     ce4:	44 1f       	adc	r20, r20
     ce6:	55 1f       	adc	r21, r21
     ce8:	6a 95       	dec	r22
     cea:	d1 f7       	brne	.-12     	; 0xce0 <__unpack_f+0x54>
     cec:	83 e0       	ldi	r24, 0x03	; 3
     cee:	8c 93       	st	X, r24
     cf0:	0d c0       	rjmp	.+26     	; 0xd0c <__unpack_f+0x80>
     cf2:	22 0f       	add	r18, r18
     cf4:	33 1f       	adc	r19, r19
     cf6:	44 1f       	adc	r20, r20
     cf8:	55 1f       	adc	r21, r21
     cfa:	12 96       	adiw	r26, 0x02	; 2
     cfc:	8d 91       	ld	r24, X+
     cfe:	9c 91       	ld	r25, X
     d00:	13 97       	sbiw	r26, 0x03	; 3
     d02:	01 97       	sbiw	r24, 0x01	; 1
     d04:	13 96       	adiw	r26, 0x03	; 3
     d06:	9c 93       	st	X, r25
     d08:	8e 93       	st	-X, r24
     d0a:	12 97       	sbiw	r26, 0x02	; 2
     d0c:	20 30       	cpi	r18, 0x00	; 0
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	38 07       	cpc	r19, r24
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	48 07       	cpc	r20, r24
     d16:	80 e4       	ldi	r24, 0x40	; 64
     d18:	58 07       	cpc	r21, r24
     d1a:	58 f3       	brcs	.-42     	; 0xcf2 <__unpack_f+0x66>
     d1c:	14 96       	adiw	r26, 0x04	; 4
     d1e:	2d 93       	st	X+, r18
     d20:	3d 93       	st	X+, r19
     d22:	4d 93       	st	X+, r20
     d24:	5c 93       	st	X, r21
     d26:	17 97       	sbiw	r26, 0x07	; 7
     d28:	08 95       	ret
     d2a:	2f 3f       	cpi	r18, 0xFF	; 255
     d2c:	31 05       	cpc	r19, r1
     d2e:	79 f4       	brne	.+30     	; 0xd4e <__unpack_f+0xc2>
     d30:	41 15       	cp	r20, r1
     d32:	51 05       	cpc	r21, r1
     d34:	61 05       	cpc	r22, r1
     d36:	71 05       	cpc	r23, r1
     d38:	19 f4       	brne	.+6      	; 0xd40 <__unpack_f+0xb4>
     d3a:	84 e0       	ldi	r24, 0x04	; 4
     d3c:	8c 93       	st	X, r24
     d3e:	08 95       	ret
     d40:	64 ff       	sbrs	r22, 4
     d42:	03 c0       	rjmp	.+6      	; 0xd4a <__unpack_f+0xbe>
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	8c 93       	st	X, r24
     d48:	12 c0       	rjmp	.+36     	; 0xd6e <__unpack_f+0xe2>
     d4a:	1c 92       	st	X, r1
     d4c:	10 c0       	rjmp	.+32     	; 0xd6e <__unpack_f+0xe2>
     d4e:	2f 57       	subi	r18, 0x7F	; 127
     d50:	30 40       	sbci	r19, 0x00	; 0
     d52:	13 96       	adiw	r26, 0x03	; 3
     d54:	3c 93       	st	X, r19
     d56:	2e 93       	st	-X, r18
     d58:	12 97       	sbiw	r26, 0x02	; 2
     d5a:	83 e0       	ldi	r24, 0x03	; 3
     d5c:	8c 93       	st	X, r24
     d5e:	87 e0       	ldi	r24, 0x07	; 7
     d60:	44 0f       	add	r20, r20
     d62:	55 1f       	adc	r21, r21
     d64:	66 1f       	adc	r22, r22
     d66:	77 1f       	adc	r23, r23
     d68:	8a 95       	dec	r24
     d6a:	d1 f7       	brne	.-12     	; 0xd60 <__unpack_f+0xd4>
     d6c:	70 64       	ori	r23, 0x40	; 64
     d6e:	14 96       	adiw	r26, 0x04	; 4
     d70:	4d 93       	st	X+, r20
     d72:	5d 93       	st	X+, r21
     d74:	6d 93       	st	X+, r22
     d76:	7c 93       	st	X, r23
     d78:	17 97       	sbiw	r26, 0x07	; 7
     d7a:	08 95       	ret

00000d7c <__fpcmp_parts_f>:
     d7c:	1f 93       	push	r17
     d7e:	dc 01       	movw	r26, r24
     d80:	fb 01       	movw	r30, r22
     d82:	9c 91       	ld	r25, X
     d84:	92 30       	cpi	r25, 0x02	; 2
     d86:	08 f4       	brcc	.+2      	; 0xd8a <__fpcmp_parts_f+0xe>
     d88:	47 c0       	rjmp	.+142    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d8a:	80 81       	ld	r24, Z
     d8c:	82 30       	cpi	r24, 0x02	; 2
     d8e:	08 f4       	brcc	.+2      	; 0xd92 <__fpcmp_parts_f+0x16>
     d90:	43 c0       	rjmp	.+134    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d92:	94 30       	cpi	r25, 0x04	; 4
     d94:	51 f4       	brne	.+20     	; 0xdaa <__fpcmp_parts_f+0x2e>
     d96:	11 96       	adiw	r26, 0x01	; 1
     d98:	1c 91       	ld	r17, X
     d9a:	84 30       	cpi	r24, 0x04	; 4
     d9c:	99 f5       	brne	.+102    	; 0xe04 <__fpcmp_parts_f+0x88>
     d9e:	81 81       	ldd	r24, Z+1	; 0x01
     da0:	68 2f       	mov	r22, r24
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	61 1b       	sub	r22, r17
     da6:	71 09       	sbc	r23, r1
     da8:	3f c0       	rjmp	.+126    	; 0xe28 <__fpcmp_parts_f+0xac>
     daa:	84 30       	cpi	r24, 0x04	; 4
     dac:	21 f0       	breq	.+8      	; 0xdb6 <__fpcmp_parts_f+0x3a>
     dae:	92 30       	cpi	r25, 0x02	; 2
     db0:	31 f4       	brne	.+12     	; 0xdbe <__fpcmp_parts_f+0x42>
     db2:	82 30       	cpi	r24, 0x02	; 2
     db4:	b9 f1       	breq	.+110    	; 0xe24 <__fpcmp_parts_f+0xa8>
     db6:	81 81       	ldd	r24, Z+1	; 0x01
     db8:	88 23       	and	r24, r24
     dba:	89 f1       	breq	.+98     	; 0xe1e <__fpcmp_parts_f+0xa2>
     dbc:	2d c0       	rjmp	.+90     	; 0xe18 <__fpcmp_parts_f+0x9c>
     dbe:	11 96       	adiw	r26, 0x01	; 1
     dc0:	1c 91       	ld	r17, X
     dc2:	11 97       	sbiw	r26, 0x01	; 1
     dc4:	82 30       	cpi	r24, 0x02	; 2
     dc6:	f1 f0       	breq	.+60     	; 0xe04 <__fpcmp_parts_f+0x88>
     dc8:	81 81       	ldd	r24, Z+1	; 0x01
     dca:	18 17       	cp	r17, r24
     dcc:	d9 f4       	brne	.+54     	; 0xe04 <__fpcmp_parts_f+0x88>
     dce:	12 96       	adiw	r26, 0x02	; 2
     dd0:	2d 91       	ld	r18, X+
     dd2:	3c 91       	ld	r19, X
     dd4:	13 97       	sbiw	r26, 0x03	; 3
     dd6:	82 81       	ldd	r24, Z+2	; 0x02
     dd8:	93 81       	ldd	r25, Z+3	; 0x03
     dda:	82 17       	cp	r24, r18
     ddc:	93 07       	cpc	r25, r19
     dde:	94 f0       	brlt	.+36     	; 0xe04 <__fpcmp_parts_f+0x88>
     de0:	28 17       	cp	r18, r24
     de2:	39 07       	cpc	r19, r25
     de4:	bc f0       	brlt	.+46     	; 0xe14 <__fpcmp_parts_f+0x98>
     de6:	14 96       	adiw	r26, 0x04	; 4
     de8:	8d 91       	ld	r24, X+
     dea:	9d 91       	ld	r25, X+
     dec:	0d 90       	ld	r0, X+
     dee:	bc 91       	ld	r27, X
     df0:	a0 2d       	mov	r26, r0
     df2:	24 81       	ldd	r18, Z+4	; 0x04
     df4:	35 81       	ldd	r19, Z+5	; 0x05
     df6:	46 81       	ldd	r20, Z+6	; 0x06
     df8:	57 81       	ldd	r21, Z+7	; 0x07
     dfa:	28 17       	cp	r18, r24
     dfc:	39 07       	cpc	r19, r25
     dfe:	4a 07       	cpc	r20, r26
     e00:	5b 07       	cpc	r21, r27
     e02:	18 f4       	brcc	.+6      	; 0xe0a <__fpcmp_parts_f+0x8e>
     e04:	11 23       	and	r17, r17
     e06:	41 f0       	breq	.+16     	; 0xe18 <__fpcmp_parts_f+0x9c>
     e08:	0a c0       	rjmp	.+20     	; 0xe1e <__fpcmp_parts_f+0xa2>
     e0a:	82 17       	cp	r24, r18
     e0c:	93 07       	cpc	r25, r19
     e0e:	a4 07       	cpc	r26, r20
     e10:	b5 07       	cpc	r27, r21
     e12:	40 f4       	brcc	.+16     	; 0xe24 <__fpcmp_parts_f+0xa8>
     e14:	11 23       	and	r17, r17
     e16:	19 f0       	breq	.+6      	; 0xe1e <__fpcmp_parts_f+0xa2>
     e18:	61 e0       	ldi	r22, 0x01	; 1
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	05 c0       	rjmp	.+10     	; 0xe28 <__fpcmp_parts_f+0xac>
     e1e:	6f ef       	ldi	r22, 0xFF	; 255
     e20:	7f ef       	ldi	r23, 0xFF	; 255
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <__fpcmp_parts_f+0xac>
     e24:	60 e0       	ldi	r22, 0x00	; 0
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	cb 01       	movw	r24, r22
     e2a:	1f 91       	pop	r17
     e2c:	08 95       	ret

00000e2e <ADC_voidInit>:
static void (*ADC_pvNotificationFunc)(void)=NULL;

static uint8 ADC_u8BusyFlag=IDLE;

void ADC_voidInit()
{
     e2e:	df 93       	push	r29
     e30:	cf 93       	push	r28
     e32:	cd b7       	in	r28, 0x3d	; 61
     e34:	de b7       	in	r29, 0x3e	; 62
	//REF selection
	ADMUX&=0b00111111;
     e36:	a7 e2       	ldi	r26, 0x27	; 39
     e38:	b0 e0       	ldi	r27, 0x00	; 0
     e3a:	e7 e2       	ldi	r30, 0x27	; 39
     e3c:	f0 e0       	ldi	r31, 0x00	; 0
     e3e:	80 81       	ld	r24, Z
     e40:	8f 73       	andi	r24, 0x3F	; 63
     e42:	8c 93       	st	X, r24
	ADMUX|=(ADC_REF<<6);
     e44:	a7 e2       	ldi	r26, 0x27	; 39
     e46:	b0 e0       	ldi	r27, 0x00	; 0
     e48:	e7 e2       	ldi	r30, 0x27	; 39
     e4a:	f0 e0       	ldi	r31, 0x00	; 0
     e4c:	80 81       	ld	r24, Z
     e4e:	80 64       	ori	r24, 0x40	; 64
     e50:	8c 93       	st	X, r24
	//ADC Resolution selection
#if ADC_u8_RESOLUTION==EIGHT_BIT
	SET_BIT(ADMUX,ADMUX_ADLAR);
     e52:	a7 e2       	ldi	r26, 0x27	; 39
     e54:	b0 e0       	ldi	r27, 0x00	; 0
     e56:	e7 e2       	ldi	r30, 0x27	; 39
     e58:	f0 e0       	ldi	r31, 0x00	; 0
     e5a:	80 81       	ld	r24, Z
     e5c:	80 62       	ori	r24, 0x20	; 32
     e5e:	8c 93       	st	X, r24
	CLR_BIT(ADMUX,ADMUX_ADLAR);
#else
#error "wrong ADC_u8_RESOLUTION configuration option"
#endif
	//Set Pre-scaler
	ADCSRA&=0b11111000;
     e60:	a6 e2       	ldi	r26, 0x26	; 38
     e62:	b0 e0       	ldi	r27, 0x00	; 0
     e64:	e6 e2       	ldi	r30, 0x26	; 38
     e66:	f0 e0       	ldi	r31, 0x00	; 0
     e68:	80 81       	ld	r24, Z
     e6a:	88 7f       	andi	r24, 0xF8	; 248
     e6c:	8c 93       	st	X, r24
	ADCSRA|=ADC_u8_PRESCALER;
     e6e:	a6 e2       	ldi	r26, 0x26	; 38
     e70:	b0 e0       	ldi	r27, 0x00	; 0
     e72:	e6 e2       	ldi	r30, 0x26	; 38
     e74:	f0 e0       	ldi	r31, 0x00	; 0
     e76:	80 81       	ld	r24, Z
     e78:	87 60       	ori	r24, 0x07	; 7
     e7a:	8c 93       	st	X, r24
	//Enable ADC
	SET_BIT(ADCSRA,ADCSRA_ADEN);
     e7c:	a6 e2       	ldi	r26, 0x26	; 38
     e7e:	b0 e0       	ldi	r27, 0x00	; 0
     e80:	e6 e2       	ldi	r30, 0x26	; 38
     e82:	f0 e0       	ldi	r31, 0x00	; 0
     e84:	80 81       	ld	r24, Z
     e86:	80 68       	ori	r24, 0x80	; 128
     e88:	8c 93       	st	X, r24
}
     e8a:	cf 91       	pop	r28
     e8c:	df 91       	pop	r29
     e8e:	08 95       	ret

00000e90 <ADC_u8_StartConvSynch>:

uint8 ADC_u8_StartConvSynch(uint8 Copy_u8Channel,uint16* Copy_pu16Result)
{
     e90:	df 93       	push	r29
     e92:	cf 93       	push	r28
     e94:	cd b7       	in	r28, 0x3d	; 61
     e96:	de b7       	in	r29, 0x3e	; 62
     e98:	28 97       	sbiw	r28, 0x08	; 8
     e9a:	0f b6       	in	r0, 0x3f	; 63
     e9c:	f8 94       	cli
     e9e:	de bf       	out	0x3e, r29	; 62
     ea0:	0f be       	out	0x3f, r0	; 63
     ea2:	cd bf       	out	0x3d, r28	; 61
     ea4:	8e 83       	std	Y+6, r24	; 0x06
     ea6:	78 87       	std	Y+8, r23	; 0x08
     ea8:	6f 83       	std	Y+7, r22	; 0x07
	uint8 Local_u8ErrorState=OK;
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	8d 83       	std	Y+5, r24	; 0x05
	uint32 Local_u32Counter=0;
     eae:	19 82       	std	Y+1, r1	; 0x01
     eb0:	1a 82       	std	Y+2, r1	; 0x02
     eb2:	1b 82       	std	Y+3, r1	; 0x03
     eb4:	1c 82       	std	Y+4, r1	; 0x04

	if(Copy_pu16Result!=NULL)
     eb6:	8f 81       	ldd	r24, Y+7	; 0x07
     eb8:	98 85       	ldd	r25, Y+8	; 0x08
     eba:	00 97       	sbiw	r24, 0x00	; 0
     ebc:	09 f4       	brne	.+2      	; 0xec0 <ADC_u8_StartConvSynch+0x30>
     ebe:	5b c0       	rjmp	.+182    	; 0xf76 <ADC_u8_StartConvSynch+0xe6>
	{
		//check ADC is IDLE
		if(ADC_u8BusyFlag==IDLE)
     ec0:	80 91 81 01 	lds	r24, 0x0181
     ec4:	81 30       	cpi	r24, 0x01	; 1
     ec6:	09 f0       	breq	.+2      	; 0xeca <ADC_u8_StartConvSynch+0x3a>
     ec8:	53 c0       	rjmp	.+166    	; 0xf70 <ADC_u8_StartConvSynch+0xe0>
		{
			ADC_u8BusyFlag=BUSY;
     eca:	82 e0       	ldi	r24, 0x02	; 2
     ecc:	80 93 81 01 	sts	0x0181, r24
			//Set channel
			ADMUX&=0b11100000;
     ed0:	a7 e2       	ldi	r26, 0x27	; 39
     ed2:	b0 e0       	ldi	r27, 0x00	; 0
     ed4:	e7 e2       	ldi	r30, 0x27	; 39
     ed6:	f0 e0       	ldi	r31, 0x00	; 0
     ed8:	80 81       	ld	r24, Z
     eda:	80 7e       	andi	r24, 0xE0	; 224
     edc:	8c 93       	st	X, r24
			ADMUX|=Copy_u8Channel;
     ede:	a7 e2       	ldi	r26, 0x27	; 39
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	e7 e2       	ldi	r30, 0x27	; 39
     ee4:	f0 e0       	ldi	r31, 0x00	; 0
     ee6:	90 81       	ld	r25, Z
     ee8:	8e 81       	ldd	r24, Y+6	; 0x06
     eea:	89 2b       	or	r24, r25
     eec:	8c 93       	st	X, r24
			//start conversion
			SET_BIT(ADCSRA,ADCSRA_ADSC);
     eee:	a6 e2       	ldi	r26, 0x26	; 38
     ef0:	b0 e0       	ldi	r27, 0x00	; 0
     ef2:	e6 e2       	ldi	r30, 0x26	; 38
     ef4:	f0 e0       	ldi	r31, 0x00	; 0
     ef6:	80 81       	ld	r24, Z
     ef8:	80 64       	ori	r24, 0x40	; 64
     efa:	8c 93       	st	X, r24
     efc:	0b c0       	rjmp	.+22     	; 0xf14 <ADC_u8_StartConvSynch+0x84>
			//Polling
			while((GET_BIT(ADCSRA,ADCSRA_ADIF)==0) /*&& (Local_u32Counter != ADC_u32_TIMEOUT)*/)
			{
				Local_u32Counter++;
     efe:	89 81       	ldd	r24, Y+1	; 0x01
     f00:	9a 81       	ldd	r25, Y+2	; 0x02
     f02:	ab 81       	ldd	r26, Y+3	; 0x03
     f04:	bc 81       	ldd	r27, Y+4	; 0x04
     f06:	01 96       	adiw	r24, 0x01	; 1
     f08:	a1 1d       	adc	r26, r1
     f0a:	b1 1d       	adc	r27, r1
     f0c:	89 83       	std	Y+1, r24	; 0x01
     f0e:	9a 83       	std	Y+2, r25	; 0x02
     f10:	ab 83       	std	Y+3, r26	; 0x03
     f12:	bc 83       	std	Y+4, r27	; 0x04
			ADMUX&=0b11100000;
			ADMUX|=Copy_u8Channel;
			//start conversion
			SET_BIT(ADCSRA,ADCSRA_ADSC);
			//Polling
			while((GET_BIT(ADCSRA,ADCSRA_ADIF)==0) /*&& (Local_u32Counter != ADC_u32_TIMEOUT)*/)
     f14:	e6 e2       	ldi	r30, 0x26	; 38
     f16:	f0 e0       	ldi	r31, 0x00	; 0
     f18:	80 81       	ld	r24, Z
     f1a:	82 95       	swap	r24
     f1c:	8f 70       	andi	r24, 0x0F	; 15
     f1e:	88 2f       	mov	r24, r24
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	81 70       	andi	r24, 0x01	; 1
     f24:	90 70       	andi	r25, 0x00	; 0
     f26:	00 97       	sbiw	r24, 0x00	; 0
     f28:	51 f3       	breq	.-44     	; 0xefe <ADC_u8_StartConvSynch+0x6e>
			{
				Local_u32Counter++;
			}
			//check about the reason why the loop is finished
			if(Local_u32Counter==ADC_u32_TIMEOUT)
     f2a:	89 81       	ldd	r24, Y+1	; 0x01
     f2c:	9a 81       	ldd	r25, Y+2	; 0x02
     f2e:	ab 81       	ldd	r26, Y+3	; 0x03
     f30:	bc 81       	ldd	r27, Y+4	; 0x04
     f32:	80 35       	cpi	r24, 0x50	; 80
     f34:	23 ec       	ldi	r18, 0xC3	; 195
     f36:	92 07       	cpc	r25, r18
     f38:	20 e0       	ldi	r18, 0x00	; 0
     f3a:	a2 07       	cpc	r26, r18
     f3c:	20 e0       	ldi	r18, 0x00	; 0
     f3e:	b2 07       	cpc	r27, r18
     f40:	19 f4       	brne	.+6      	; 0xf48 <ADC_u8_StartConvSynch+0xb8>
			{
				//loop is finished because timeout has passed
				Local_u8ErrorState=TIMEOUT_ERR;
     f42:	84 e0       	ldi	r24, 0x04	; 4
     f44:	8d 83       	std	Y+5, r24	; 0x05
     f46:	10 c0       	rjmp	.+32     	; 0xf68 <ADC_u8_StartConvSynch+0xd8>
			}
			else
			{
				//clear interrupt flag
				SET_BIT(ADCSRA,ADCSRA_ADIF);
     f48:	a6 e2       	ldi	r26, 0x26	; 38
     f4a:	b0 e0       	ldi	r27, 0x00	; 0
     f4c:	e6 e2       	ldi	r30, 0x26	; 38
     f4e:	f0 e0       	ldi	r31, 0x00	; 0
     f50:	80 81       	ld	r24, Z
     f52:	80 61       	ori	r24, 0x10	; 16
     f54:	8c 93       	st	X, r24
				//show result
#if ADC_u8_RESOLUTION==EIGHT_BIT
				*Copy_pu16Result=ADCH;
     f56:	e5 e2       	ldi	r30, 0x25	; 37
     f58:	f0 e0       	ldi	r31, 0x00	; 0
     f5a:	80 81       	ld	r24, Z
     f5c:	88 2f       	mov	r24, r24
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	ef 81       	ldd	r30, Y+7	; 0x07
     f62:	f8 85       	ldd	r31, Y+8	; 0x08
     f64:	91 83       	std	Z+1, r25	; 0x01
     f66:	80 83       	st	Z, r24
#else
#error "wrong ADC_u8_RESOLUTION configuration option"
#endif
			}
			//ADC is now IDLE
			ADC_u8BusyFlag=IDLE;
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	80 93 81 01 	sts	0x0181, r24
     f6e:	05 c0       	rjmp	.+10     	; 0xf7a <ADC_u8_StartConvSynch+0xea>
		}
		else
		{
			Local_u8ErrorState=BUSY_ERR;
     f70:	85 e0       	ldi	r24, 0x05	; 5
     f72:	8d 83       	std	Y+5, r24	; 0x05
     f74:	02 c0       	rjmp	.+4      	; 0xf7a <ADC_u8_StartConvSynch+0xea>
		}
	}
	else
	{
		Local_u8ErrorState=NULL_POINTER;
     f76:	83 e0       	ldi	r24, 0x03	; 3
     f78:	8d 83       	std	Y+5, r24	; 0x05
	}
	return Local_u8ErrorState;
     f7a:	8d 81       	ldd	r24, Y+5	; 0x05
}
     f7c:	28 96       	adiw	r28, 0x08	; 8
     f7e:	0f b6       	in	r0, 0x3f	; 63
     f80:	f8 94       	cli
     f82:	de bf       	out	0x3e, r29	; 62
     f84:	0f be       	out	0x3f, r0	; 63
     f86:	cd bf       	out	0x3d, r28	; 61
     f88:	cf 91       	pop	r28
     f8a:	df 91       	pop	r29
     f8c:	08 95       	ret

00000f8e <ADC_u8_StartConvASynch>:

uint8 ADC_u8_StartConvASynch(uint8 Copy_u8Channel,uint16* Copy_pu16Result,void(*Copy_pvNotificationFunc)(void))
{
     f8e:	df 93       	push	r29
     f90:	cf 93       	push	r28
     f92:	00 d0       	rcall	.+0      	; 0xf94 <ADC_u8_StartConvASynch+0x6>
     f94:	00 d0       	rcall	.+0      	; 0xf96 <ADC_u8_StartConvASynch+0x8>
     f96:	00 d0       	rcall	.+0      	; 0xf98 <ADC_u8_StartConvASynch+0xa>
     f98:	cd b7       	in	r28, 0x3d	; 61
     f9a:	de b7       	in	r29, 0x3e	; 62
     f9c:	8a 83       	std	Y+2, r24	; 0x02
     f9e:	7c 83       	std	Y+4, r23	; 0x04
     fa0:	6b 83       	std	Y+3, r22	; 0x03
     fa2:	5e 83       	std	Y+6, r21	; 0x06
     fa4:	4d 83       	std	Y+5, r20	; 0x05
	uint8 Local_u8ErrorState=OK;
     fa6:	81 e0       	ldi	r24, 0x01	; 1
     fa8:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_pu16Result!=NULL) && (Copy_pvNotificationFunc!=NULL))
     faa:	8b 81       	ldd	r24, Y+3	; 0x03
     fac:	9c 81       	ldd	r25, Y+4	; 0x04
     fae:	00 97       	sbiw	r24, 0x00	; 0
     fb0:	c1 f1       	breq	.+112    	; 0x1022 <ADC_u8_StartConvASynch+0x94>
     fb2:	8d 81       	ldd	r24, Y+5	; 0x05
     fb4:	9e 81       	ldd	r25, Y+6	; 0x06
     fb6:	00 97       	sbiw	r24, 0x00	; 0
     fb8:	a1 f1       	breq	.+104    	; 0x1022 <ADC_u8_StartConvASynch+0x94>
	{
		if(ADC_u8BusyFlag==IDLE)
     fba:	80 91 81 01 	lds	r24, 0x0181
     fbe:	81 30       	cpi	r24, 0x01	; 1
     fc0:	69 f5       	brne	.+90     	; 0x101c <ADC_u8_StartConvASynch+0x8e>
		{
			ADC_u8BusyFlag=BUSY;
     fc2:	82 e0       	ldi	r24, 0x02	; 2
     fc4:	80 93 81 01 	sts	0x0181, r24
			//initialize the ADC result Pointer globally
			ADC_pu16Result=Copy_pu16Result;
     fc8:	8b 81       	ldd	r24, Y+3	; 0x03
     fca:	9c 81       	ldd	r25, Y+4	; 0x04
     fcc:	90 93 89 01 	sts	0x0189, r25
     fd0:	80 93 88 01 	sts	0x0188, r24
			//initialize the ADC notification function Pointer globally
			ADC_pvNotificationFunc=Copy_pvNotificationFunc;
     fd4:	8d 81       	ldd	r24, Y+5	; 0x05
     fd6:	9e 81       	ldd	r25, Y+6	; 0x06
     fd8:	90 93 8b 01 	sts	0x018B, r25
     fdc:	80 93 8a 01 	sts	0x018A, r24

			//Set channel
			ADMUX&=0b11100000;
     fe0:	a7 e2       	ldi	r26, 0x27	; 39
     fe2:	b0 e0       	ldi	r27, 0x00	; 0
     fe4:	e7 e2       	ldi	r30, 0x27	; 39
     fe6:	f0 e0       	ldi	r31, 0x00	; 0
     fe8:	80 81       	ld	r24, Z
     fea:	80 7e       	andi	r24, 0xE0	; 224
     fec:	8c 93       	st	X, r24
			ADMUX|=Copy_u8Channel;
     fee:	a7 e2       	ldi	r26, 0x27	; 39
     ff0:	b0 e0       	ldi	r27, 0x00	; 0
     ff2:	e7 e2       	ldi	r30, 0x27	; 39
     ff4:	f0 e0       	ldi	r31, 0x00	; 0
     ff6:	90 81       	ld	r25, Z
     ff8:	8a 81       	ldd	r24, Y+2	; 0x02
     ffa:	89 2b       	or	r24, r25
     ffc:	8c 93       	st	X, r24
			//start conversion
			SET_BIT(ADCSRA,ADCSRA_ADSC);
     ffe:	a6 e2       	ldi	r26, 0x26	; 38
    1000:	b0 e0       	ldi	r27, 0x00	; 0
    1002:	e6 e2       	ldi	r30, 0x26	; 38
    1004:	f0 e0       	ldi	r31, 0x00	; 0
    1006:	80 81       	ld	r24, Z
    1008:	80 64       	ori	r24, 0x40	; 64
    100a:	8c 93       	st	X, r24

			//ADC conversion complete interrupt enable
			SET_BIT(ADCSRA,ADCSRA_ADIE);
    100c:	a6 e2       	ldi	r26, 0x26	; 38
    100e:	b0 e0       	ldi	r27, 0x00	; 0
    1010:	e6 e2       	ldi	r30, 0x26	; 38
    1012:	f0 e0       	ldi	r31, 0x00	; 0
    1014:	80 81       	ld	r24, Z
    1016:	88 60       	ori	r24, 0x08	; 8
    1018:	8c 93       	st	X, r24
    101a:	05 c0       	rjmp	.+10     	; 0x1026 <ADC_u8_StartConvASynch+0x98>
		}
		else
		{
			Local_u8ErrorState=BUSY_ERR;
    101c:	85 e0       	ldi	r24, 0x05	; 5
    101e:	89 83       	std	Y+1, r24	; 0x01
    1020:	02 c0       	rjmp	.+4      	; 0x1026 <ADC_u8_StartConvASynch+0x98>
		}
	}
	else
	{
		Local_u8ErrorState=NULL_POINTER;
    1022:	83 e0       	ldi	r24, 0x03	; 3
    1024:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    1026:	89 81       	ldd	r24, Y+1	; 0x01
}
    1028:	26 96       	adiw	r28, 0x06	; 6
    102a:	0f b6       	in	r0, 0x3f	; 63
    102c:	f8 94       	cli
    102e:	de bf       	out	0x3e, r29	; 62
    1030:	0f be       	out	0x3f, r0	; 63
    1032:	cd bf       	out	0x3d, r28	; 61
    1034:	cf 91       	pop	r28
    1036:	df 91       	pop	r29
    1038:	08 95       	ret

0000103a <__vector_16>:

//ADC ISR
void __vector_16 (void)	__attribute__((signal));
void __vector_16 (void)
{
    103a:	1f 92       	push	r1
    103c:	0f 92       	push	r0
    103e:	0f b6       	in	r0, 0x3f	; 63
    1040:	0f 92       	push	r0
    1042:	11 24       	eor	r1, r1
    1044:	2f 93       	push	r18
    1046:	3f 93       	push	r19
    1048:	4f 93       	push	r20
    104a:	5f 93       	push	r21
    104c:	6f 93       	push	r22
    104e:	7f 93       	push	r23
    1050:	8f 93       	push	r24
    1052:	9f 93       	push	r25
    1054:	af 93       	push	r26
    1056:	bf 93       	push	r27
    1058:	ef 93       	push	r30
    105a:	ff 93       	push	r31
    105c:	df 93       	push	r29
    105e:	cf 93       	push	r28
    1060:	cd b7       	in	r28, 0x3d	; 61
    1062:	de b7       	in	r29, 0x3e	; 62
	//read the result
#if ADC_u8_RESOLUTION==EIGHT_BIT
	*ADC_pu16Result=ADCH;
    1064:	a0 91 88 01 	lds	r26, 0x0188
    1068:	b0 91 89 01 	lds	r27, 0x0189
    106c:	e5 e2       	ldi	r30, 0x25	; 37
    106e:	f0 e0       	ldi	r31, 0x00	; 0
    1070:	80 81       	ld	r24, Z
    1072:	88 2f       	mov	r24, r24
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	8d 93       	st	X+, r24
    1078:	9c 93       	st	X, r25
#else
#error "wrong ADC_u8_RESOLUTION configuration option"
#endif

	//Disable the ADC conversion complete interrupt enable
	CLR_BIT(ADCSRA,ADCSRA_ADIE);
    107a:	a6 e2       	ldi	r26, 0x26	; 38
    107c:	b0 e0       	ldi	r27, 0x00	; 0
    107e:	e6 e2       	ldi	r30, 0x26	; 38
    1080:	f0 e0       	ldi	r31, 0x00	; 0
    1082:	80 81       	ld	r24, Z
    1084:	87 7f       	andi	r24, 0xF7	; 247
    1086:	8c 93       	st	X, r24

	//ADC is now Idle
	ADC_u8BusyFlag=IDLE;
    1088:	81 e0       	ldi	r24, 0x01	; 1
    108a:	80 93 81 01 	sts	0x0181, r24

	//invoke the call back notification function
	if(ADC_pvNotificationFunc != NULL)
    108e:	80 91 8a 01 	lds	r24, 0x018A
    1092:	90 91 8b 01 	lds	r25, 0x018B
    1096:	00 97       	sbiw	r24, 0x00	; 0
    1098:	29 f0       	breq	.+10     	; 0x10a4 <__vector_16+0x6a>
	{
		ADC_pvNotificationFunc();
    109a:	e0 91 8a 01 	lds	r30, 0x018A
    109e:	f0 91 8b 01 	lds	r31, 0x018B
    10a2:	09 95       	icall
	}
	else
	{
		//do nothing
	}
}
    10a4:	cf 91       	pop	r28
    10a6:	df 91       	pop	r29
    10a8:	ff 91       	pop	r31
    10aa:	ef 91       	pop	r30
    10ac:	bf 91       	pop	r27
    10ae:	af 91       	pop	r26
    10b0:	9f 91       	pop	r25
    10b2:	8f 91       	pop	r24
    10b4:	7f 91       	pop	r23
    10b6:	6f 91       	pop	r22
    10b8:	5f 91       	pop	r21
    10ba:	4f 91       	pop	r20
    10bc:	3f 91       	pop	r19
    10be:	2f 91       	pop	r18
    10c0:	0f 90       	pop	r0
    10c2:	0f be       	out	0x3f, r0	; 63
    10c4:	0f 90       	pop	r0
    10c6:	1f 90       	pop	r1
    10c8:	18 95       	reti

000010ca <DIO_u8SetPinValue>:
#include "DIO_private.h"
#include "DIO_reg.h"
#include "DIO_config.h"

uint8 DIO_u8SetPinValue(uint8 Copy_u8Port,uint8 Copy_u8PinNumber,uint8 Copy_u8Value)
{
    10ca:	df 93       	push	r29
    10cc:	cf 93       	push	r28
    10ce:	cd b7       	in	r28, 0x3d	; 61
    10d0:	de b7       	in	r29, 0x3e	; 62
    10d2:	28 97       	sbiw	r28, 0x08	; 8
    10d4:	0f b6       	in	r0, 0x3f	; 63
    10d6:	f8 94       	cli
    10d8:	de bf       	out	0x3e, r29	; 62
    10da:	0f be       	out	0x3f, r0	; 63
    10dc:	cd bf       	out	0x3d, r28	; 61
    10de:	8a 83       	std	Y+2, r24	; 0x02
    10e0:	6b 83       	std	Y+3, r22	; 0x03
    10e2:	4c 83       	std	Y+4, r20	; 0x04
	uint8 Local_u8ErrorState = OK;
    10e4:	81 e0       	ldi	r24, 0x01	; 1
    10e6:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_u8PinNumber <= DIO_u8_PIN7)
    10e8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ea:	88 30       	cpi	r24, 0x08	; 8
    10ec:	08 f0       	brcs	.+2      	; 0x10f0 <DIO_u8SetPinValue+0x26>
    10ee:	f4 c0       	rjmp	.+488    	; 0x12d8 <DIO_u8SetPinValue+0x20e>
	{

		if(Copy_u8Value == DIO_u8_PIN_LOW)
    10f0:	8c 81       	ldd	r24, Y+4	; 0x04
    10f2:	88 23       	and	r24, r24
    10f4:	09 f0       	breq	.+2      	; 0x10f8 <DIO_u8SetPinValue+0x2e>
    10f6:	77 c0       	rjmp	.+238    	; 0x11e6 <DIO_u8SetPinValue+0x11c>
		{
			switch(Copy_u8Port)
    10f8:	8a 81       	ldd	r24, Y+2	; 0x02
    10fa:	28 2f       	mov	r18, r24
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	38 87       	std	Y+8, r19	; 0x08
    1100:	2f 83       	std	Y+7, r18	; 0x07
    1102:	8f 81       	ldd	r24, Y+7	; 0x07
    1104:	98 85       	ldd	r25, Y+8	; 0x08
    1106:	81 30       	cpi	r24, 0x01	; 1
    1108:	91 05       	cpc	r25, r1
    110a:	59 f1       	breq	.+86     	; 0x1162 <DIO_u8SetPinValue+0x98>
    110c:	2f 81       	ldd	r18, Y+7	; 0x07
    110e:	38 85       	ldd	r19, Y+8	; 0x08
    1110:	22 30       	cpi	r18, 0x02	; 2
    1112:	31 05       	cpc	r19, r1
    1114:	2c f4       	brge	.+10     	; 0x1120 <DIO_u8SetPinValue+0x56>
    1116:	8f 81       	ldd	r24, Y+7	; 0x07
    1118:	98 85       	ldd	r25, Y+8	; 0x08
    111a:	00 97       	sbiw	r24, 0x00	; 0
    111c:	69 f0       	breq	.+26     	; 0x1138 <DIO_u8SetPinValue+0x6e>
    111e:	60 c0       	rjmp	.+192    	; 0x11e0 <DIO_u8SetPinValue+0x116>
    1120:	2f 81       	ldd	r18, Y+7	; 0x07
    1122:	38 85       	ldd	r19, Y+8	; 0x08
    1124:	22 30       	cpi	r18, 0x02	; 2
    1126:	31 05       	cpc	r19, r1
    1128:	89 f1       	breq	.+98     	; 0x118c <DIO_u8SetPinValue+0xc2>
    112a:	8f 81       	ldd	r24, Y+7	; 0x07
    112c:	98 85       	ldd	r25, Y+8	; 0x08
    112e:	83 30       	cpi	r24, 0x03	; 3
    1130:	91 05       	cpc	r25, r1
    1132:	09 f4       	brne	.+2      	; 0x1136 <DIO_u8SetPinValue+0x6c>
    1134:	40 c0       	rjmp	.+128    	; 0x11b6 <DIO_u8SetPinValue+0xec>
    1136:	54 c0       	rjmp	.+168    	; 0x11e0 <DIO_u8SetPinValue+0x116>
			{
			case DIO_u8_PORTA: CLR_BIT(PORTA,Copy_u8PinNumber); break;
    1138:	ab e3       	ldi	r26, 0x3B	; 59
    113a:	b0 e0       	ldi	r27, 0x00	; 0
    113c:	eb e3       	ldi	r30, 0x3B	; 59
    113e:	f0 e0       	ldi	r31, 0x00	; 0
    1140:	80 81       	ld	r24, Z
    1142:	48 2f       	mov	r20, r24
    1144:	8b 81       	ldd	r24, Y+3	; 0x03
    1146:	28 2f       	mov	r18, r24
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	81 e0       	ldi	r24, 0x01	; 1
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	02 2e       	mov	r0, r18
    1150:	02 c0       	rjmp	.+4      	; 0x1156 <DIO_u8SetPinValue+0x8c>
    1152:	88 0f       	add	r24, r24
    1154:	99 1f       	adc	r25, r25
    1156:	0a 94       	dec	r0
    1158:	e2 f7       	brpl	.-8      	; 0x1152 <DIO_u8SetPinValue+0x88>
    115a:	80 95       	com	r24
    115c:	84 23       	and	r24, r20
    115e:	8c 93       	st	X, r24
    1160:	bd c0       	rjmp	.+378    	; 0x12dc <DIO_u8SetPinValue+0x212>
			case DIO_u8_PORTB: CLR_BIT(PORTB,Copy_u8PinNumber); break;
    1162:	a8 e3       	ldi	r26, 0x38	; 56
    1164:	b0 e0       	ldi	r27, 0x00	; 0
    1166:	e8 e3       	ldi	r30, 0x38	; 56
    1168:	f0 e0       	ldi	r31, 0x00	; 0
    116a:	80 81       	ld	r24, Z
    116c:	48 2f       	mov	r20, r24
    116e:	8b 81       	ldd	r24, Y+3	; 0x03
    1170:	28 2f       	mov	r18, r24
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	02 2e       	mov	r0, r18
    117a:	02 c0       	rjmp	.+4      	; 0x1180 <DIO_u8SetPinValue+0xb6>
    117c:	88 0f       	add	r24, r24
    117e:	99 1f       	adc	r25, r25
    1180:	0a 94       	dec	r0
    1182:	e2 f7       	brpl	.-8      	; 0x117c <DIO_u8SetPinValue+0xb2>
    1184:	80 95       	com	r24
    1186:	84 23       	and	r24, r20
    1188:	8c 93       	st	X, r24
    118a:	a8 c0       	rjmp	.+336    	; 0x12dc <DIO_u8SetPinValue+0x212>
			case DIO_u8_PORTC: CLR_BIT(PORTC,Copy_u8PinNumber); break;
    118c:	a5 e3       	ldi	r26, 0x35	; 53
    118e:	b0 e0       	ldi	r27, 0x00	; 0
    1190:	e5 e3       	ldi	r30, 0x35	; 53
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	80 81       	ld	r24, Z
    1196:	48 2f       	mov	r20, r24
    1198:	8b 81       	ldd	r24, Y+3	; 0x03
    119a:	28 2f       	mov	r18, r24
    119c:	30 e0       	ldi	r19, 0x00	; 0
    119e:	81 e0       	ldi	r24, 0x01	; 1
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	02 2e       	mov	r0, r18
    11a4:	02 c0       	rjmp	.+4      	; 0x11aa <DIO_u8SetPinValue+0xe0>
    11a6:	88 0f       	add	r24, r24
    11a8:	99 1f       	adc	r25, r25
    11aa:	0a 94       	dec	r0
    11ac:	e2 f7       	brpl	.-8      	; 0x11a6 <DIO_u8SetPinValue+0xdc>
    11ae:	80 95       	com	r24
    11b0:	84 23       	and	r24, r20
    11b2:	8c 93       	st	X, r24
    11b4:	93 c0       	rjmp	.+294    	; 0x12dc <DIO_u8SetPinValue+0x212>
			case DIO_u8_PORTD: CLR_BIT(PORTD,Copy_u8PinNumber); break;
    11b6:	a2 e3       	ldi	r26, 0x32	; 50
    11b8:	b0 e0       	ldi	r27, 0x00	; 0
    11ba:	e2 e3       	ldi	r30, 0x32	; 50
    11bc:	f0 e0       	ldi	r31, 0x00	; 0
    11be:	80 81       	ld	r24, Z
    11c0:	48 2f       	mov	r20, r24
    11c2:	8b 81       	ldd	r24, Y+3	; 0x03
    11c4:	28 2f       	mov	r18, r24
    11c6:	30 e0       	ldi	r19, 0x00	; 0
    11c8:	81 e0       	ldi	r24, 0x01	; 1
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	02 2e       	mov	r0, r18
    11ce:	02 c0       	rjmp	.+4      	; 0x11d4 <DIO_u8SetPinValue+0x10a>
    11d0:	88 0f       	add	r24, r24
    11d2:	99 1f       	adc	r25, r25
    11d4:	0a 94       	dec	r0
    11d6:	e2 f7       	brpl	.-8      	; 0x11d0 <DIO_u8SetPinValue+0x106>
    11d8:	80 95       	com	r24
    11da:	84 23       	and	r24, r20
    11dc:	8c 93       	st	X, r24
    11de:	7e c0       	rjmp	.+252    	; 0x12dc <DIO_u8SetPinValue+0x212>
			default: Local_u8ErrorState= NOK;				   break;
    11e0:	82 e0       	ldi	r24, 0x02	; 2
    11e2:	89 83       	std	Y+1, r24	; 0x01
    11e4:	7b c0       	rjmp	.+246    	; 0x12dc <DIO_u8SetPinValue+0x212>
			}
		}
		else if(Copy_u8Value == DIO_u8_PIN_HIGH)
    11e6:	8c 81       	ldd	r24, Y+4	; 0x04
    11e8:	81 30       	cpi	r24, 0x01	; 1
    11ea:	09 f0       	breq	.+2      	; 0x11ee <DIO_u8SetPinValue+0x124>
    11ec:	72 c0       	rjmp	.+228    	; 0x12d2 <DIO_u8SetPinValue+0x208>
		{
			switch(Copy_u8Port)
    11ee:	8a 81       	ldd	r24, Y+2	; 0x02
    11f0:	28 2f       	mov	r18, r24
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	3e 83       	std	Y+6, r19	; 0x06
    11f6:	2d 83       	std	Y+5, r18	; 0x05
    11f8:	8d 81       	ldd	r24, Y+5	; 0x05
    11fa:	9e 81       	ldd	r25, Y+6	; 0x06
    11fc:	81 30       	cpi	r24, 0x01	; 1
    11fe:	91 05       	cpc	r25, r1
    1200:	49 f1       	breq	.+82     	; 0x1254 <DIO_u8SetPinValue+0x18a>
    1202:	2d 81       	ldd	r18, Y+5	; 0x05
    1204:	3e 81       	ldd	r19, Y+6	; 0x06
    1206:	22 30       	cpi	r18, 0x02	; 2
    1208:	31 05       	cpc	r19, r1
    120a:	2c f4       	brge	.+10     	; 0x1216 <DIO_u8SetPinValue+0x14c>
    120c:	8d 81       	ldd	r24, Y+5	; 0x05
    120e:	9e 81       	ldd	r25, Y+6	; 0x06
    1210:	00 97       	sbiw	r24, 0x00	; 0
    1212:	61 f0       	breq	.+24     	; 0x122c <DIO_u8SetPinValue+0x162>
    1214:	5b c0       	rjmp	.+182    	; 0x12cc <DIO_u8SetPinValue+0x202>
    1216:	2d 81       	ldd	r18, Y+5	; 0x05
    1218:	3e 81       	ldd	r19, Y+6	; 0x06
    121a:	22 30       	cpi	r18, 0x02	; 2
    121c:	31 05       	cpc	r19, r1
    121e:	71 f1       	breq	.+92     	; 0x127c <DIO_u8SetPinValue+0x1b2>
    1220:	8d 81       	ldd	r24, Y+5	; 0x05
    1222:	9e 81       	ldd	r25, Y+6	; 0x06
    1224:	83 30       	cpi	r24, 0x03	; 3
    1226:	91 05       	cpc	r25, r1
    1228:	e9 f1       	breq	.+122    	; 0x12a4 <DIO_u8SetPinValue+0x1da>
    122a:	50 c0       	rjmp	.+160    	; 0x12cc <DIO_u8SetPinValue+0x202>
			{
			case DIO_u8_PORTA: SET_BIT(PORTA,Copy_u8PinNumber); break;
    122c:	ab e3       	ldi	r26, 0x3B	; 59
    122e:	b0 e0       	ldi	r27, 0x00	; 0
    1230:	eb e3       	ldi	r30, 0x3B	; 59
    1232:	f0 e0       	ldi	r31, 0x00	; 0
    1234:	80 81       	ld	r24, Z
    1236:	48 2f       	mov	r20, r24
    1238:	8b 81       	ldd	r24, Y+3	; 0x03
    123a:	28 2f       	mov	r18, r24
    123c:	30 e0       	ldi	r19, 0x00	; 0
    123e:	81 e0       	ldi	r24, 0x01	; 1
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	02 2e       	mov	r0, r18
    1244:	02 c0       	rjmp	.+4      	; 0x124a <DIO_u8SetPinValue+0x180>
    1246:	88 0f       	add	r24, r24
    1248:	99 1f       	adc	r25, r25
    124a:	0a 94       	dec	r0
    124c:	e2 f7       	brpl	.-8      	; 0x1246 <DIO_u8SetPinValue+0x17c>
    124e:	84 2b       	or	r24, r20
    1250:	8c 93       	st	X, r24
    1252:	44 c0       	rjmp	.+136    	; 0x12dc <DIO_u8SetPinValue+0x212>
			case DIO_u8_PORTB: SET_BIT(PORTB,Copy_u8PinNumber); break;
    1254:	a8 e3       	ldi	r26, 0x38	; 56
    1256:	b0 e0       	ldi	r27, 0x00	; 0
    1258:	e8 e3       	ldi	r30, 0x38	; 56
    125a:	f0 e0       	ldi	r31, 0x00	; 0
    125c:	80 81       	ld	r24, Z
    125e:	48 2f       	mov	r20, r24
    1260:	8b 81       	ldd	r24, Y+3	; 0x03
    1262:	28 2f       	mov	r18, r24
    1264:	30 e0       	ldi	r19, 0x00	; 0
    1266:	81 e0       	ldi	r24, 0x01	; 1
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	02 2e       	mov	r0, r18
    126c:	02 c0       	rjmp	.+4      	; 0x1272 <DIO_u8SetPinValue+0x1a8>
    126e:	88 0f       	add	r24, r24
    1270:	99 1f       	adc	r25, r25
    1272:	0a 94       	dec	r0
    1274:	e2 f7       	brpl	.-8      	; 0x126e <DIO_u8SetPinValue+0x1a4>
    1276:	84 2b       	or	r24, r20
    1278:	8c 93       	st	X, r24
    127a:	30 c0       	rjmp	.+96     	; 0x12dc <DIO_u8SetPinValue+0x212>
			case DIO_u8_PORTC: SET_BIT(PORTC,Copy_u8PinNumber); break;
    127c:	a5 e3       	ldi	r26, 0x35	; 53
    127e:	b0 e0       	ldi	r27, 0x00	; 0
    1280:	e5 e3       	ldi	r30, 0x35	; 53
    1282:	f0 e0       	ldi	r31, 0x00	; 0
    1284:	80 81       	ld	r24, Z
    1286:	48 2f       	mov	r20, r24
    1288:	8b 81       	ldd	r24, Y+3	; 0x03
    128a:	28 2f       	mov	r18, r24
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	81 e0       	ldi	r24, 0x01	; 1
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	02 2e       	mov	r0, r18
    1294:	02 c0       	rjmp	.+4      	; 0x129a <DIO_u8SetPinValue+0x1d0>
    1296:	88 0f       	add	r24, r24
    1298:	99 1f       	adc	r25, r25
    129a:	0a 94       	dec	r0
    129c:	e2 f7       	brpl	.-8      	; 0x1296 <DIO_u8SetPinValue+0x1cc>
    129e:	84 2b       	or	r24, r20
    12a0:	8c 93       	st	X, r24
    12a2:	1c c0       	rjmp	.+56     	; 0x12dc <DIO_u8SetPinValue+0x212>
			case DIO_u8_PORTD: SET_BIT(PORTD,Copy_u8PinNumber); break;
    12a4:	a2 e3       	ldi	r26, 0x32	; 50
    12a6:	b0 e0       	ldi	r27, 0x00	; 0
    12a8:	e2 e3       	ldi	r30, 0x32	; 50
    12aa:	f0 e0       	ldi	r31, 0x00	; 0
    12ac:	80 81       	ld	r24, Z
    12ae:	48 2f       	mov	r20, r24
    12b0:	8b 81       	ldd	r24, Y+3	; 0x03
    12b2:	28 2f       	mov	r18, r24
    12b4:	30 e0       	ldi	r19, 0x00	; 0
    12b6:	81 e0       	ldi	r24, 0x01	; 1
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	02 2e       	mov	r0, r18
    12bc:	02 c0       	rjmp	.+4      	; 0x12c2 <DIO_u8SetPinValue+0x1f8>
    12be:	88 0f       	add	r24, r24
    12c0:	99 1f       	adc	r25, r25
    12c2:	0a 94       	dec	r0
    12c4:	e2 f7       	brpl	.-8      	; 0x12be <DIO_u8SetPinValue+0x1f4>
    12c6:	84 2b       	or	r24, r20
    12c8:	8c 93       	st	X, r24
    12ca:	08 c0       	rjmp	.+16     	; 0x12dc <DIO_u8SetPinValue+0x212>
			default: Local_u8ErrorState= NOK;				   break;
    12cc:	82 e0       	ldi	r24, 0x02	; 2
    12ce:	89 83       	std	Y+1, r24	; 0x01
    12d0:	05 c0       	rjmp	.+10     	; 0x12dc <DIO_u8SetPinValue+0x212>
			}
		}
		else
		{
			/*Error direction input*/
			Local_u8ErrorState= NOK;
    12d2:	82 e0       	ldi	r24, 0x02	; 2
    12d4:	89 83       	std	Y+1, r24	; 0x01
    12d6:	02 c0       	rjmp	.+4      	; 0x12dc <DIO_u8SetPinValue+0x212>
		}
	}
	else
	{
		/*error pin number input*/
		Local_u8ErrorState= NOK;
    12d8:	82 e0       	ldi	r24, 0x02	; 2
    12da:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    12dc:	89 81       	ldd	r24, Y+1	; 0x01
}
    12de:	28 96       	adiw	r28, 0x08	; 8
    12e0:	0f b6       	in	r0, 0x3f	; 63
    12e2:	f8 94       	cli
    12e4:	de bf       	out	0x3e, r29	; 62
    12e6:	0f be       	out	0x3f, r0	; 63
    12e8:	cd bf       	out	0x3d, r28	; 61
    12ea:	cf 91       	pop	r28
    12ec:	df 91       	pop	r29
    12ee:	08 95       	ret

000012f0 <DIO_u8SetPortValue>:

uint8 DIO_u8SetPortValue(uint8 Copy_u8Port,uint8 Copy_u8Value)
{
    12f0:	df 93       	push	r29
    12f2:	cf 93       	push	r28
    12f4:	00 d0       	rcall	.+0      	; 0x12f6 <DIO_u8SetPortValue+0x6>
    12f6:	00 d0       	rcall	.+0      	; 0x12f8 <DIO_u8SetPortValue+0x8>
    12f8:	0f 92       	push	r0
    12fa:	cd b7       	in	r28, 0x3d	; 61
    12fc:	de b7       	in	r29, 0x3e	; 62
    12fe:	8a 83       	std	Y+2, r24	; 0x02
    1300:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Local_u8ErrorState = OK;
    1302:	81 e0       	ldi	r24, 0x01	; 1
    1304:	89 83       	std	Y+1, r24	; 0x01

	switch(Copy_u8Port)
    1306:	8a 81       	ldd	r24, Y+2	; 0x02
    1308:	28 2f       	mov	r18, r24
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	3d 83       	std	Y+5, r19	; 0x05
    130e:	2c 83       	std	Y+4, r18	; 0x04
    1310:	8c 81       	ldd	r24, Y+4	; 0x04
    1312:	9d 81       	ldd	r25, Y+5	; 0x05
    1314:	81 30       	cpi	r24, 0x01	; 1
    1316:	91 05       	cpc	r25, r1
    1318:	d1 f0       	breq	.+52     	; 0x134e <DIO_u8SetPortValue+0x5e>
    131a:	2c 81       	ldd	r18, Y+4	; 0x04
    131c:	3d 81       	ldd	r19, Y+5	; 0x05
    131e:	22 30       	cpi	r18, 0x02	; 2
    1320:	31 05       	cpc	r19, r1
    1322:	2c f4       	brge	.+10     	; 0x132e <DIO_u8SetPortValue+0x3e>
    1324:	8c 81       	ldd	r24, Y+4	; 0x04
    1326:	9d 81       	ldd	r25, Y+5	; 0x05
    1328:	00 97       	sbiw	r24, 0x00	; 0
    132a:	61 f0       	breq	.+24     	; 0x1344 <DIO_u8SetPortValue+0x54>
    132c:	1f c0       	rjmp	.+62     	; 0x136c <DIO_u8SetPortValue+0x7c>
    132e:	2c 81       	ldd	r18, Y+4	; 0x04
    1330:	3d 81       	ldd	r19, Y+5	; 0x05
    1332:	22 30       	cpi	r18, 0x02	; 2
    1334:	31 05       	cpc	r19, r1
    1336:	81 f0       	breq	.+32     	; 0x1358 <DIO_u8SetPortValue+0x68>
    1338:	8c 81       	ldd	r24, Y+4	; 0x04
    133a:	9d 81       	ldd	r25, Y+5	; 0x05
    133c:	83 30       	cpi	r24, 0x03	; 3
    133e:	91 05       	cpc	r25, r1
    1340:	81 f0       	breq	.+32     	; 0x1362 <DIO_u8SetPortValue+0x72>
    1342:	14 c0       	rjmp	.+40     	; 0x136c <DIO_u8SetPortValue+0x7c>
	{
	case DIO_u8_PORTA : PORTA = Copy_u8Value; break;
    1344:	eb e3       	ldi	r30, 0x3B	; 59
    1346:	f0 e0       	ldi	r31, 0x00	; 0
    1348:	8b 81       	ldd	r24, Y+3	; 0x03
    134a:	80 83       	st	Z, r24
    134c:	11 c0       	rjmp	.+34     	; 0x1370 <DIO_u8SetPortValue+0x80>
	case DIO_u8_PORTB : PORTB = Copy_u8Value; break;
    134e:	e8 e3       	ldi	r30, 0x38	; 56
    1350:	f0 e0       	ldi	r31, 0x00	; 0
    1352:	8b 81       	ldd	r24, Y+3	; 0x03
    1354:	80 83       	st	Z, r24
    1356:	0c c0       	rjmp	.+24     	; 0x1370 <DIO_u8SetPortValue+0x80>
	case DIO_u8_PORTC : PORTC = Copy_u8Value; break;
    1358:	e5 e3       	ldi	r30, 0x35	; 53
    135a:	f0 e0       	ldi	r31, 0x00	; 0
    135c:	8b 81       	ldd	r24, Y+3	; 0x03
    135e:	80 83       	st	Z, r24
    1360:	07 c0       	rjmp	.+14     	; 0x1370 <DIO_u8SetPortValue+0x80>
	case DIO_u8_PORTD : PORTD = Copy_u8Value; break;
    1362:	e2 e3       	ldi	r30, 0x32	; 50
    1364:	f0 e0       	ldi	r31, 0x00	; 0
    1366:	8b 81       	ldd	r24, Y+3	; 0x03
    1368:	80 83       	st	Z, r24
    136a:	02 c0       	rjmp	.+4      	; 0x1370 <DIO_u8SetPortValue+0x80>
	default: Local_u8ErrorState= NOK; 			 break;
    136c:	82 e0       	ldi	r24, 0x02	; 2
    136e:	89 83       	std	Y+1, r24	; 0x01

	}
	return Local_u8ErrorState;
    1370:	89 81       	ldd	r24, Y+1	; 0x01
}
    1372:	0f 90       	pop	r0
    1374:	0f 90       	pop	r0
    1376:	0f 90       	pop	r0
    1378:	0f 90       	pop	r0
    137a:	0f 90       	pop	r0
    137c:	cf 91       	pop	r28
    137e:	df 91       	pop	r29
    1380:	08 95       	ret

00001382 <DIO_u8GetPinValue>:

uint8 DIO_u8GetPinValue(uint8 Copy_u8Port,uint8 Copy_u8PinNumber,uint8* Copy_pu8Value)
{
    1382:	df 93       	push	r29
    1384:	cf 93       	push	r28
    1386:	cd b7       	in	r28, 0x3d	; 61
    1388:	de b7       	in	r29, 0x3e	; 62
    138a:	27 97       	sbiw	r28, 0x07	; 7
    138c:	0f b6       	in	r0, 0x3f	; 63
    138e:	f8 94       	cli
    1390:	de bf       	out	0x3e, r29	; 62
    1392:	0f be       	out	0x3f, r0	; 63
    1394:	cd bf       	out	0x3d, r28	; 61
    1396:	8a 83       	std	Y+2, r24	; 0x02
    1398:	6b 83       	std	Y+3, r22	; 0x03
    139a:	5d 83       	std	Y+5, r21	; 0x05
    139c:	4c 83       	std	Y+4, r20	; 0x04
	uint8 Local_u8ErrorState = OK;
    139e:	81 e0       	ldi	r24, 0x01	; 1
    13a0:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_u8PinNumber <= DIO_u8_PIN7)
    13a2:	8b 81       	ldd	r24, Y+3	; 0x03
    13a4:	88 30       	cpi	r24, 0x08	; 8
    13a6:	08 f0       	brcs	.+2      	; 0x13aa <DIO_u8GetPinValue+0x28>
    13a8:	74 c0       	rjmp	.+232    	; 0x1492 <DIO_u8GetPinValue+0x110>
	{
		switch(Copy_u8Port)
    13aa:	8a 81       	ldd	r24, Y+2	; 0x02
    13ac:	28 2f       	mov	r18, r24
    13ae:	30 e0       	ldi	r19, 0x00	; 0
    13b0:	3f 83       	std	Y+7, r19	; 0x07
    13b2:	2e 83       	std	Y+6, r18	; 0x06
    13b4:	4e 81       	ldd	r20, Y+6	; 0x06
    13b6:	5f 81       	ldd	r21, Y+7	; 0x07
    13b8:	41 30       	cpi	r20, 0x01	; 1
    13ba:	51 05       	cpc	r21, r1
    13bc:	59 f1       	breq	.+86     	; 0x1414 <DIO_u8GetPinValue+0x92>
    13be:	8e 81       	ldd	r24, Y+6	; 0x06
    13c0:	9f 81       	ldd	r25, Y+7	; 0x07
    13c2:	82 30       	cpi	r24, 0x02	; 2
    13c4:	91 05       	cpc	r25, r1
    13c6:	34 f4       	brge	.+12     	; 0x13d4 <DIO_u8GetPinValue+0x52>
    13c8:	2e 81       	ldd	r18, Y+6	; 0x06
    13ca:	3f 81       	ldd	r19, Y+7	; 0x07
    13cc:	21 15       	cp	r18, r1
    13ce:	31 05       	cpc	r19, r1
    13d0:	69 f0       	breq	.+26     	; 0x13ec <DIO_u8GetPinValue+0x6a>
    13d2:	5c c0       	rjmp	.+184    	; 0x148c <DIO_u8GetPinValue+0x10a>
    13d4:	4e 81       	ldd	r20, Y+6	; 0x06
    13d6:	5f 81       	ldd	r21, Y+7	; 0x07
    13d8:	42 30       	cpi	r20, 0x02	; 2
    13da:	51 05       	cpc	r21, r1
    13dc:	79 f1       	breq	.+94     	; 0x143c <DIO_u8GetPinValue+0xba>
    13de:	8e 81       	ldd	r24, Y+6	; 0x06
    13e0:	9f 81       	ldd	r25, Y+7	; 0x07
    13e2:	83 30       	cpi	r24, 0x03	; 3
    13e4:	91 05       	cpc	r25, r1
    13e6:	09 f4       	brne	.+2      	; 0x13ea <DIO_u8GetPinValue+0x68>
    13e8:	3d c0       	rjmp	.+122    	; 0x1464 <DIO_u8GetPinValue+0xe2>
    13ea:	50 c0       	rjmp	.+160    	; 0x148c <DIO_u8GetPinValue+0x10a>
		{
		case DIO_u8_PORTA : *Copy_pu8Value = GET_BIT(PINA,Copy_u8PinNumber); break;
    13ec:	e9 e3       	ldi	r30, 0x39	; 57
    13ee:	f0 e0       	ldi	r31, 0x00	; 0
    13f0:	80 81       	ld	r24, Z
    13f2:	28 2f       	mov	r18, r24
    13f4:	30 e0       	ldi	r19, 0x00	; 0
    13f6:	8b 81       	ldd	r24, Y+3	; 0x03
    13f8:	88 2f       	mov	r24, r24
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	a9 01       	movw	r20, r18
    13fe:	02 c0       	rjmp	.+4      	; 0x1404 <DIO_u8GetPinValue+0x82>
    1400:	55 95       	asr	r21
    1402:	47 95       	ror	r20
    1404:	8a 95       	dec	r24
    1406:	e2 f7       	brpl	.-8      	; 0x1400 <DIO_u8GetPinValue+0x7e>
    1408:	ca 01       	movw	r24, r20
    140a:	81 70       	andi	r24, 0x01	; 1
    140c:	ec 81       	ldd	r30, Y+4	; 0x04
    140e:	fd 81       	ldd	r31, Y+5	; 0x05
    1410:	80 83       	st	Z, r24
    1412:	41 c0       	rjmp	.+130    	; 0x1496 <DIO_u8GetPinValue+0x114>
		case DIO_u8_PORTB : *Copy_pu8Value = GET_BIT(PINB,Copy_u8PinNumber); break;
    1414:	e6 e3       	ldi	r30, 0x36	; 54
    1416:	f0 e0       	ldi	r31, 0x00	; 0
    1418:	80 81       	ld	r24, Z
    141a:	28 2f       	mov	r18, r24
    141c:	30 e0       	ldi	r19, 0x00	; 0
    141e:	8b 81       	ldd	r24, Y+3	; 0x03
    1420:	88 2f       	mov	r24, r24
    1422:	90 e0       	ldi	r25, 0x00	; 0
    1424:	a9 01       	movw	r20, r18
    1426:	02 c0       	rjmp	.+4      	; 0x142c <DIO_u8GetPinValue+0xaa>
    1428:	55 95       	asr	r21
    142a:	47 95       	ror	r20
    142c:	8a 95       	dec	r24
    142e:	e2 f7       	brpl	.-8      	; 0x1428 <DIO_u8GetPinValue+0xa6>
    1430:	ca 01       	movw	r24, r20
    1432:	81 70       	andi	r24, 0x01	; 1
    1434:	ec 81       	ldd	r30, Y+4	; 0x04
    1436:	fd 81       	ldd	r31, Y+5	; 0x05
    1438:	80 83       	st	Z, r24
    143a:	2d c0       	rjmp	.+90     	; 0x1496 <DIO_u8GetPinValue+0x114>
		case DIO_u8_PORTC : *Copy_pu8Value = GET_BIT(PINC,Copy_u8PinNumber); break;
    143c:	e3 e3       	ldi	r30, 0x33	; 51
    143e:	f0 e0       	ldi	r31, 0x00	; 0
    1440:	80 81       	ld	r24, Z
    1442:	28 2f       	mov	r18, r24
    1444:	30 e0       	ldi	r19, 0x00	; 0
    1446:	8b 81       	ldd	r24, Y+3	; 0x03
    1448:	88 2f       	mov	r24, r24
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	a9 01       	movw	r20, r18
    144e:	02 c0       	rjmp	.+4      	; 0x1454 <DIO_u8GetPinValue+0xd2>
    1450:	55 95       	asr	r21
    1452:	47 95       	ror	r20
    1454:	8a 95       	dec	r24
    1456:	e2 f7       	brpl	.-8      	; 0x1450 <DIO_u8GetPinValue+0xce>
    1458:	ca 01       	movw	r24, r20
    145a:	81 70       	andi	r24, 0x01	; 1
    145c:	ec 81       	ldd	r30, Y+4	; 0x04
    145e:	fd 81       	ldd	r31, Y+5	; 0x05
    1460:	80 83       	st	Z, r24
    1462:	19 c0       	rjmp	.+50     	; 0x1496 <DIO_u8GetPinValue+0x114>
		case DIO_u8_PORTD : *Copy_pu8Value = GET_BIT(PIND,Copy_u8PinNumber); break;
    1464:	e0 e3       	ldi	r30, 0x30	; 48
    1466:	f0 e0       	ldi	r31, 0x00	; 0
    1468:	80 81       	ld	r24, Z
    146a:	28 2f       	mov	r18, r24
    146c:	30 e0       	ldi	r19, 0x00	; 0
    146e:	8b 81       	ldd	r24, Y+3	; 0x03
    1470:	88 2f       	mov	r24, r24
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	a9 01       	movw	r20, r18
    1476:	02 c0       	rjmp	.+4      	; 0x147c <DIO_u8GetPinValue+0xfa>
    1478:	55 95       	asr	r21
    147a:	47 95       	ror	r20
    147c:	8a 95       	dec	r24
    147e:	e2 f7       	brpl	.-8      	; 0x1478 <DIO_u8GetPinValue+0xf6>
    1480:	ca 01       	movw	r24, r20
    1482:	81 70       	andi	r24, 0x01	; 1
    1484:	ec 81       	ldd	r30, Y+4	; 0x04
    1486:	fd 81       	ldd	r31, Y+5	; 0x05
    1488:	80 83       	st	Z, r24
    148a:	05 c0       	rjmp	.+10     	; 0x1496 <DIO_u8GetPinValue+0x114>
		default: Local_u8ErrorState= NOK; 			 break;
    148c:	82 e0       	ldi	r24, 0x02	; 2
    148e:	89 83       	std	Y+1, r24	; 0x01
    1490:	02 c0       	rjmp	.+4      	; 0x1496 <DIO_u8GetPinValue+0x114>

		}
	}
	else
	{
		Local_u8ErrorState= NOK;
    1492:	82 e0       	ldi	r24, 0x02	; 2
    1494:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    1496:	89 81       	ldd	r24, Y+1	; 0x01
}
    1498:	27 96       	adiw	r28, 0x07	; 7
    149a:	0f b6       	in	r0, 0x3f	; 63
    149c:	f8 94       	cli
    149e:	de bf       	out	0x3e, r29	; 62
    14a0:	0f be       	out	0x3f, r0	; 63
    14a2:	cd bf       	out	0x3d, r28	; 61
    14a4:	cf 91       	pop	r28
    14a6:	df 91       	pop	r29
    14a8:	08 95       	ret

000014aa <SendEnablePulse>:
#include "LCD_private.h"
#include "LCD_config.h"
#include "LCD_interface.h"

static void SendEnablePulse(void)
{
    14aa:	df 93       	push	r29
    14ac:	cf 93       	push	r28
    14ae:	cd b7       	in	r28, 0x3d	; 61
    14b0:	de b7       	in	r29, 0x3e	; 62
    14b2:	2e 97       	sbiw	r28, 0x0e	; 14
    14b4:	0f b6       	in	r0, 0x3f	; 63
    14b6:	f8 94       	cli
    14b8:	de bf       	out	0x3e, r29	; 62
    14ba:	0f be       	out	0x3f, r0	; 63
    14bc:	cd bf       	out	0x3d, r28	; 61
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_E_PIN,DIO_u8_PIN_HIGH);
    14be:	81 e0       	ldi	r24, 0x01	; 1
    14c0:	63 e0       	ldi	r22, 0x03	; 3
    14c2:	41 e0       	ldi	r20, 0x01	; 1
    14c4:	0e 94 65 08 	call	0x10ca	; 0x10ca <DIO_u8SetPinValue>
    14c8:	80 e0       	ldi	r24, 0x00	; 0
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	a0 e0       	ldi	r26, 0x00	; 0
    14ce:	b0 e4       	ldi	r27, 0x40	; 64
    14d0:	8b 87       	std	Y+11, r24	; 0x0b
    14d2:	9c 87       	std	Y+12, r25	; 0x0c
    14d4:	ad 87       	std	Y+13, r26	; 0x0d
    14d6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    14da:	7c 85       	ldd	r23, Y+12	; 0x0c
    14dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    14de:	9e 85       	ldd	r25, Y+14	; 0x0e
    14e0:	20 e0       	ldi	r18, 0x00	; 0
    14e2:	30 e0       	ldi	r19, 0x00	; 0
    14e4:	4a e7       	ldi	r20, 0x7A	; 122
    14e6:	55 e4       	ldi	r21, 0x45	; 69
    14e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14ec:	dc 01       	movw	r26, r24
    14ee:	cb 01       	movw	r24, r22
    14f0:	8f 83       	std	Y+7, r24	; 0x07
    14f2:	98 87       	std	Y+8, r25	; 0x08
    14f4:	a9 87       	std	Y+9, r26	; 0x09
    14f6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    14f8:	6f 81       	ldd	r22, Y+7	; 0x07
    14fa:	78 85       	ldd	r23, Y+8	; 0x08
    14fc:	89 85       	ldd	r24, Y+9	; 0x09
    14fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1500:	20 e0       	ldi	r18, 0x00	; 0
    1502:	30 e0       	ldi	r19, 0x00	; 0
    1504:	40 e8       	ldi	r20, 0x80	; 128
    1506:	5f e3       	ldi	r21, 0x3F	; 63
    1508:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    150c:	88 23       	and	r24, r24
    150e:	2c f4       	brge	.+10     	; 0x151a <SendEnablePulse+0x70>
		__ticks = 1;
    1510:	81 e0       	ldi	r24, 0x01	; 1
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	9e 83       	std	Y+6, r25	; 0x06
    1516:	8d 83       	std	Y+5, r24	; 0x05
    1518:	3f c0       	rjmp	.+126    	; 0x1598 <SendEnablePulse+0xee>
	else if (__tmp > 65535)
    151a:	6f 81       	ldd	r22, Y+7	; 0x07
    151c:	78 85       	ldd	r23, Y+8	; 0x08
    151e:	89 85       	ldd	r24, Y+9	; 0x09
    1520:	9a 85       	ldd	r25, Y+10	; 0x0a
    1522:	20 e0       	ldi	r18, 0x00	; 0
    1524:	3f ef       	ldi	r19, 0xFF	; 255
    1526:	4f e7       	ldi	r20, 0x7F	; 127
    1528:	57 e4       	ldi	r21, 0x47	; 71
    152a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    152e:	18 16       	cp	r1, r24
    1530:	4c f5       	brge	.+82     	; 0x1584 <SendEnablePulse+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1532:	6b 85       	ldd	r22, Y+11	; 0x0b
    1534:	7c 85       	ldd	r23, Y+12	; 0x0c
    1536:	8d 85       	ldd	r24, Y+13	; 0x0d
    1538:	9e 85       	ldd	r25, Y+14	; 0x0e
    153a:	20 e0       	ldi	r18, 0x00	; 0
    153c:	30 e0       	ldi	r19, 0x00	; 0
    153e:	40 e2       	ldi	r20, 0x20	; 32
    1540:	51 e4       	ldi	r21, 0x41	; 65
    1542:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1546:	dc 01       	movw	r26, r24
    1548:	cb 01       	movw	r24, r22
    154a:	bc 01       	movw	r22, r24
    154c:	cd 01       	movw	r24, r26
    154e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1552:	dc 01       	movw	r26, r24
    1554:	cb 01       	movw	r24, r22
    1556:	9e 83       	std	Y+6, r25	; 0x06
    1558:	8d 83       	std	Y+5, r24	; 0x05
    155a:	0f c0       	rjmp	.+30     	; 0x157a <SendEnablePulse+0xd0>
    155c:	80 e9       	ldi	r24, 0x90	; 144
    155e:	91 e0       	ldi	r25, 0x01	; 1
    1560:	9c 83       	std	Y+4, r25	; 0x04
    1562:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1564:	8b 81       	ldd	r24, Y+3	; 0x03
    1566:	9c 81       	ldd	r25, Y+4	; 0x04
    1568:	01 97       	sbiw	r24, 0x01	; 1
    156a:	f1 f7       	brne	.-4      	; 0x1568 <SendEnablePulse+0xbe>
    156c:	9c 83       	std	Y+4, r25	; 0x04
    156e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1570:	8d 81       	ldd	r24, Y+5	; 0x05
    1572:	9e 81       	ldd	r25, Y+6	; 0x06
    1574:	01 97       	sbiw	r24, 0x01	; 1
    1576:	9e 83       	std	Y+6, r25	; 0x06
    1578:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    157a:	8d 81       	ldd	r24, Y+5	; 0x05
    157c:	9e 81       	ldd	r25, Y+6	; 0x06
    157e:	00 97       	sbiw	r24, 0x00	; 0
    1580:	69 f7       	brne	.-38     	; 0x155c <SendEnablePulse+0xb2>
    1582:	14 c0       	rjmp	.+40     	; 0x15ac <SendEnablePulse+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1584:	6f 81       	ldd	r22, Y+7	; 0x07
    1586:	78 85       	ldd	r23, Y+8	; 0x08
    1588:	89 85       	ldd	r24, Y+9	; 0x09
    158a:	9a 85       	ldd	r25, Y+10	; 0x0a
    158c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1590:	dc 01       	movw	r26, r24
    1592:	cb 01       	movw	r24, r22
    1594:	9e 83       	std	Y+6, r25	; 0x06
    1596:	8d 83       	std	Y+5, r24	; 0x05
    1598:	8d 81       	ldd	r24, Y+5	; 0x05
    159a:	9e 81       	ldd	r25, Y+6	; 0x06
    159c:	9a 83       	std	Y+2, r25	; 0x02
    159e:	89 83       	std	Y+1, r24	; 0x01
    15a0:	89 81       	ldd	r24, Y+1	; 0x01
    15a2:	9a 81       	ldd	r25, Y+2	; 0x02
    15a4:	01 97       	sbiw	r24, 0x01	; 1
    15a6:	f1 f7       	brne	.-4      	; 0x15a4 <SendEnablePulse+0xfa>
    15a8:	9a 83       	std	Y+2, r25	; 0x02
    15aa:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_E_PIN,DIO_u8_PIN_LOW);
    15ac:	81 e0       	ldi	r24, 0x01	; 1
    15ae:	63 e0       	ldi	r22, 0x03	; 3
    15b0:	40 e0       	ldi	r20, 0x00	; 0
    15b2:	0e 94 65 08 	call	0x10ca	; 0x10ca <DIO_u8SetPinValue>
}
    15b6:	2e 96       	adiw	r28, 0x0e	; 14
    15b8:	0f b6       	in	r0, 0x3f	; 63
    15ba:	f8 94       	cli
    15bc:	de bf       	out	0x3e, r29	; 62
    15be:	0f be       	out	0x3f, r0	; 63
    15c0:	cd bf       	out	0x3d, r28	; 61
    15c2:	cf 91       	pop	r28
    15c4:	df 91       	pop	r29
    15c6:	08 95       	ret

000015c8 <SetHalfDataPort>:

static void SetHalfDataPort(uint8 Copy_u8Data)
{
    15c8:	df 93       	push	r29
    15ca:	cf 93       	push	r28
    15cc:	00 d0       	rcall	.+0      	; 0x15ce <SetHalfDataPort+0x6>
    15ce:	00 d0       	rcall	.+0      	; 0x15d0 <SetHalfDataPort+0x8>
    15d0:	00 d0       	rcall	.+0      	; 0x15d2 <SetHalfDataPort+0xa>
    15d2:	cd b7       	in	r28, 0x3d	; 61
    15d4:	de b7       	in	r29, 0x3e	; 62
    15d6:	8e 83       	std	Y+6, r24	; 0x06
	uint8 Local_u8DataPins[4]={LCD_DATA_PIN4,LCD_DATA_PIN5,LCD_DATA_PIN6,LCD_DATA_PIN7};
    15d8:	87 e0       	ldi	r24, 0x07	; 7
    15da:	8a 83       	std	Y+2, r24	; 0x02
    15dc:	85 e0       	ldi	r24, 0x05	; 5
    15de:	8b 83       	std	Y+3, r24	; 0x03
    15e0:	86 e0       	ldi	r24, 0x06	; 6
    15e2:	8c 83       	std	Y+4, r24	; 0x04
    15e4:	87 e0       	ldi	r24, 0x07	; 7
    15e6:	8d 83       	std	Y+5, r24	; 0x05
	uint8 Local_u8Iterator;
	for(Local_u8Iterator=0;Local_u8Iterator<4;Local_u8Iterator++)
    15e8:	19 82       	std	Y+1, r1	; 0x01
    15ea:	41 c0       	rjmp	.+130    	; 0x166e <SetHalfDataPort+0xa6>
	{
		if(Local_u8Iterator==0)
    15ec:	89 81       	ldd	r24, Y+1	; 0x01
    15ee:	88 23       	and	r24, r24
    15f0:	f1 f4       	brne	.+60     	; 0x162e <SetHalfDataPort+0x66>
		{
			DIO_u8SetPinValue(LCD_CTRL_PORT,Local_u8DataPins[Local_u8Iterator],(GET_BIT(Copy_u8Data,Local_u8Iterator)));
    15f2:	89 81       	ldd	r24, Y+1	; 0x01
    15f4:	28 2f       	mov	r18, r24
    15f6:	30 e0       	ldi	r19, 0x00	; 0
    15f8:	ce 01       	movw	r24, r28
    15fa:	02 96       	adiw	r24, 0x02	; 2
    15fc:	fc 01       	movw	r30, r24
    15fe:	e2 0f       	add	r30, r18
    1600:	f3 1f       	adc	r31, r19
    1602:	40 81       	ld	r20, Z
    1604:	8e 81       	ldd	r24, Y+6	; 0x06
    1606:	28 2f       	mov	r18, r24
    1608:	30 e0       	ldi	r19, 0x00	; 0
    160a:	89 81       	ldd	r24, Y+1	; 0x01
    160c:	88 2f       	mov	r24, r24
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	b9 01       	movw	r22, r18
    1612:	02 c0       	rjmp	.+4      	; 0x1618 <SetHalfDataPort+0x50>
    1614:	75 95       	asr	r23
    1616:	67 95       	ror	r22
    1618:	8a 95       	dec	r24
    161a:	e2 f7       	brpl	.-8      	; 0x1614 <SetHalfDataPort+0x4c>
    161c:	cb 01       	movw	r24, r22
    161e:	98 2f       	mov	r25, r24
    1620:	91 70       	andi	r25, 0x01	; 1
    1622:	81 e0       	ldi	r24, 0x01	; 1
    1624:	64 2f       	mov	r22, r20
    1626:	49 2f       	mov	r20, r25
    1628:	0e 94 65 08 	call	0x10ca	; 0x10ca <DIO_u8SetPinValue>
    162c:	1d c0       	rjmp	.+58     	; 0x1668 <SetHalfDataPort+0xa0>
		}
		else
		{
			DIO_u8SetPinValue(LCD_DATA_PORT,Local_u8DataPins[Local_u8Iterator],(GET_BIT(Copy_u8Data,Local_u8Iterator)));
    162e:	89 81       	ldd	r24, Y+1	; 0x01
    1630:	28 2f       	mov	r18, r24
    1632:	30 e0       	ldi	r19, 0x00	; 0
    1634:	ce 01       	movw	r24, r28
    1636:	02 96       	adiw	r24, 0x02	; 2
    1638:	fc 01       	movw	r30, r24
    163a:	e2 0f       	add	r30, r18
    163c:	f3 1f       	adc	r31, r19
    163e:	40 81       	ld	r20, Z
    1640:	8e 81       	ldd	r24, Y+6	; 0x06
    1642:	28 2f       	mov	r18, r24
    1644:	30 e0       	ldi	r19, 0x00	; 0
    1646:	89 81       	ldd	r24, Y+1	; 0x01
    1648:	88 2f       	mov	r24, r24
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	b9 01       	movw	r22, r18
    164e:	02 c0       	rjmp	.+4      	; 0x1654 <SetHalfDataPort+0x8c>
    1650:	75 95       	asr	r23
    1652:	67 95       	ror	r22
    1654:	8a 95       	dec	r24
    1656:	e2 f7       	brpl	.-8      	; 0x1650 <SetHalfDataPort+0x88>
    1658:	cb 01       	movw	r24, r22
    165a:	98 2f       	mov	r25, r24
    165c:	91 70       	andi	r25, 0x01	; 1
    165e:	80 e0       	ldi	r24, 0x00	; 0
    1660:	64 2f       	mov	r22, r20
    1662:	49 2f       	mov	r20, r25
    1664:	0e 94 65 08 	call	0x10ca	; 0x10ca <DIO_u8SetPinValue>

static void SetHalfDataPort(uint8 Copy_u8Data)
{
	uint8 Local_u8DataPins[4]={LCD_DATA_PIN4,LCD_DATA_PIN5,LCD_DATA_PIN6,LCD_DATA_PIN7};
	uint8 Local_u8Iterator;
	for(Local_u8Iterator=0;Local_u8Iterator<4;Local_u8Iterator++)
    1668:	89 81       	ldd	r24, Y+1	; 0x01
    166a:	8f 5f       	subi	r24, 0xFF	; 255
    166c:	89 83       	std	Y+1, r24	; 0x01
    166e:	89 81       	ldd	r24, Y+1	; 0x01
    1670:	84 30       	cpi	r24, 0x04	; 4
    1672:	08 f4       	brcc	.+2      	; 0x1676 <SetHalfDataPort+0xae>
    1674:	bb cf       	rjmp	.-138    	; 0x15ec <SetHalfDataPort+0x24>
		else
		{
			DIO_u8SetPinValue(LCD_DATA_PORT,Local_u8DataPins[Local_u8Iterator],(GET_BIT(Copy_u8Data,Local_u8Iterator)));
		}
	}
}
    1676:	26 96       	adiw	r28, 0x06	; 6
    1678:	0f b6       	in	r0, 0x3f	; 63
    167a:	f8 94       	cli
    167c:	de bf       	out	0x3e, r29	; 62
    167e:	0f be       	out	0x3f, r0	; 63
    1680:	cd bf       	out	0x3d, r28	; 61
    1682:	cf 91       	pop	r28
    1684:	df 91       	pop	r29
    1686:	08 95       	ret

00001688 <LCD_VoidSendCommand>:

void LCD_VoidSendCommand(uint8 Copy_u8Command)
{
    1688:	df 93       	push	r29
    168a:	cf 93       	push	r28
    168c:	0f 92       	push	r0
    168e:	cd b7       	in	r28, 0x3d	; 61
    1690:	de b7       	in	r29, 0x3e	; 62
    1692:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,DIO_u8_PIN_LOW);
    1694:	81 e0       	ldi	r24, 0x01	; 1
    1696:	61 e0       	ldi	r22, 0x01	; 1
    1698:	40 e0       	ldi	r20, 0x00	; 0
    169a:	0e 94 65 08 	call	0x10ca	; 0x10ca <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_RW_PIN,DIO_u8_PIN_LOW);
    169e:	81 e0       	ldi	r24, 0x01	; 1
    16a0:	62 e0       	ldi	r22, 0x02	; 2
    16a2:	40 e0       	ldi	r20, 0x00	; 0
    16a4:	0e 94 65 08 	call	0x10ca	; 0x10ca <DIO_u8SetPinValue>
#if LCD_u8_BIT_MODE == EIGHT_BIT
	DIO_u8SetPortValue(LCD_DATA_PORT,Copy_u8Command);
	SendEnablePulse();
#elif LCD_u8_BIT_MODE == FOUR_BIT
	SetHalfDataPort(Copy_u8Command>>4);
    16a8:	89 81       	ldd	r24, Y+1	; 0x01
    16aa:	82 95       	swap	r24
    16ac:	8f 70       	andi	r24, 0x0F	; 15
    16ae:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <SetHalfDataPort>
	SendEnablePulse();
    16b2:	0e 94 55 0a 	call	0x14aa	; 0x14aa <SendEnablePulse>
	SetHalfDataPort(Copy_u8Command);
    16b6:	89 81       	ldd	r24, Y+1	; 0x01
    16b8:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <SetHalfDataPort>
	SendEnablePulse();
    16bc:	0e 94 55 0a 	call	0x14aa	; 0x14aa <SendEnablePulse>
#endif
}
    16c0:	0f 90       	pop	r0
    16c2:	cf 91       	pop	r28
    16c4:	df 91       	pop	r29
    16c6:	08 95       	ret

000016c8 <LCD_VoidSendData>:

void LCD_VoidSendData(uint8 Copy_u8Data)
{
    16c8:	df 93       	push	r29
    16ca:	cf 93       	push	r28
    16cc:	0f 92       	push	r0
    16ce:	cd b7       	in	r28, 0x3d	; 61
    16d0:	de b7       	in	r29, 0x3e	; 62
    16d2:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,DIO_u8_PIN_HIGH);
    16d4:	81 e0       	ldi	r24, 0x01	; 1
    16d6:	61 e0       	ldi	r22, 0x01	; 1
    16d8:	41 e0       	ldi	r20, 0x01	; 1
    16da:	0e 94 65 08 	call	0x10ca	; 0x10ca <DIO_u8SetPinValue>
	DIO_u8SetPinValue(LCD_CTRL_PORT,LCD_RW_PIN,DIO_u8_PIN_LOW);
    16de:	81 e0       	ldi	r24, 0x01	; 1
    16e0:	62 e0       	ldi	r22, 0x02	; 2
    16e2:	40 e0       	ldi	r20, 0x00	; 0
    16e4:	0e 94 65 08 	call	0x10ca	; 0x10ca <DIO_u8SetPinValue>
#if LCD_u8_BIT_MODE == EIGHT_BIT
	DIO_u8SetPortValue(LCD_DATA_PORT,Copy_u8Data);
	SendEnablePulse();
#elif LCD_u8_BIT_MODE == FOUR_BIT
	SetHalfDataPort(Copy_u8Data>>4);
    16e8:	89 81       	ldd	r24, Y+1	; 0x01
    16ea:	82 95       	swap	r24
    16ec:	8f 70       	andi	r24, 0x0F	; 15
    16ee:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <SetHalfDataPort>
	SendEnablePulse();
    16f2:	0e 94 55 0a 	call	0x14aa	; 0x14aa <SendEnablePulse>
	SetHalfDataPort(Copy_u8Data);
    16f6:	89 81       	ldd	r24, Y+1	; 0x01
    16f8:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <SetHalfDataPort>
	SendEnablePulse();
    16fc:	0e 94 55 0a 	call	0x14aa	; 0x14aa <SendEnablePulse>
#endif

}
    1700:	0f 90       	pop	r0
    1702:	cf 91       	pop	r28
    1704:	df 91       	pop	r29
    1706:	08 95       	ret

00001708 <LCD_VoidInit>:

void LCD_VoidInit(void)
{
    1708:	df 93       	push	r29
    170a:	cf 93       	push	r28
    170c:	cd b7       	in	r28, 0x3d	; 61
    170e:	de b7       	in	r29, 0x3e	; 62
    1710:	2e 97       	sbiw	r28, 0x0e	; 14
    1712:	0f b6       	in	r0, 0x3f	; 63
    1714:	f8 94       	cli
    1716:	de bf       	out	0x3e, r29	; 62
    1718:	0f be       	out	0x3f, r0	; 63
    171a:	cd bf       	out	0x3d, r28	; 61
    171c:	80 e0       	ldi	r24, 0x00	; 0
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	a0 e2       	ldi	r26, 0x20	; 32
    1722:	b2 e4       	ldi	r27, 0x42	; 66
    1724:	8b 87       	std	Y+11, r24	; 0x0b
    1726:	9c 87       	std	Y+12, r25	; 0x0c
    1728:	ad 87       	std	Y+13, r26	; 0x0d
    172a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    172c:	6b 85       	ldd	r22, Y+11	; 0x0b
    172e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1730:	8d 85       	ldd	r24, Y+13	; 0x0d
    1732:	9e 85       	ldd	r25, Y+14	; 0x0e
    1734:	20 e0       	ldi	r18, 0x00	; 0
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	4a e7       	ldi	r20, 0x7A	; 122
    173a:	55 e4       	ldi	r21, 0x45	; 69
    173c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1740:	dc 01       	movw	r26, r24
    1742:	cb 01       	movw	r24, r22
    1744:	8f 83       	std	Y+7, r24	; 0x07
    1746:	98 87       	std	Y+8, r25	; 0x08
    1748:	a9 87       	std	Y+9, r26	; 0x09
    174a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    174c:	6f 81       	ldd	r22, Y+7	; 0x07
    174e:	78 85       	ldd	r23, Y+8	; 0x08
    1750:	89 85       	ldd	r24, Y+9	; 0x09
    1752:	9a 85       	ldd	r25, Y+10	; 0x0a
    1754:	20 e0       	ldi	r18, 0x00	; 0
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	40 e8       	ldi	r20, 0x80	; 128
    175a:	5f e3       	ldi	r21, 0x3F	; 63
    175c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1760:	88 23       	and	r24, r24
    1762:	2c f4       	brge	.+10     	; 0x176e <LCD_VoidInit+0x66>
		__ticks = 1;
    1764:	81 e0       	ldi	r24, 0x01	; 1
    1766:	90 e0       	ldi	r25, 0x00	; 0
    1768:	9e 83       	std	Y+6, r25	; 0x06
    176a:	8d 83       	std	Y+5, r24	; 0x05
    176c:	3f c0       	rjmp	.+126    	; 0x17ec <LCD_VoidInit+0xe4>
	else if (__tmp > 65535)
    176e:	6f 81       	ldd	r22, Y+7	; 0x07
    1770:	78 85       	ldd	r23, Y+8	; 0x08
    1772:	89 85       	ldd	r24, Y+9	; 0x09
    1774:	9a 85       	ldd	r25, Y+10	; 0x0a
    1776:	20 e0       	ldi	r18, 0x00	; 0
    1778:	3f ef       	ldi	r19, 0xFF	; 255
    177a:	4f e7       	ldi	r20, 0x7F	; 127
    177c:	57 e4       	ldi	r21, 0x47	; 71
    177e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1782:	18 16       	cp	r1, r24
    1784:	4c f5       	brge	.+82     	; 0x17d8 <LCD_VoidInit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1786:	6b 85       	ldd	r22, Y+11	; 0x0b
    1788:	7c 85       	ldd	r23, Y+12	; 0x0c
    178a:	8d 85       	ldd	r24, Y+13	; 0x0d
    178c:	9e 85       	ldd	r25, Y+14	; 0x0e
    178e:	20 e0       	ldi	r18, 0x00	; 0
    1790:	30 e0       	ldi	r19, 0x00	; 0
    1792:	40 e2       	ldi	r20, 0x20	; 32
    1794:	51 e4       	ldi	r21, 0x41	; 65
    1796:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    179a:	dc 01       	movw	r26, r24
    179c:	cb 01       	movw	r24, r22
    179e:	bc 01       	movw	r22, r24
    17a0:	cd 01       	movw	r24, r26
    17a2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17a6:	dc 01       	movw	r26, r24
    17a8:	cb 01       	movw	r24, r22
    17aa:	9e 83       	std	Y+6, r25	; 0x06
    17ac:	8d 83       	std	Y+5, r24	; 0x05
    17ae:	0f c0       	rjmp	.+30     	; 0x17ce <LCD_VoidInit+0xc6>
    17b0:	80 e9       	ldi	r24, 0x90	; 144
    17b2:	91 e0       	ldi	r25, 0x01	; 1
    17b4:	9c 83       	std	Y+4, r25	; 0x04
    17b6:	8b 83       	std	Y+3, r24	; 0x03
    17b8:	8b 81       	ldd	r24, Y+3	; 0x03
    17ba:	9c 81       	ldd	r25, Y+4	; 0x04
    17bc:	01 97       	sbiw	r24, 0x01	; 1
    17be:	f1 f7       	brne	.-4      	; 0x17bc <LCD_VoidInit+0xb4>
    17c0:	9c 83       	std	Y+4, r25	; 0x04
    17c2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17c4:	8d 81       	ldd	r24, Y+5	; 0x05
    17c6:	9e 81       	ldd	r25, Y+6	; 0x06
    17c8:	01 97       	sbiw	r24, 0x01	; 1
    17ca:	9e 83       	std	Y+6, r25	; 0x06
    17cc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17ce:	8d 81       	ldd	r24, Y+5	; 0x05
    17d0:	9e 81       	ldd	r25, Y+6	; 0x06
    17d2:	00 97       	sbiw	r24, 0x00	; 0
    17d4:	69 f7       	brne	.-38     	; 0x17b0 <LCD_VoidInit+0xa8>
    17d6:	14 c0       	rjmp	.+40     	; 0x1800 <LCD_VoidInit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17d8:	6f 81       	ldd	r22, Y+7	; 0x07
    17da:	78 85       	ldd	r23, Y+8	; 0x08
    17dc:	89 85       	ldd	r24, Y+9	; 0x09
    17de:	9a 85       	ldd	r25, Y+10	; 0x0a
    17e0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17e4:	dc 01       	movw	r26, r24
    17e6:	cb 01       	movw	r24, r22
    17e8:	9e 83       	std	Y+6, r25	; 0x06
    17ea:	8d 83       	std	Y+5, r24	; 0x05
    17ec:	8d 81       	ldd	r24, Y+5	; 0x05
    17ee:	9e 81       	ldd	r25, Y+6	; 0x06
    17f0:	9a 83       	std	Y+2, r25	; 0x02
    17f2:	89 83       	std	Y+1, r24	; 0x01
    17f4:	89 81       	ldd	r24, Y+1	; 0x01
    17f6:	9a 81       	ldd	r25, Y+2	; 0x02
    17f8:	01 97       	sbiw	r24, 0x01	; 1
    17fa:	f1 f7       	brne	.-4      	; 0x17f8 <LCD_VoidInit+0xf0>
    17fc:	9a 83       	std	Y+2, r25	; 0x02
    17fe:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(40);
#if LCD_u8_BIT_MODE == EIGHT_BIT
	LCD_VoidSendCommand(0b00111000);
#elif LCD_u8_BIT_MODE == FOUR_BIT
	SetHalfDataPort(0b0010);
    1800:	82 e0       	ldi	r24, 0x02	; 2
    1802:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <SetHalfDataPort>
	SendEnablePulse();
    1806:	0e 94 55 0a 	call	0x14aa	; 0x14aa <SendEnablePulse>
	SetHalfDataPort(0b0010);
    180a:	82 e0       	ldi	r24, 0x02	; 2
    180c:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <SetHalfDataPort>
	SendEnablePulse();
    1810:	0e 94 55 0a 	call	0x14aa	; 0x14aa <SendEnablePulse>
	SetHalfDataPort(0b1000);
    1814:	88 e0       	ldi	r24, 0x08	; 8
    1816:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <SetHalfDataPort>
	SendEnablePulse();
    181a:	0e 94 55 0a 	call	0x14aa	; 0x14aa <SendEnablePulse>
#endif
	LCD_VoidSendCommand(0B00001100);
    181e:	8c e0       	ldi	r24, 0x0C	; 12
    1820:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
	LCD_VoidSendCommand(1);
    1824:	81 e0       	ldi	r24, 0x01	; 1
    1826:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>

}
    182a:	2e 96       	adiw	r28, 0x0e	; 14
    182c:	0f b6       	in	r0, 0x3f	; 63
    182e:	f8 94       	cli
    1830:	de bf       	out	0x3e, r29	; 62
    1832:	0f be       	out	0x3f, r0	; 63
    1834:	cd bf       	out	0x3d, r28	; 61
    1836:	cf 91       	pop	r28
    1838:	df 91       	pop	r29
    183a:	08 95       	ret

0000183c <LCD_u8SendString>:

uint8 LCD_u8SendString(const char* Copy_pchString)
{
    183c:	df 93       	push	r29
    183e:	cf 93       	push	r28
    1840:	00 d0       	rcall	.+0      	; 0x1842 <LCD_u8SendString+0x6>
    1842:	00 d0       	rcall	.+0      	; 0x1844 <LCD_u8SendString+0x8>
    1844:	cd b7       	in	r28, 0x3d	; 61
    1846:	de b7       	in	r29, 0x3e	; 62
    1848:	9c 83       	std	Y+4, r25	; 0x04
    184a:	8b 83       	std	Y+3, r24	; 0x03
	uint8 Local_u8ErrorState= OK;
    184c:	81 e0       	ldi	r24, 0x01	; 1
    184e:	8a 83       	std	Y+2, r24	; 0x02
	uint8 Local_u8Counter=0;
    1850:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_pchString != NULL)
    1852:	8b 81       	ldd	r24, Y+3	; 0x03
    1854:	9c 81       	ldd	r25, Y+4	; 0x04
    1856:	00 97       	sbiw	r24, 0x00	; 0
    1858:	d9 f0       	breq	.+54     	; 0x1890 <LCD_u8SendString+0x54>
    185a:	0e c0       	rjmp	.+28     	; 0x1878 <LCD_u8SendString+0x3c>
	{
		while(Copy_pchString[Local_u8Counter]!='\0')
		{
			LCD_VoidSendData(Copy_pchString[Local_u8Counter]);
    185c:	89 81       	ldd	r24, Y+1	; 0x01
    185e:	28 2f       	mov	r18, r24
    1860:	30 e0       	ldi	r19, 0x00	; 0
    1862:	8b 81       	ldd	r24, Y+3	; 0x03
    1864:	9c 81       	ldd	r25, Y+4	; 0x04
    1866:	fc 01       	movw	r30, r24
    1868:	e2 0f       	add	r30, r18
    186a:	f3 1f       	adc	r31, r19
    186c:	80 81       	ld	r24, Z
    186e:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <LCD_VoidSendData>
			Local_u8Counter++;
    1872:	89 81       	ldd	r24, Y+1	; 0x01
    1874:	8f 5f       	subi	r24, 0xFF	; 255
    1876:	89 83       	std	Y+1, r24	; 0x01
{
	uint8 Local_u8ErrorState= OK;
	uint8 Local_u8Counter=0;
	if(Copy_pchString != NULL)
	{
		while(Copy_pchString[Local_u8Counter]!='\0')
    1878:	89 81       	ldd	r24, Y+1	; 0x01
    187a:	28 2f       	mov	r18, r24
    187c:	30 e0       	ldi	r19, 0x00	; 0
    187e:	8b 81       	ldd	r24, Y+3	; 0x03
    1880:	9c 81       	ldd	r25, Y+4	; 0x04
    1882:	fc 01       	movw	r30, r24
    1884:	e2 0f       	add	r30, r18
    1886:	f3 1f       	adc	r31, r19
    1888:	80 81       	ld	r24, Z
    188a:	88 23       	and	r24, r24
    188c:	39 f7       	brne	.-50     	; 0x185c <LCD_u8SendString+0x20>
    188e:	02 c0       	rjmp	.+4      	; 0x1894 <LCD_u8SendString+0x58>
			Local_u8Counter++;
		}
	}
	else
	{
		Local_u8ErrorState=NULL_POINTER;
    1890:	83 e0       	ldi	r24, 0x03	; 3
    1892:	8a 83       	std	Y+2, r24	; 0x02
	}
	return Local_u8ErrorState;
    1894:	8a 81       	ldd	r24, Y+2	; 0x02
}
    1896:	0f 90       	pop	r0
    1898:	0f 90       	pop	r0
    189a:	0f 90       	pop	r0
    189c:	0f 90       	pop	r0
    189e:	cf 91       	pop	r28
    18a0:	df 91       	pop	r29
    18a2:	08 95       	ret

000018a4 <LCD_voidGoToXY>:

uint8 LCD_voidGoToXY(uint8 Copy_u8XPos, uint8 Copy_u8YPos)
{
    18a4:	df 93       	push	r29
    18a6:	cf 93       	push	r28
    18a8:	00 d0       	rcall	.+0      	; 0x18aa <LCD_voidGoToXY+0x6>
    18aa:	00 d0       	rcall	.+0      	; 0x18ac <LCD_voidGoToXY+0x8>
    18ac:	00 d0       	rcall	.+0      	; 0x18ae <LCD_voidGoToXY+0xa>
    18ae:	cd b7       	in	r28, 0x3d	; 61
    18b0:	de b7       	in	r29, 0x3e	; 62
    18b2:	8b 83       	std	Y+3, r24	; 0x03
    18b4:	6c 83       	std	Y+4, r22	; 0x04
	uint8 Local_u8ErrorState= OK;
    18b6:	81 e0       	ldi	r24, 0x01	; 1
    18b8:	8a 83       	std	Y+2, r24	; 0x02
	uint8 Local_u8DDRamAdd;
	switch(Copy_u8YPos)
    18ba:	8c 81       	ldd	r24, Y+4	; 0x04
    18bc:	28 2f       	mov	r18, r24
    18be:	30 e0       	ldi	r19, 0x00	; 0
    18c0:	3e 83       	std	Y+6, r19	; 0x06
    18c2:	2d 83       	std	Y+5, r18	; 0x05
    18c4:	8d 81       	ldd	r24, Y+5	; 0x05
    18c6:	9e 81       	ldd	r25, Y+6	; 0x06
    18c8:	00 97       	sbiw	r24, 0x00	; 0
    18ca:	31 f0       	breq	.+12     	; 0x18d8 <LCD_voidGoToXY+0x34>
    18cc:	2d 81       	ldd	r18, Y+5	; 0x05
    18ce:	3e 81       	ldd	r19, Y+6	; 0x06
    18d0:	21 30       	cpi	r18, 0x01	; 1
    18d2:	31 05       	cpc	r19, r1
    18d4:	21 f0       	breq	.+8      	; 0x18de <LCD_voidGoToXY+0x3a>
    18d6:	07 c0       	rjmp	.+14     	; 0x18e6 <LCD_voidGoToXY+0x42>
	{
	case 0:Local_u8DDRamAdd= Copy_u8XPos; break;
    18d8:	8b 81       	ldd	r24, Y+3	; 0x03
    18da:	89 83       	std	Y+1, r24	; 0x01
    18dc:	06 c0       	rjmp	.+12     	; 0x18ea <LCD_voidGoToXY+0x46>
	case 1:Local_u8DDRamAdd= Copy_u8XPos+0x40;break;
    18de:	8b 81       	ldd	r24, Y+3	; 0x03
    18e0:	80 5c       	subi	r24, 0xC0	; 192
    18e2:	89 83       	std	Y+1, r24	; 0x01
    18e4:	02 c0       	rjmp	.+4      	; 0x18ea <LCD_voidGoToXY+0x46>
	default:Local_u8ErrorState= NOK;break;
    18e6:	82 e0       	ldi	r24, 0x02	; 2
    18e8:	8a 83       	std	Y+2, r24	; 0x02
	}
	//Local_u8ErrorState= Copy_u8YPos*0x40 + Copy_u8XPos;
	SET_BIT(Local_u8DDRamAdd,7);
    18ea:	89 81       	ldd	r24, Y+1	; 0x01
    18ec:	80 68       	ori	r24, 0x80	; 128
    18ee:	89 83       	std	Y+1, r24	; 0x01
	LCD_VoidSendCommand(Local_u8DDRamAdd);
    18f0:	89 81       	ldd	r24, Y+1	; 0x01
    18f2:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>

	return Local_u8ErrorState;
    18f6:	8a 81       	ldd	r24, Y+2	; 0x02
}
    18f8:	26 96       	adiw	r28, 0x06	; 6
    18fa:	0f b6       	in	r0, 0x3f	; 63
    18fc:	f8 94       	cli
    18fe:	de bf       	out	0x3e, r29	; 62
    1900:	0f be       	out	0x3f, r0	; 63
    1902:	cd bf       	out	0x3d, r28	; 61
    1904:	cf 91       	pop	r28
    1906:	df 91       	pop	r29
    1908:	08 95       	ret

0000190a <LCD_voidSendSpecialChar>:

void LCD_voidSendSpecialChar(uint8* Copy_pu8CharArr,uint8 Copy_u8BlockNum,uint8 Copy_u8XPos,uint8 Copy_u8YPos)
{
    190a:	df 93       	push	r29
    190c:	cf 93       	push	r28
    190e:	cd b7       	in	r28, 0x3d	; 61
    1910:	de b7       	in	r29, 0x3e	; 62
    1912:	27 97       	sbiw	r28, 0x07	; 7
    1914:	0f b6       	in	r0, 0x3f	; 63
    1916:	f8 94       	cli
    1918:	de bf       	out	0x3e, r29	; 62
    191a:	0f be       	out	0x3f, r0	; 63
    191c:	cd bf       	out	0x3d, r28	; 61
    191e:	9c 83       	std	Y+4, r25	; 0x04
    1920:	8b 83       	std	Y+3, r24	; 0x03
    1922:	6d 83       	std	Y+5, r22	; 0x05
    1924:	4e 83       	std	Y+6, r20	; 0x06
    1926:	2f 83       	std	Y+7, r18	; 0x07
	uint8 Local_u8Iterator;
	uint8 Local_u8CGRamAdd=Copy_u8BlockNum*8;
    1928:	8d 81       	ldd	r24, Y+5	; 0x05
    192a:	88 2f       	mov	r24, r24
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	88 0f       	add	r24, r24
    1930:	99 1f       	adc	r25, r25
    1932:	88 0f       	add	r24, r24
    1934:	99 1f       	adc	r25, r25
    1936:	88 0f       	add	r24, r24
    1938:	99 1f       	adc	r25, r25
    193a:	89 83       	std	Y+1, r24	; 0x01
	SET_BIT(Local_u8CGRamAdd,6);
    193c:	89 81       	ldd	r24, Y+1	; 0x01
    193e:	80 64       	ori	r24, 0x40	; 64
    1940:	89 83       	std	Y+1, r24	; 0x01
	//go to CGRam
	LCD_VoidSendCommand(Local_u8CGRamAdd);
    1942:	89 81       	ldd	r24, Y+1	; 0x01
    1944:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
	for(Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++)
    1948:	1a 82       	std	Y+2, r1	; 0x02
    194a:	0e c0       	rjmp	.+28     	; 0x1968 <LCD_voidSendSpecialChar+0x5e>
	{
		LCD_VoidSendData(Copy_pu8CharArr[Local_u8Iterator]);
    194c:	8a 81       	ldd	r24, Y+2	; 0x02
    194e:	28 2f       	mov	r18, r24
    1950:	30 e0       	ldi	r19, 0x00	; 0
    1952:	8b 81       	ldd	r24, Y+3	; 0x03
    1954:	9c 81       	ldd	r25, Y+4	; 0x04
    1956:	fc 01       	movw	r30, r24
    1958:	e2 0f       	add	r30, r18
    195a:	f3 1f       	adc	r31, r19
    195c:	80 81       	ld	r24, Z
    195e:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <LCD_VoidSendData>
	uint8 Local_u8Iterator;
	uint8 Local_u8CGRamAdd=Copy_u8BlockNum*8;
	SET_BIT(Local_u8CGRamAdd,6);
	//go to CGRam
	LCD_VoidSendCommand(Local_u8CGRamAdd);
	for(Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++)
    1962:	8a 81       	ldd	r24, Y+2	; 0x02
    1964:	8f 5f       	subi	r24, 0xFF	; 255
    1966:	8a 83       	std	Y+2, r24	; 0x02
    1968:	8a 81       	ldd	r24, Y+2	; 0x02
    196a:	88 30       	cpi	r24, 0x08	; 8
    196c:	78 f3       	brcs	.-34     	; 0x194c <LCD_voidSendSpecialChar+0x42>
	{
		LCD_VoidSendData(Copy_pu8CharArr[Local_u8Iterator]);
	}
	//Go back to DDRam
	LCD_voidGoToXY(Copy_u8XPos,Copy_u8YPos);
    196e:	8e 81       	ldd	r24, Y+6	; 0x06
    1970:	6f 81       	ldd	r22, Y+7	; 0x07
    1972:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
	LCD_VoidSendData(Copy_u8BlockNum);
    1976:	8d 81       	ldd	r24, Y+5	; 0x05
    1978:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <LCD_VoidSendData>
}
    197c:	27 96       	adiw	r28, 0x07	; 7
    197e:	0f b6       	in	r0, 0x3f	; 63
    1980:	f8 94       	cli
    1982:	de bf       	out	0x3e, r29	; 62
    1984:	0f be       	out	0x3f, r0	; 63
    1986:	cd bf       	out	0x3d, r28	; 61
    1988:	cf 91       	pop	r28
    198a:	df 91       	pop	r29
    198c:	08 95       	ret

0000198e <LCD_voidSendNumber>:

void LCD_voidSendNumber(uint32 Copy_u32Number)
{
    198e:	df 93       	push	r29
    1990:	cf 93       	push	r28
    1992:	cd b7       	in	r28, 0x3d	; 61
    1994:	de b7       	in	r29, 0x3e	; 62
    1996:	2a 97       	sbiw	r28, 0x0a	; 10
    1998:	0f b6       	in	r0, 0x3f	; 63
    199a:	f8 94       	cli
    199c:	de bf       	out	0x3e, r29	; 62
    199e:	0f be       	out	0x3f, r0	; 63
    19a0:	cd bf       	out	0x3d, r28	; 61
    19a2:	6f 83       	std	Y+7, r22	; 0x07
    19a4:	78 87       	std	Y+8, r23	; 0x08
    19a6:	89 87       	std	Y+9, r24	; 0x09
    19a8:	9a 87       	std	Y+10, r25	; 0x0a
	uint8 Copy_u8Remaining;
	uint32 Copy_u32RevNum=0;
    19aa:	1a 82       	std	Y+2, r1	; 0x02
    19ac:	1b 82       	std	Y+3, r1	; 0x03
    19ae:	1c 82       	std	Y+4, r1	; 0x04
    19b0:	1d 82       	std	Y+5, r1	; 0x05
	uint8 Count=0;
    19b2:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u32Number==0)
    19b4:	8f 81       	ldd	r24, Y+7	; 0x07
    19b6:	98 85       	ldd	r25, Y+8	; 0x08
    19b8:	a9 85       	ldd	r26, Y+9	; 0x09
    19ba:	ba 85       	ldd	r27, Y+10	; 0x0a
    19bc:	00 97       	sbiw	r24, 0x00	; 0
    19be:	a1 05       	cpc	r26, r1
    19c0:	b1 05       	cpc	r27, r1
    19c2:	09 f0       	breq	.+2      	; 0x19c6 <LCD_voidSendNumber+0x38>
    19c4:	43 c0       	rjmp	.+134    	; 0x1a4c <LCD_voidSendNumber+0xbe>
	{
		LCD_VoidSendData('0');
    19c6:	80 e3       	ldi	r24, 0x30	; 48
    19c8:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <LCD_VoidSendData>
    19cc:	3f c0       	rjmp	.+126    	; 0x1a4c <LCD_voidSendNumber+0xbe>
	}
	while(Copy_u32Number!=0)
	{
		Copy_u8Remaining=Copy_u32Number%10;
    19ce:	8f 81       	ldd	r24, Y+7	; 0x07
    19d0:	98 85       	ldd	r25, Y+8	; 0x08
    19d2:	a9 85       	ldd	r26, Y+9	; 0x09
    19d4:	ba 85       	ldd	r27, Y+10	; 0x0a
    19d6:	2a e0       	ldi	r18, 0x0A	; 10
    19d8:	30 e0       	ldi	r19, 0x00	; 0
    19da:	40 e0       	ldi	r20, 0x00	; 0
    19dc:	50 e0       	ldi	r21, 0x00	; 0
    19de:	bc 01       	movw	r22, r24
    19e0:	cd 01       	movw	r24, r26
    19e2:	0e 94 4b 23 	call	0x4696	; 0x4696 <__udivmodsi4>
    19e6:	dc 01       	movw	r26, r24
    19e8:	cb 01       	movw	r24, r22
    19ea:	8e 83       	std	Y+6, r24	; 0x06
		Copy_u32RevNum=(Copy_u32RevNum*10)+Copy_u8Remaining;
    19ec:	8a 81       	ldd	r24, Y+2	; 0x02
    19ee:	9b 81       	ldd	r25, Y+3	; 0x03
    19f0:	ac 81       	ldd	r26, Y+4	; 0x04
    19f2:	bd 81       	ldd	r27, Y+5	; 0x05
    19f4:	2a e0       	ldi	r18, 0x0A	; 10
    19f6:	30 e0       	ldi	r19, 0x00	; 0
    19f8:	40 e0       	ldi	r20, 0x00	; 0
    19fa:	50 e0       	ldi	r21, 0x00	; 0
    19fc:	bc 01       	movw	r22, r24
    19fe:	cd 01       	movw	r24, r26
    1a00:	0e 94 2c 23 	call	0x4658	; 0x4658 <__mulsi3>
    1a04:	9b 01       	movw	r18, r22
    1a06:	ac 01       	movw	r20, r24
    1a08:	8e 81       	ldd	r24, Y+6	; 0x06
    1a0a:	88 2f       	mov	r24, r24
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	a0 e0       	ldi	r26, 0x00	; 0
    1a10:	b0 e0       	ldi	r27, 0x00	; 0
    1a12:	82 0f       	add	r24, r18
    1a14:	93 1f       	adc	r25, r19
    1a16:	a4 1f       	adc	r26, r20
    1a18:	b5 1f       	adc	r27, r21
    1a1a:	8a 83       	std	Y+2, r24	; 0x02
    1a1c:	9b 83       	std	Y+3, r25	; 0x03
    1a1e:	ac 83       	std	Y+4, r26	; 0x04
    1a20:	bd 83       	std	Y+5, r27	; 0x05
		Copy_u32Number=Copy_u32Number/10;
    1a22:	8f 81       	ldd	r24, Y+7	; 0x07
    1a24:	98 85       	ldd	r25, Y+8	; 0x08
    1a26:	a9 85       	ldd	r26, Y+9	; 0x09
    1a28:	ba 85       	ldd	r27, Y+10	; 0x0a
    1a2a:	2a e0       	ldi	r18, 0x0A	; 10
    1a2c:	30 e0       	ldi	r19, 0x00	; 0
    1a2e:	40 e0       	ldi	r20, 0x00	; 0
    1a30:	50 e0       	ldi	r21, 0x00	; 0
    1a32:	bc 01       	movw	r22, r24
    1a34:	cd 01       	movw	r24, r26
    1a36:	0e 94 4b 23 	call	0x4696	; 0x4696 <__udivmodsi4>
    1a3a:	da 01       	movw	r26, r20
    1a3c:	c9 01       	movw	r24, r18
    1a3e:	8f 83       	std	Y+7, r24	; 0x07
    1a40:	98 87       	std	Y+8, r25	; 0x08
    1a42:	a9 87       	std	Y+9, r26	; 0x09
    1a44:	ba 87       	std	Y+10, r27	; 0x0a
		Count++;
    1a46:	89 81       	ldd	r24, Y+1	; 0x01
    1a48:	8f 5f       	subi	r24, 0xFF	; 255
    1a4a:	89 83       	std	Y+1, r24	; 0x01
	uint8 Count=0;
	if(Copy_u32Number==0)
	{
		LCD_VoidSendData('0');
	}
	while(Copy_u32Number!=0)
    1a4c:	8f 81       	ldd	r24, Y+7	; 0x07
    1a4e:	98 85       	ldd	r25, Y+8	; 0x08
    1a50:	a9 85       	ldd	r26, Y+9	; 0x09
    1a52:	ba 85       	ldd	r27, Y+10	; 0x0a
    1a54:	00 97       	sbiw	r24, 0x00	; 0
    1a56:	a1 05       	cpc	r26, r1
    1a58:	b1 05       	cpc	r27, r1
    1a5a:	09 f0       	breq	.+2      	; 0x1a5e <LCD_voidSendNumber+0xd0>
    1a5c:	b8 cf       	rjmp	.-144    	; 0x19ce <LCD_voidSendNumber+0x40>
    1a5e:	28 c0       	rjmp	.+80     	; 0x1ab0 <LCD_voidSendNumber+0x122>
		Copy_u32Number=Copy_u32Number/10;
		Count++;
	}
	while(Count!=0)
	{
		Copy_u8Remaining=Copy_u32RevNum%10;
    1a60:	8a 81       	ldd	r24, Y+2	; 0x02
    1a62:	9b 81       	ldd	r25, Y+3	; 0x03
    1a64:	ac 81       	ldd	r26, Y+4	; 0x04
    1a66:	bd 81       	ldd	r27, Y+5	; 0x05
    1a68:	2a e0       	ldi	r18, 0x0A	; 10
    1a6a:	30 e0       	ldi	r19, 0x00	; 0
    1a6c:	40 e0       	ldi	r20, 0x00	; 0
    1a6e:	50 e0       	ldi	r21, 0x00	; 0
    1a70:	bc 01       	movw	r22, r24
    1a72:	cd 01       	movw	r24, r26
    1a74:	0e 94 4b 23 	call	0x4696	; 0x4696 <__udivmodsi4>
    1a78:	dc 01       	movw	r26, r24
    1a7a:	cb 01       	movw	r24, r22
    1a7c:	8e 83       	std	Y+6, r24	; 0x06
		LCD_VoidSendData(Copy_u8Remaining+'0');
    1a7e:	8e 81       	ldd	r24, Y+6	; 0x06
    1a80:	80 5d       	subi	r24, 0xD0	; 208
    1a82:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <LCD_VoidSendData>
		Copy_u32RevNum=Copy_u32RevNum/10;
    1a86:	8a 81       	ldd	r24, Y+2	; 0x02
    1a88:	9b 81       	ldd	r25, Y+3	; 0x03
    1a8a:	ac 81       	ldd	r26, Y+4	; 0x04
    1a8c:	bd 81       	ldd	r27, Y+5	; 0x05
    1a8e:	2a e0       	ldi	r18, 0x0A	; 10
    1a90:	30 e0       	ldi	r19, 0x00	; 0
    1a92:	40 e0       	ldi	r20, 0x00	; 0
    1a94:	50 e0       	ldi	r21, 0x00	; 0
    1a96:	bc 01       	movw	r22, r24
    1a98:	cd 01       	movw	r24, r26
    1a9a:	0e 94 4b 23 	call	0x4696	; 0x4696 <__udivmodsi4>
    1a9e:	da 01       	movw	r26, r20
    1aa0:	c9 01       	movw	r24, r18
    1aa2:	8a 83       	std	Y+2, r24	; 0x02
    1aa4:	9b 83       	std	Y+3, r25	; 0x03
    1aa6:	ac 83       	std	Y+4, r26	; 0x04
    1aa8:	bd 83       	std	Y+5, r27	; 0x05
		Count--;
    1aaa:	89 81       	ldd	r24, Y+1	; 0x01
    1aac:	81 50       	subi	r24, 0x01	; 1
    1aae:	89 83       	std	Y+1, r24	; 0x01
		Copy_u8Remaining=Copy_u32Number%10;
		Copy_u32RevNum=(Copy_u32RevNum*10)+Copy_u8Remaining;
		Copy_u32Number=Copy_u32Number/10;
		Count++;
	}
	while(Count!=0)
    1ab0:	89 81       	ldd	r24, Y+1	; 0x01
    1ab2:	88 23       	and	r24, r24
    1ab4:	a9 f6       	brne	.-86     	; 0x1a60 <LCD_voidSendNumber+0xd2>
		Copy_u8Remaining=Copy_u32RevNum%10;
		LCD_VoidSendData(Copy_u8Remaining+'0');
		Copy_u32RevNum=Copy_u32RevNum/10;
		Count--;
	}
}
    1ab6:	2a 96       	adiw	r28, 0x0a	; 10
    1ab8:	0f b6       	in	r0, 0x3f	; 63
    1aba:	f8 94       	cli
    1abc:	de bf       	out	0x3e, r29	; 62
    1abe:	0f be       	out	0x3f, r0	; 63
    1ac0:	cd bf       	out	0x3d, r28	; 61
    1ac2:	cf 91       	pop	r28
    1ac4:	df 91       	pop	r29
    1ac6:	08 95       	ret

00001ac8 <PORT_voidInit>:
#include "PORT_private.h"
#include "PORT_interface.h"
#include "PORT_reg.h"

void PORT_voidInit(void)
{
    1ac8:	df 93       	push	r29
    1aca:	cf 93       	push	r28
    1acc:	cd b7       	in	r28, 0x3d	; 61
    1ace:	de b7       	in	r29, 0x3e	; 62
	DDRA=PORTA_DIR;
    1ad0:	ea e3       	ldi	r30, 0x3A	; 58
    1ad2:	f0 e0       	ldi	r31, 0x00	; 0
    1ad4:	80 ee       	ldi	r24, 0xE0	; 224
    1ad6:	80 83       	st	Z, r24
	DDRB=PORTB_DIR;
    1ad8:	e7 e3       	ldi	r30, 0x37	; 55
    1ada:	f0 e0       	ldi	r31, 0x00	; 0
    1adc:	8e e8       	ldi	r24, 0x8E	; 142
    1ade:	80 83       	st	Z, r24
	DDRC=PORTC_DIR;
    1ae0:	e4 e3       	ldi	r30, 0x34	; 52
    1ae2:	f0 e0       	ldi	r31, 0x00	; 0
    1ae4:	10 82       	st	Z, r1
	DDRD=PORTD_DIR;
    1ae6:	e1 e3       	ldi	r30, 0x31	; 49
    1ae8:	f0 e0       	ldi	r31, 0x00	; 0
    1aea:	10 82       	st	Z, r1
	
	PORTA=PORTA_INITIAL_VALUE;
    1aec:	eb e3       	ldi	r30, 0x3B	; 59
    1aee:	f0 e0       	ldi	r31, 0x00	; 0
    1af0:	10 82       	st	Z, r1
	PORTB=PORTB_INITIAL_VALUE;
    1af2:	e8 e3       	ldi	r30, 0x38	; 56
    1af4:	f0 e0       	ldi	r31, 0x00	; 0
    1af6:	10 82       	st	Z, r1
	PORTC=PORTC_INITIAL_VALUE;
    1af8:	e5 e3       	ldi	r30, 0x35	; 53
    1afa:	f0 e0       	ldi	r31, 0x00	; 0
    1afc:	10 82       	st	Z, r1
	PORTD=PORTD_INITIAL_VALUE;
    1afe:	e2 e3       	ldi	r30, 0x32	; 50
    1b00:	f0 e0       	ldi	r31, 0x00	; 0
    1b02:	10 82       	st	Z, r1
}
    1b04:	cf 91       	pop	r28
    1b06:	df 91       	pop	r29
    1b08:	08 95       	ret

00001b0a <main>:
#define HOW_ARE_YOU         0b00001111

//5:20 , 4:25-15 , 3:30-10 , 2:30-10 , 1:30-10
//5:20-40 , 4:20-50 3:20-55 , 2:20-60 , 1:30-60
int main()
{
    1b0a:	0f 93       	push	r16
    1b0c:	1f 93       	push	r17
    1b0e:	df 93       	push	r29
    1b10:	cf 93       	push	r28
    1b12:	cd b7       	in	r28, 0x3d	; 61
    1b14:	de b7       	in	r29, 0x3e	; 62
    1b16:	ca 50       	subi	r28, 0x0A	; 10
    1b18:	d2 40       	sbci	r29, 0x02	; 2
    1b1a:	0f b6       	in	r0, 0x3f	; 63
    1b1c:	f8 94       	cli
    1b1e:	de bf       	out	0x3e, r29	; 62
    1b20:	0f be       	out	0x3f, r0	; 63
    1b22:	cd bf       	out	0x3d, r28	; 61
	PORT_voidInit();
    1b24:	0e 94 64 0d 	call	0x1ac8	; 0x1ac8 <PORT_voidInit>
	ADC_voidInit();
    1b28:	0e 94 17 07 	call	0xe2e	; 0xe2e <ADC_voidInit>
	LCD_VoidInit();
    1b2c:	0e 94 84 0b 	call	0x1708	; 0x1708 <LCD_VoidInit>

	uint8 Iterator;
	uint8 Word;
	uint16 Local_u16FlexInput[5]={0};
    1b30:	ce 01       	movw	r24, r28
    1b32:	85 5e       	subi	r24, 0xE5	; 229
    1b34:	9e 4f       	sbci	r25, 0xFE	; 254
    1b36:	2a e0       	ldi	r18, 0x0A	; 10
    1b38:	fc 01       	movw	r30, r24
    1b3a:	df 01       	movw	r26, r30
    1b3c:	32 2f       	mov	r19, r18
    1b3e:	1d 92       	st	X+, r1
    1b40:	3a 95       	dec	r19
    1b42:	e9 f7       	brne	.-6      	; 0x1b3e <main+0x34>
	uint8 Local_u8ADCChannel[5]={ADC_u8_SINGLE_ENDED_CH0,ADC_u8_SINGLE_ENDED_CH2,ADC_u8_SINGLE_ENDED_CH3,ADC_u8_SINGLE_ENDED_CH6,ADC_u8_SINGLE_ENDED_CH4};
    1b44:	ce 01       	movw	r24, r28
    1b46:	8b 5d       	subi	r24, 0xDB	; 219
    1b48:	9e 4f       	sbci	r25, 0xFE	; 254
    1b4a:	ca 5f       	subi	r28, 0xFA	; 250
    1b4c:	dd 4f       	sbci	r29, 0xFD	; 253
    1b4e:	99 83       	std	Y+1, r25	; 0x01
    1b50:	88 83       	st	Y, r24
    1b52:	c6 50       	subi	r28, 0x06	; 6
    1b54:	d2 40       	sbci	r29, 0x02	; 2
    1b56:	82 e8       	ldi	r24, 0x82	; 130
    1b58:	91 e0       	ldi	r25, 0x01	; 1
    1b5a:	c8 5f       	subi	r28, 0xF8	; 248
    1b5c:	dd 4f       	sbci	r29, 0xFD	; 253
    1b5e:	99 83       	std	Y+1, r25	; 0x01
    1b60:	88 83       	st	Y, r24
    1b62:	c8 50       	subi	r28, 0x08	; 8
    1b64:	d2 40       	sbci	r29, 0x02	; 2
    1b66:	95 e0       	ldi	r25, 0x05	; 5
    1b68:	c6 5f       	subi	r28, 0xF6	; 246
    1b6a:	dd 4f       	sbci	r29, 0xFD	; 253
    1b6c:	98 83       	st	Y, r25
    1b6e:	ca 50       	subi	r28, 0x0A	; 10
    1b70:	d2 40       	sbci	r29, 0x02	; 2
    1b72:	c8 5f       	subi	r28, 0xF8	; 248
    1b74:	dd 4f       	sbci	r29, 0xFD	; 253
    1b76:	a8 81       	ld	r26, Y
    1b78:	b9 81       	ldd	r27, Y+1	; 0x01
    1b7a:	c8 50       	subi	r28, 0x08	; 8
    1b7c:	d2 40       	sbci	r29, 0x02	; 2
    1b7e:	0c 90       	ld	r0, X
    1b80:	c8 5f       	subi	r28, 0xF8	; 248
    1b82:	dd 4f       	sbci	r29, 0xFD	; 253
    1b84:	e8 81       	ld	r30, Y
    1b86:	f9 81       	ldd	r31, Y+1	; 0x01
    1b88:	c8 50       	subi	r28, 0x08	; 8
    1b8a:	d2 40       	sbci	r29, 0x02	; 2
    1b8c:	31 96       	adiw	r30, 0x01	; 1
    1b8e:	c8 5f       	subi	r28, 0xF8	; 248
    1b90:	dd 4f       	sbci	r29, 0xFD	; 253
    1b92:	f9 83       	std	Y+1, r31	; 0x01
    1b94:	e8 83       	st	Y, r30
    1b96:	c8 50       	subi	r28, 0x08	; 8
    1b98:	d2 40       	sbci	r29, 0x02	; 2
    1b9a:	ca 5f       	subi	r28, 0xFA	; 250
    1b9c:	dd 4f       	sbci	r29, 0xFD	; 253
    1b9e:	a8 81       	ld	r26, Y
    1ba0:	b9 81       	ldd	r27, Y+1	; 0x01
    1ba2:	c6 50       	subi	r28, 0x06	; 6
    1ba4:	d2 40       	sbci	r29, 0x02	; 2
    1ba6:	0c 92       	st	X, r0
    1ba8:	ca 5f       	subi	r28, 0xFA	; 250
    1baa:	dd 4f       	sbci	r29, 0xFD	; 253
    1bac:	e8 81       	ld	r30, Y
    1bae:	f9 81       	ldd	r31, Y+1	; 0x01
    1bb0:	c6 50       	subi	r28, 0x06	; 6
    1bb2:	d2 40       	sbci	r29, 0x02	; 2
    1bb4:	31 96       	adiw	r30, 0x01	; 1
    1bb6:	ca 5f       	subi	r28, 0xFA	; 250
    1bb8:	dd 4f       	sbci	r29, 0xFD	; 253
    1bba:	f9 83       	std	Y+1, r31	; 0x01
    1bbc:	e8 83       	st	Y, r30
    1bbe:	c6 50       	subi	r28, 0x06	; 6
    1bc0:	d2 40       	sbci	r29, 0x02	; 2
    1bc2:	c6 5f       	subi	r28, 0xF6	; 246
    1bc4:	dd 4f       	sbci	r29, 0xFD	; 253
    1bc6:	f8 81       	ld	r31, Y
    1bc8:	ca 50       	subi	r28, 0x0A	; 10
    1bca:	d2 40       	sbci	r29, 0x02	; 2
    1bcc:	f1 50       	subi	r31, 0x01	; 1
    1bce:	c6 5f       	subi	r28, 0xF6	; 246
    1bd0:	dd 4f       	sbci	r29, 0xFD	; 253
    1bd2:	f8 83       	st	Y, r31
    1bd4:	ca 50       	subi	r28, 0x0A	; 10
    1bd6:	d2 40       	sbci	r29, 0x02	; 2
    1bd8:	c6 5f       	subi	r28, 0xF6	; 246
    1bda:	dd 4f       	sbci	r29, 0xFD	; 253
    1bdc:	28 81       	ld	r18, Y
    1bde:	ca 50       	subi	r28, 0x0A	; 10
    1be0:	d2 40       	sbci	r29, 0x02	; 2
    1be2:	22 23       	and	r18, r18
    1be4:	31 f6       	brne	.-116    	; 0x1b72 <main+0x68>
			{0b00000001,0b00000010,0b00000100,0b00000010,0b00011111,0,0,0},//KAFNOSKALAM
			{0b00000100,0b00001010,0b00001000,0b00000100,0b00000100,0,0b00000100,0},//QUESTIONMARK
			{0,0,0b00000111,0b00000101,0b00000111,0b00000001,0b00000010,0},//WAW
			{0b00000100,0,0b00001100,0b00000010,0b00011111,0,0,0},//KHAH
			{0,0,0b00000100,0b00010001,0b00011111,0,0,0},//NONFELAKHER
			{0b00000010,0,0b00000111,0b00000101,0b00011111,0,0,0}};//FEH
    1be6:	ce 01       	movw	r24, r28
    1be8:	86 5d       	subi	r24, 0xD6	; 214
    1bea:	9e 4f       	sbci	r25, 0xFE	; 254
    1bec:	20 ed       	ldi	r18, 0xD0	; 208
    1bee:	fc 01       	movw	r30, r24
    1bf0:	df 01       	movw	r26, r30
    1bf2:	32 2f       	mov	r19, r18
    1bf4:	1d 92       	st	X+, r1
    1bf6:	3a 95       	dec	r19
    1bf8:	e9 f7       	brne	.-6      	; 0x1bf4 <main+0xea>
    1bfa:	fe 01       	movw	r30, r28
    1bfc:	e6 5d       	subi	r30, 0xD6	; 214
    1bfe:	fe 4f       	sbci	r31, 0xFE	; 254
    1c00:	86 e0       	ldi	r24, 0x06	; 6
    1c02:	80 83       	st	Z, r24
    1c04:	fe 01       	movw	r30, r28
    1c06:	e6 5d       	subi	r30, 0xD6	; 214
    1c08:	fe 4f       	sbci	r31, 0xFE	; 254
    1c0a:	8c e0       	ldi	r24, 0x0C	; 12
    1c0c:	81 83       	std	Z+1, r24	; 0x01
    1c0e:	fe 01       	movw	r30, r28
    1c10:	e6 5d       	subi	r30, 0xD6	; 214
    1c12:	fe 4f       	sbci	r31, 0xFE	; 254
    1c14:	84 e0       	ldi	r24, 0x04	; 4
    1c16:	82 83       	std	Z+2, r24	; 0x02
    1c18:	fe 01       	movw	r30, r28
    1c1a:	e6 5d       	subi	r30, 0xD6	; 214
    1c1c:	fe 4f       	sbci	r31, 0xFE	; 254
    1c1e:	84 e0       	ldi	r24, 0x04	; 4
    1c20:	83 83       	std	Z+3, r24	; 0x03
    1c22:	fe 01       	movw	r30, r28
    1c24:	e6 5d       	subi	r30, 0xD6	; 214
    1c26:	fe 4f       	sbci	r31, 0xFE	; 254
    1c28:	84 e0       	ldi	r24, 0x04	; 4
    1c2a:	84 83       	std	Z+4, r24	; 0x04
    1c2c:	fe 01       	movw	r30, r28
    1c2e:	e6 5d       	subi	r30, 0xD6	; 214
    1c30:	fe 4f       	sbci	r31, 0xFE	; 254
    1c32:	81 e1       	ldi	r24, 0x11	; 17
    1c34:	83 87       	std	Z+11, r24	; 0x0b
    1c36:	fe 01       	movw	r30, r28
    1c38:	e6 5d       	subi	r30, 0xD6	; 214
    1c3a:	fe 4f       	sbci	r31, 0xFE	; 254
    1c3c:	8f e1       	ldi	r24, 0x1F	; 31
    1c3e:	84 87       	std	Z+12, r24	; 0x0c
    1c40:	fe 01       	movw	r30, r28
    1c42:	e6 5d       	subi	r30, 0xD6	; 214
    1c44:	fe 4f       	sbci	r31, 0xFE	; 254
    1c46:	84 e0       	ldi	r24, 0x04	; 4
    1c48:	86 87       	std	Z+14, r24	; 0x0e
    1c4a:	fe 01       	movw	r30, r28
    1c4c:	e6 5d       	subi	r30, 0xD6	; 214
    1c4e:	fe 4f       	sbci	r31, 0xFE	; 254
    1c50:	8a e0       	ldi	r24, 0x0A	; 10
    1c52:	82 8b       	std	Z+18, r24	; 0x12
    1c54:	fe 01       	movw	r30, r28
    1c56:	e6 5d       	subi	r30, 0xD6	; 214
    1c58:	fe 4f       	sbci	r31, 0xFE	; 254
    1c5a:	81 e1       	ldi	r24, 0x11	; 17
    1c5c:	83 8b       	std	Z+19, r24	; 0x13
    1c5e:	fe 01       	movw	r30, r28
    1c60:	e6 5d       	subi	r30, 0xD6	; 214
    1c62:	fe 4f       	sbci	r31, 0xFE	; 254
    1c64:	8f e1       	ldi	r24, 0x1F	; 31
    1c66:	84 8b       	std	Z+20, r24	; 0x14
    1c68:	fe 01       	movw	r30, r28
    1c6a:	e6 5d       	subi	r30, 0xD6	; 214
    1c6c:	fe 4f       	sbci	r31, 0xFE	; 254
    1c6e:	88 e0       	ldi	r24, 0x08	; 8
    1c70:	81 8f       	std	Z+25, r24	; 0x19
    1c72:	fe 01       	movw	r30, r28
    1c74:	e6 5d       	subi	r30, 0xD6	; 214
    1c76:	fe 4f       	sbci	r31, 0xFE	; 254
    1c78:	84 e0       	ldi	r24, 0x04	; 4
    1c7a:	82 8f       	std	Z+26, r24	; 0x1a
    1c7c:	fe 01       	movw	r30, r28
    1c7e:	e6 5d       	subi	r30, 0xD6	; 214
    1c80:	fe 4f       	sbci	r31, 0xFE	; 254
    1c82:	82 e0       	ldi	r24, 0x02	; 2
    1c84:	83 8f       	std	Z+27, r24	; 0x1b
    1c86:	fe 01       	movw	r30, r28
    1c88:	e6 5d       	subi	r30, 0xD6	; 214
    1c8a:	fe 4f       	sbci	r31, 0xFE	; 254
    1c8c:	8f e1       	ldi	r24, 0x1F	; 31
    1c8e:	84 8f       	std	Z+28, r24	; 0x1c
    1c90:	fe 01       	movw	r30, r28
    1c92:	e6 5d       	subi	r30, 0xD6	; 214
    1c94:	fe 4f       	sbci	r31, 0xFE	; 254
    1c96:	84 e0       	ldi	r24, 0x04	; 4
    1c98:	82 a3       	std	Z+34, r24	; 0x22
    1c9a:	fe 01       	movw	r30, r28
    1c9c:	e6 5d       	subi	r30, 0xD6	; 214
    1c9e:	fe 4f       	sbci	r31, 0xFE	; 254
    1ca0:	81 e0       	ldi	r24, 0x01	; 1
    1ca2:	83 a3       	std	Z+35, r24	; 0x23
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	e6 5d       	subi	r30, 0xD6	; 214
    1ca8:	fe 4f       	sbci	r31, 0xFE	; 254
    1caa:	8f e1       	ldi	r24, 0x1F	; 31
    1cac:	84 a3       	std	Z+36, r24	; 0x24
    1cae:	fe 01       	movw	r30, r28
    1cb0:	e6 5d       	subi	r30, 0xD6	; 214
    1cb2:	fe 4f       	sbci	r31, 0xFE	; 254
    1cb4:	82 e0       	ldi	r24, 0x02	; 2
    1cb6:	83 a7       	std	Z+43, r24	; 0x2b
    1cb8:	fe 01       	movw	r30, r28
    1cba:	e6 5d       	subi	r30, 0xD6	; 214
    1cbc:	fe 4f       	sbci	r31, 0xFE	; 254
    1cbe:	84 e0       	ldi	r24, 0x04	; 4
    1cc0:	84 a7       	std	Z+44, r24	; 0x2c
    1cc2:	fe 01       	movw	r30, r28
    1cc4:	e6 5d       	subi	r30, 0xD6	; 214
    1cc6:	fe 4f       	sbci	r31, 0xFE	; 254
    1cc8:	88 e0       	ldi	r24, 0x08	; 8
    1cca:	85 a7       	std	Z+45, r24	; 0x2d
    1ccc:	fe 01       	movw	r30, r28
    1cce:	e6 5d       	subi	r30, 0xD6	; 214
    1cd0:	fe 4f       	sbci	r31, 0xFE	; 254
    1cd2:	80 e1       	ldi	r24, 0x10	; 16
    1cd4:	86 a7       	std	Z+46, r24	; 0x2e
    1cd6:	fe 01       	movw	r30, r28
    1cd8:	e6 5d       	subi	r30, 0xD6	; 214
    1cda:	fe 4f       	sbci	r31, 0xFE	; 254
    1cdc:	85 e0       	ldi	r24, 0x05	; 5
    1cde:	80 ab       	std	Z+48, r24	; 0x30
    1ce0:	fe 01       	movw	r30, r28
    1ce2:	e6 5d       	subi	r30, 0xD6	; 214
    1ce4:	fe 4f       	sbci	r31, 0xFE	; 254
    1ce6:	87 e0       	ldi	r24, 0x07	; 7
    1ce8:	82 ab       	std	Z+50, r24	; 0x32
    1cea:	fe 01       	movw	r30, r28
    1cec:	e6 5d       	subi	r30, 0xD6	; 214
    1cee:	fe 4f       	sbci	r31, 0xFE	; 254
    1cf0:	85 e0       	ldi	r24, 0x05	; 5
    1cf2:	83 ab       	std	Z+51, r24	; 0x33
    1cf4:	fe 01       	movw	r30, r28
    1cf6:	e6 5d       	subi	r30, 0xD6	; 214
    1cf8:	fe 4f       	sbci	r31, 0xFE	; 254
    1cfa:	8f e1       	ldi	r24, 0x1F	; 31
    1cfc:	84 ab       	std	Z+52, r24	; 0x34
    1cfe:	fe 01       	movw	r30, r28
    1d00:	e6 5d       	subi	r30, 0xD6	; 214
    1d02:	fe 4f       	sbci	r31, 0xFE	; 254
    1d04:	84 e0       	ldi	r24, 0x04	; 4
    1d06:	81 af       	std	Z+57, r24	; 0x39
    1d08:	fe 01       	movw	r30, r28
    1d0a:	e6 5d       	subi	r30, 0xD6	; 214
    1d0c:	fe 4f       	sbci	r31, 0xFE	; 254
    1d0e:	84 e0       	ldi	r24, 0x04	; 4
    1d10:	82 af       	std	Z+58, r24	; 0x3a
    1d12:	fe 01       	movw	r30, r28
    1d14:	e6 5d       	subi	r30, 0xD6	; 214
    1d16:	fe 4f       	sbci	r31, 0xFE	; 254
    1d18:	84 e0       	ldi	r24, 0x04	; 4
    1d1a:	83 af       	std	Z+59, r24	; 0x3b
    1d1c:	fe 01       	movw	r30, r28
    1d1e:	e6 5d       	subi	r30, 0xD6	; 214
    1d20:	fe 4f       	sbci	r31, 0xFE	; 254
    1d22:	84 e0       	ldi	r24, 0x04	; 4
    1d24:	84 af       	std	Z+60, r24	; 0x3c
    1d26:	ce 01       	movw	r24, r28
    1d28:	86 5d       	subi	r24, 0xD6	; 214
    1d2a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d2c:	fc 01       	movw	r30, r24
    1d2e:	ed 5b       	subi	r30, 0xBD	; 189
    1d30:	ff 4f       	sbci	r31, 0xFF	; 255
    1d32:	82 e0       	ldi	r24, 0x02	; 2
    1d34:	80 83       	st	Z, r24
    1d36:	ce 01       	movw	r24, r28
    1d38:	86 5d       	subi	r24, 0xD6	; 214
    1d3a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d3c:	fc 01       	movw	r30, r24
    1d3e:	ec 5b       	subi	r30, 0xBC	; 188
    1d40:	ff 4f       	sbci	r31, 0xFF	; 255
    1d42:	8e e1       	ldi	r24, 0x1E	; 30
    1d44:	80 83       	st	Z, r24
    1d46:	ce 01       	movw	r24, r28
    1d48:	86 5d       	subi	r24, 0xD6	; 214
    1d4a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d4c:	fc 01       	movw	r30, r24
    1d4e:	ea 5b       	subi	r30, 0xBA	; 186
    1d50:	ff 4f       	sbci	r31, 0xFF	; 255
    1d52:	8c e0       	ldi	r24, 0x0C	; 12
    1d54:	80 83       	st	Z, r24
    1d56:	ce 01       	movw	r24, r28
    1d58:	86 5d       	subi	r24, 0xD6	; 214
    1d5a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d5c:	fc 01       	movw	r30, r24
    1d5e:	e6 5b       	subi	r30, 0xB6	; 182
    1d60:	ff 4f       	sbci	r31, 0xFF	; 255
    1d62:	87 e0       	ldi	r24, 0x07	; 7
    1d64:	80 83       	st	Z, r24
    1d66:	ce 01       	movw	r24, r28
    1d68:	86 5d       	subi	r24, 0xD6	; 214
    1d6a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d6c:	fc 01       	movw	r30, r24
    1d6e:	e5 5b       	subi	r30, 0xB5	; 181
    1d70:	ff 4f       	sbci	r31, 0xFF	; 255
    1d72:	85 e0       	ldi	r24, 0x05	; 5
    1d74:	80 83       	st	Z, r24
    1d76:	ce 01       	movw	r24, r28
    1d78:	86 5d       	subi	r24, 0xD6	; 214
    1d7a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d7c:	fc 01       	movw	r30, r24
    1d7e:	e4 5b       	subi	r30, 0xB4	; 180
    1d80:	ff 4f       	sbci	r31, 0xFF	; 255
    1d82:	8f e1       	ldi	r24, 0x1F	; 31
    1d84:	80 83       	st	Z, r24
    1d86:	ce 01       	movw	r24, r28
    1d88:	86 5d       	subi	r24, 0xD6	; 214
    1d8a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d8c:	fc 01       	movw	r30, r24
    1d8e:	ee 5a       	subi	r30, 0xAE	; 174
    1d90:	ff 4f       	sbci	r31, 0xFF	; 255
    1d92:	8e e0       	ldi	r24, 0x0E	; 14
    1d94:	80 83       	st	Z, r24
    1d96:	ce 01       	movw	r24, r28
    1d98:	86 5d       	subi	r24, 0xD6	; 214
    1d9a:	9e 4f       	sbci	r25, 0xFE	; 254
    1d9c:	fc 01       	movw	r30, r24
    1d9e:	ed 5a       	subi	r30, 0xAD	; 173
    1da0:	ff 4f       	sbci	r31, 0xFF	; 255
    1da2:	88 e0       	ldi	r24, 0x08	; 8
    1da4:	80 83       	st	Z, r24
    1da6:	ce 01       	movw	r24, r28
    1da8:	86 5d       	subi	r24, 0xD6	; 214
    1daa:	9e 4f       	sbci	r25, 0xFE	; 254
    1dac:	fc 01       	movw	r30, r24
    1dae:	ec 5a       	subi	r30, 0xAC	; 172
    1db0:	ff 4f       	sbci	r31, 0xFF	; 255
    1db2:	8f e1       	ldi	r24, 0x1F	; 31
    1db4:	80 83       	st	Z, r24
    1db6:	ce 01       	movw	r24, r28
    1db8:	86 5d       	subi	r24, 0xD6	; 214
    1dba:	9e 4f       	sbci	r25, 0xFE	; 254
    1dbc:	fc 01       	movw	r30, r24
    1dbe:	e6 5a       	subi	r30, 0xA6	; 166
    1dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc2:	87 e0       	ldi	r24, 0x07	; 7
    1dc4:	80 83       	st	Z, r24
    1dc6:	ce 01       	movw	r24, r28
    1dc8:	86 5d       	subi	r24, 0xD6	; 214
    1dca:	9e 4f       	sbci	r25, 0xFE	; 254
    1dcc:	fc 01       	movw	r30, r24
    1dce:	e5 5a       	subi	r30, 0xA5	; 165
    1dd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd2:	81 e0       	ldi	r24, 0x01	; 1
    1dd4:	80 83       	st	Z, r24
    1dd6:	ce 01       	movw	r24, r28
    1dd8:	86 5d       	subi	r24, 0xD6	; 214
    1dda:	9e 4f       	sbci	r25, 0xFE	; 254
    1ddc:	fc 01       	movw	r30, r24
    1dde:	e4 5a       	subi	r30, 0xA4	; 164
    1de0:	ff 4f       	sbci	r31, 0xFF	; 255
    1de2:	87 e0       	ldi	r24, 0x07	; 7
    1de4:	80 83       	st	Z, r24
    1de6:	ce 01       	movw	r24, r28
    1de8:	86 5d       	subi	r24, 0xD6	; 214
    1dea:	9e 4f       	sbci	r25, 0xFE	; 254
    1dec:	fc 01       	movw	r30, r24
    1dee:	ed 59       	subi	r30, 0x9D	; 157
    1df0:	ff 4f       	sbci	r31, 0xFF	; 255
    1df2:	86 e0       	ldi	r24, 0x06	; 6
    1df4:	80 83       	st	Z, r24
    1df6:	ce 01       	movw	r24, r28
    1df8:	86 5d       	subi	r24, 0xD6	; 214
    1dfa:	9e 4f       	sbci	r25, 0xFE	; 254
    1dfc:	fc 01       	movw	r30, r24
    1dfe:	ec 59       	subi	r30, 0x9C	; 156
    1e00:	ff 4f       	sbci	r31, 0xFF	; 255
    1e02:	8e e0       	ldi	r24, 0x0E	; 14
    1e04:	80 83       	st	Z, r24
    1e06:	ce 01       	movw	r24, r28
    1e08:	86 5d       	subi	r24, 0xD6	; 214
    1e0a:	9e 4f       	sbci	r25, 0xFE	; 254
    1e0c:	fc 01       	movw	r30, r24
    1e0e:	eb 59       	subi	r30, 0x9B	; 155
    1e10:	ff 4f       	sbci	r31, 0xFF	; 255
    1e12:	88 e0       	ldi	r24, 0x08	; 8
    1e14:	80 83       	st	Z, r24
    1e16:	ce 01       	movw	r24, r28
    1e18:	86 5d       	subi	r24, 0xD6	; 214
    1e1a:	9e 4f       	sbci	r25, 0xFE	; 254
    1e1c:	fc 01       	movw	r30, r24
    1e1e:	ea 59       	subi	r30, 0x9A	; 154
    1e20:	ff 4f       	sbci	r31, 0xFF	; 255
    1e22:	88 e0       	ldi	r24, 0x08	; 8
    1e24:	80 83       	st	Z, r24
    1e26:	ce 01       	movw	r24, r28
    1e28:	86 5d       	subi	r24, 0xD6	; 214
    1e2a:	9e 4f       	sbci	r25, 0xFE	; 254
    1e2c:	fc 01       	movw	r30, r24
    1e2e:	e7 59       	subi	r30, 0x97	; 151
    1e30:	ff 4f       	sbci	r31, 0xFF	; 255
    1e32:	82 e0       	ldi	r24, 0x02	; 2
    1e34:	80 83       	st	Z, r24
    1e36:	ce 01       	movw	r24, r28
    1e38:	86 5d       	subi	r24, 0xD6	; 214
    1e3a:	9e 4f       	sbci	r25, 0xFE	; 254
    1e3c:	fc 01       	movw	r30, r24
    1e3e:	e6 59       	subi	r30, 0x96	; 150
    1e40:	ff 4f       	sbci	r31, 0xFF	; 255
    1e42:	85 e0       	ldi	r24, 0x05	; 5
    1e44:	80 83       	st	Z, r24
    1e46:	ce 01       	movw	r24, r28
    1e48:	86 5d       	subi	r24, 0xD6	; 214
    1e4a:	9e 4f       	sbci	r25, 0xFE	; 254
    1e4c:	fc 01       	movw	r30, r24
    1e4e:	e5 59       	subi	r30, 0x95	; 149
    1e50:	ff 4f       	sbci	r31, 0xFF	; 255
    1e52:	83 e0       	ldi	r24, 0x03	; 3
    1e54:	80 83       	st	Z, r24
    1e56:	ce 01       	movw	r24, r28
    1e58:	86 5d       	subi	r24, 0xD6	; 214
    1e5a:	9e 4f       	sbci	r25, 0xFE	; 254
    1e5c:	fc 01       	movw	r30, r24
    1e5e:	e4 59       	subi	r30, 0x94	; 148
    1e60:	ff 4f       	sbci	r31, 0xFF	; 255
    1e62:	8f e1       	ldi	r24, 0x1F	; 31
    1e64:	80 83       	st	Z, r24
    1e66:	ce 01       	movw	r24, r28
    1e68:	86 5d       	subi	r24, 0xD6	; 214
    1e6a:	9e 4f       	sbci	r25, 0xFE	; 254
    1e6c:	fc 01       	movw	r30, r24
    1e6e:	ef 58       	subi	r30, 0x8F	; 143
    1e70:	ff 4f       	sbci	r31, 0xFF	; 255
    1e72:	81 e0       	ldi	r24, 0x01	; 1
    1e74:	80 83       	st	Z, r24
    1e76:	ce 01       	movw	r24, r28
    1e78:	86 5d       	subi	r24, 0xD6	; 214
    1e7a:	9e 4f       	sbci	r25, 0xFE	; 254
    1e7c:	fc 01       	movw	r30, r24
    1e7e:	ee 58       	subi	r30, 0x8E	; 142
    1e80:	ff 4f       	sbci	r31, 0xFF	; 255
    1e82:	81 e0       	ldi	r24, 0x01	; 1
    1e84:	80 83       	st	Z, r24
    1e86:	ce 01       	movw	r24, r28
    1e88:	86 5d       	subi	r24, 0xD6	; 214
    1e8a:	9e 4f       	sbci	r25, 0xFE	; 254
    1e8c:	fc 01       	movw	r30, r24
    1e8e:	ed 58       	subi	r30, 0x8D	; 141
    1e90:	ff 4f       	sbci	r31, 0xFF	; 255
    1e92:	81 e0       	ldi	r24, 0x01	; 1
    1e94:	80 83       	st	Z, r24
    1e96:	ce 01       	movw	r24, r28
    1e98:	86 5d       	subi	r24, 0xD6	; 214
    1e9a:	9e 4f       	sbci	r25, 0xFE	; 254
    1e9c:	fc 01       	movw	r30, r24
    1e9e:	ec 58       	subi	r30, 0x8C	; 140
    1ea0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea2:	85 e0       	ldi	r24, 0x05	; 5
    1ea4:	80 83       	st	Z, r24
    1ea6:	ce 01       	movw	r24, r28
    1ea8:	86 5d       	subi	r24, 0xD6	; 214
    1eaa:	9e 4f       	sbci	r25, 0xFE	; 254
    1eac:	fc 01       	movw	r30, r24
    1eae:	eb 58       	subi	r30, 0x8B	; 139
    1eb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb2:	85 e0       	ldi	r24, 0x05	; 5
    1eb4:	80 83       	st	Z, r24
    1eb6:	ce 01       	movw	r24, r28
    1eb8:	86 5d       	subi	r24, 0xD6	; 214
    1eba:	9e 4f       	sbci	r25, 0xFE	; 254
    1ebc:	fc 01       	movw	r30, r24
    1ebe:	ea 58       	subi	r30, 0x8A	; 138
    1ec0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec2:	82 e0       	ldi	r24, 0x02	; 2
    1ec4:	80 83       	st	Z, r24
    1ec6:	ce 01       	movw	r24, r28
    1ec8:	86 5d       	subi	r24, 0xD6	; 214
    1eca:	9e 4f       	sbci	r25, 0xFE	; 254
    1ecc:	fc 01       	movw	r30, r24
    1ece:	e6 58       	subi	r30, 0x86	; 134
    1ed0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed2:	8c e0       	ldi	r24, 0x0C	; 12
    1ed4:	80 83       	st	Z, r24
    1ed6:	ce 01       	movw	r24, r28
    1ed8:	86 5d       	subi	r24, 0xD6	; 214
    1eda:	9e 4f       	sbci	r25, 0xFE	; 254
    1edc:	fc 01       	movw	r30, r24
    1ede:	e5 58       	subi	r30, 0x85	; 133
    1ee0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee2:	82 e0       	ldi	r24, 0x02	; 2
    1ee4:	80 83       	st	Z, r24
    1ee6:	ce 01       	movw	r24, r28
    1ee8:	86 5d       	subi	r24, 0xD6	; 214
    1eea:	9e 4f       	sbci	r25, 0xFE	; 254
    1eec:	fc 01       	movw	r30, r24
    1eee:	e4 58       	subi	r30, 0x84	; 132
    1ef0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef2:	8f e1       	ldi	r24, 0x1F	; 31
    1ef4:	80 83       	st	Z, r24
    1ef6:	ce 01       	movw	r24, r28
    1ef8:	86 5d       	subi	r24, 0xD6	; 214
    1efa:	9e 4f       	sbci	r25, 0xFE	; 254
    1efc:	fc 01       	movw	r30, r24
    1efe:	e3 58       	subi	r30, 0x83	; 131
    1f00:	ff 4f       	sbci	r31, 0xFF	; 255
    1f02:	84 e0       	ldi	r24, 0x04	; 4
    1f04:	80 83       	st	Z, r24
    1f06:	ce 01       	movw	r24, r28
    1f08:	86 5d       	subi	r24, 0xD6	; 214
    1f0a:	9e 4f       	sbci	r25, 0xFE	; 254
    1f0c:	fc 01       	movw	r30, r24
    1f0e:	e0 58       	subi	r30, 0x80	; 128
    1f10:	ff 4f       	sbci	r31, 0xFF	; 255
    1f12:	8d e0       	ldi	r24, 0x0D	; 13
    1f14:	80 83       	st	Z, r24
    1f16:	ce 01       	movw	r24, r28
    1f18:	86 5d       	subi	r24, 0xD6	; 214
    1f1a:	9e 4f       	sbci	r25, 0xFE	; 254
    1f1c:	fc 01       	movw	r30, r24
    1f1e:	ef 57       	subi	r30, 0x7F	; 127
    1f20:	ff 4f       	sbci	r31, 0xFF	; 255
    1f22:	89 e1       	ldi	r24, 0x19	; 25
    1f24:	80 83       	st	Z, r24
    1f26:	ce 01       	movw	r24, r28
    1f28:	86 5d       	subi	r24, 0xD6	; 214
    1f2a:	9e 4f       	sbci	r25, 0xFE	; 254
    1f2c:	fc 01       	movw	r30, r24
    1f2e:	ee 57       	subi	r30, 0x7E	; 126
    1f30:	ff 4f       	sbci	r31, 0xFF	; 255
    1f32:	81 e0       	ldi	r24, 0x01	; 1
    1f34:	80 83       	st	Z, r24
    1f36:	ce 01       	movw	r24, r28
    1f38:	86 5d       	subi	r24, 0xD6	; 214
    1f3a:	9e 4f       	sbci	r25, 0xFE	; 254
    1f3c:	fc 01       	movw	r30, r24
    1f3e:	ed 57       	subi	r30, 0x7D	; 125
    1f40:	ff 4f       	sbci	r31, 0xFF	; 255
    1f42:	81 e1       	ldi	r24, 0x11	; 17
    1f44:	80 83       	st	Z, r24
    1f46:	ce 01       	movw	r24, r28
    1f48:	86 5d       	subi	r24, 0xD6	; 214
    1f4a:	9e 4f       	sbci	r25, 0xFE	; 254
    1f4c:	fc 01       	movw	r30, r24
    1f4e:	ec 57       	subi	r30, 0x7C	; 124
    1f50:	ff 4f       	sbci	r31, 0xFF	; 255
    1f52:	8f e1       	ldi	r24, 0x1F	; 31
    1f54:	80 83       	st	Z, r24
    1f56:	ce 01       	movw	r24, r28
    1f58:	86 5d       	subi	r24, 0xD6	; 214
    1f5a:	9e 4f       	sbci	r25, 0xFE	; 254
    1f5c:	fc 01       	movw	r30, r24
    1f5e:	e6 57       	subi	r30, 0x76	; 118
    1f60:	ff 4f       	sbci	r31, 0xFF	; 255
    1f62:	85 e1       	ldi	r24, 0x15	; 21
    1f64:	80 83       	st	Z, r24
    1f66:	ce 01       	movw	r24, r28
    1f68:	86 5d       	subi	r24, 0xD6	; 214
    1f6a:	9e 4f       	sbci	r25, 0xFE	; 254
    1f6c:	fc 01       	movw	r30, r24
    1f6e:	e5 57       	subi	r30, 0x75	; 117
    1f70:	ff 4f       	sbci	r31, 0xFF	; 255
    1f72:	85 e1       	ldi	r24, 0x15	; 21
    1f74:	80 83       	st	Z, r24
    1f76:	ce 01       	movw	r24, r28
    1f78:	86 5d       	subi	r24, 0xD6	; 214
    1f7a:	9e 4f       	sbci	r25, 0xFE	; 254
    1f7c:	fc 01       	movw	r30, r24
    1f7e:	e4 57       	subi	r30, 0x74	; 116
    1f80:	ff 4f       	sbci	r31, 0xFF	; 255
    1f82:	8f e1       	ldi	r24, 0x1F	; 31
    1f84:	80 83       	st	Z, r24
    1f86:	ce 01       	movw	r24, r28
    1f88:	86 5d       	subi	r24, 0xD6	; 214
    1f8a:	9e 4f       	sbci	r25, 0xFE	; 254
    1f8c:	fc 01       	movw	r30, r24
    1f8e:	ef 56       	subi	r30, 0x6F	; 111
    1f90:	ff 4f       	sbci	r31, 0xFF	; 255
    1f92:	8a e0       	ldi	r24, 0x0A	; 10
    1f94:	80 83       	st	Z, r24
    1f96:	ce 01       	movw	r24, r28
    1f98:	86 5d       	subi	r24, 0xD6	; 214
    1f9a:	9e 4f       	sbci	r25, 0xFE	; 254
    1f9c:	fc 01       	movw	r30, r24
    1f9e:	ee 56       	subi	r30, 0x6E	; 110
    1fa0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa2:	84 e0       	ldi	r24, 0x04	; 4
    1fa4:	80 83       	st	Z, r24
    1fa6:	ce 01       	movw	r24, r28
    1fa8:	86 5d       	subi	r24, 0xD6	; 214
    1faa:	9e 4f       	sbci	r25, 0xFE	; 254
    1fac:	fc 01       	movw	r30, r24
    1fae:	ed 56       	subi	r30, 0x6D	; 109
    1fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb2:	8a e0       	ldi	r24, 0x0A	; 10
    1fb4:	80 83       	st	Z, r24
    1fb6:	ce 01       	movw	r24, r28
    1fb8:	86 5d       	subi	r24, 0xD6	; 214
    1fba:	9e 4f       	sbci	r25, 0xFE	; 254
    1fbc:	fc 01       	movw	r30, r24
    1fbe:	ec 56       	subi	r30, 0x6C	; 108
    1fc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc2:	8e e0       	ldi	r24, 0x0E	; 14
    1fc4:	80 83       	st	Z, r24
    1fc6:	ce 01       	movw	r24, r28
    1fc8:	86 5d       	subi	r24, 0xD6	; 214
    1fca:	9e 4f       	sbci	r25, 0xFE	; 254
    1fcc:	fc 01       	movw	r30, r24
    1fce:	e8 56       	subi	r30, 0x68	; 104
    1fd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd2:	85 e1       	ldi	r24, 0x15	; 21
    1fd4:	80 83       	st	Z, r24
    1fd6:	ce 01       	movw	r24, r28
    1fd8:	86 5d       	subi	r24, 0xD6	; 214
    1fda:	9e 4f       	sbci	r25, 0xFE	; 254
    1fdc:	fc 01       	movw	r30, r24
    1fde:	e6 56       	subi	r30, 0x66	; 102
    1fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe2:	85 e1       	ldi	r24, 0x15	; 21
    1fe4:	80 83       	st	Z, r24
    1fe6:	ce 01       	movw	r24, r28
    1fe8:	86 5d       	subi	r24, 0xD6	; 214
    1fea:	9e 4f       	sbci	r25, 0xFE	; 254
    1fec:	fc 01       	movw	r30, r24
    1fee:	e5 56       	subi	r30, 0x65	; 101
    1ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff2:	85 e1       	ldi	r24, 0x15	; 21
    1ff4:	80 83       	st	Z, r24
    1ff6:	ce 01       	movw	r24, r28
    1ff8:	86 5d       	subi	r24, 0xD6	; 214
    1ffa:	9e 4f       	sbci	r25, 0xFE	; 254
    1ffc:	fc 01       	movw	r30, r24
    1ffe:	e4 56       	subi	r30, 0x64	; 100
    2000:	ff 4f       	sbci	r31, 0xFF	; 255
    2002:	8f e1       	ldi	r24, 0x1F	; 31
    2004:	80 83       	st	Z, r24
    2006:	ce 01       	movw	r24, r28
    2008:	86 5d       	subi	r24, 0xD6	; 214
    200a:	9e 4f       	sbci	r25, 0xFE	; 254
    200c:	fc 01       	movw	r30, r24
    200e:	e0 56       	subi	r30, 0x60	; 96
    2010:	ff 4f       	sbci	r31, 0xFF	; 255
    2012:	81 e0       	ldi	r24, 0x01	; 1
    2014:	80 83       	st	Z, r24
    2016:	ce 01       	movw	r24, r28
    2018:	86 5d       	subi	r24, 0xD6	; 214
    201a:	9e 4f       	sbci	r25, 0xFE	; 254
    201c:	fc 01       	movw	r30, r24
    201e:	ef 55       	subi	r30, 0x5F	; 95
    2020:	ff 4f       	sbci	r31, 0xFF	; 255
    2022:	82 e0       	ldi	r24, 0x02	; 2
    2024:	80 83       	st	Z, r24
    2026:	ce 01       	movw	r24, r28
    2028:	86 5d       	subi	r24, 0xD6	; 214
    202a:	9e 4f       	sbci	r25, 0xFE	; 254
    202c:	fc 01       	movw	r30, r24
    202e:	ee 55       	subi	r30, 0x5E	; 94
    2030:	ff 4f       	sbci	r31, 0xFF	; 255
    2032:	84 e0       	ldi	r24, 0x04	; 4
    2034:	80 83       	st	Z, r24
    2036:	ce 01       	movw	r24, r28
    2038:	86 5d       	subi	r24, 0xD6	; 214
    203a:	9e 4f       	sbci	r25, 0xFE	; 254
    203c:	fc 01       	movw	r30, r24
    203e:	ed 55       	subi	r30, 0x5D	; 93
    2040:	ff 4f       	sbci	r31, 0xFF	; 255
    2042:	82 e0       	ldi	r24, 0x02	; 2
    2044:	80 83       	st	Z, r24
    2046:	ce 01       	movw	r24, r28
    2048:	86 5d       	subi	r24, 0xD6	; 214
    204a:	9e 4f       	sbci	r25, 0xFE	; 254
    204c:	fc 01       	movw	r30, r24
    204e:	ec 55       	subi	r30, 0x5C	; 92
    2050:	ff 4f       	sbci	r31, 0xFF	; 255
    2052:	8f e1       	ldi	r24, 0x1F	; 31
    2054:	80 83       	st	Z, r24
    2056:	ce 01       	movw	r24, r28
    2058:	86 5d       	subi	r24, 0xD6	; 214
    205a:	9e 4f       	sbci	r25, 0xFE	; 254
    205c:	fc 01       	movw	r30, r24
    205e:	e8 55       	subi	r30, 0x58	; 88
    2060:	ff 4f       	sbci	r31, 0xFF	; 255
    2062:	84 e0       	ldi	r24, 0x04	; 4
    2064:	80 83       	st	Z, r24
    2066:	ce 01       	movw	r24, r28
    2068:	86 5d       	subi	r24, 0xD6	; 214
    206a:	9e 4f       	sbci	r25, 0xFE	; 254
    206c:	fc 01       	movw	r30, r24
    206e:	e7 55       	subi	r30, 0x57	; 87
    2070:	ff 4f       	sbci	r31, 0xFF	; 255
    2072:	8a e0       	ldi	r24, 0x0A	; 10
    2074:	80 83       	st	Z, r24
    2076:	ce 01       	movw	r24, r28
    2078:	86 5d       	subi	r24, 0xD6	; 214
    207a:	9e 4f       	sbci	r25, 0xFE	; 254
    207c:	fc 01       	movw	r30, r24
    207e:	e6 55       	subi	r30, 0x56	; 86
    2080:	ff 4f       	sbci	r31, 0xFF	; 255
    2082:	88 e0       	ldi	r24, 0x08	; 8
    2084:	80 83       	st	Z, r24
    2086:	ce 01       	movw	r24, r28
    2088:	86 5d       	subi	r24, 0xD6	; 214
    208a:	9e 4f       	sbci	r25, 0xFE	; 254
    208c:	fc 01       	movw	r30, r24
    208e:	e5 55       	subi	r30, 0x55	; 85
    2090:	ff 4f       	sbci	r31, 0xFF	; 255
    2092:	84 e0       	ldi	r24, 0x04	; 4
    2094:	80 83       	st	Z, r24
    2096:	ce 01       	movw	r24, r28
    2098:	86 5d       	subi	r24, 0xD6	; 214
    209a:	9e 4f       	sbci	r25, 0xFE	; 254
    209c:	fc 01       	movw	r30, r24
    209e:	e4 55       	subi	r30, 0x54	; 84
    20a0:	ff 4f       	sbci	r31, 0xFF	; 255
    20a2:	84 e0       	ldi	r24, 0x04	; 4
    20a4:	80 83       	st	Z, r24
    20a6:	ce 01       	movw	r24, r28
    20a8:	86 5d       	subi	r24, 0xD6	; 214
    20aa:	9e 4f       	sbci	r25, 0xFE	; 254
    20ac:	fc 01       	movw	r30, r24
    20ae:	e2 55       	subi	r30, 0x52	; 82
    20b0:	ff 4f       	sbci	r31, 0xFF	; 255
    20b2:	84 e0       	ldi	r24, 0x04	; 4
    20b4:	80 83       	st	Z, r24
    20b6:	ce 01       	movw	r24, r28
    20b8:	86 5d       	subi	r24, 0xD6	; 214
    20ba:	9e 4f       	sbci	r25, 0xFE	; 254
    20bc:	fc 01       	movw	r30, r24
    20be:	ee 54       	subi	r30, 0x4E	; 78
    20c0:	ff 4f       	sbci	r31, 0xFF	; 255
    20c2:	87 e0       	ldi	r24, 0x07	; 7
    20c4:	80 83       	st	Z, r24
    20c6:	ce 01       	movw	r24, r28
    20c8:	86 5d       	subi	r24, 0xD6	; 214
    20ca:	9e 4f       	sbci	r25, 0xFE	; 254
    20cc:	fc 01       	movw	r30, r24
    20ce:	ed 54       	subi	r30, 0x4D	; 77
    20d0:	ff 4f       	sbci	r31, 0xFF	; 255
    20d2:	85 e0       	ldi	r24, 0x05	; 5
    20d4:	80 83       	st	Z, r24
    20d6:	ce 01       	movw	r24, r28
    20d8:	86 5d       	subi	r24, 0xD6	; 214
    20da:	9e 4f       	sbci	r25, 0xFE	; 254
    20dc:	fc 01       	movw	r30, r24
    20de:	ec 54       	subi	r30, 0x4C	; 76
    20e0:	ff 4f       	sbci	r31, 0xFF	; 255
    20e2:	87 e0       	ldi	r24, 0x07	; 7
    20e4:	80 83       	st	Z, r24
    20e6:	ce 01       	movw	r24, r28
    20e8:	86 5d       	subi	r24, 0xD6	; 214
    20ea:	9e 4f       	sbci	r25, 0xFE	; 254
    20ec:	fc 01       	movw	r30, r24
    20ee:	eb 54       	subi	r30, 0x4B	; 75
    20f0:	ff 4f       	sbci	r31, 0xFF	; 255
    20f2:	81 e0       	ldi	r24, 0x01	; 1
    20f4:	80 83       	st	Z, r24
    20f6:	ce 01       	movw	r24, r28
    20f8:	86 5d       	subi	r24, 0xD6	; 214
    20fa:	9e 4f       	sbci	r25, 0xFE	; 254
    20fc:	fc 01       	movw	r30, r24
    20fe:	ea 54       	subi	r30, 0x4A	; 74
    2100:	ff 4f       	sbci	r31, 0xFF	; 255
    2102:	82 e0       	ldi	r24, 0x02	; 2
    2104:	80 83       	st	Z, r24
    2106:	ce 01       	movw	r24, r28
    2108:	86 5d       	subi	r24, 0xD6	; 214
    210a:	9e 4f       	sbci	r25, 0xFE	; 254
    210c:	fc 01       	movw	r30, r24
    210e:	e8 54       	subi	r30, 0x48	; 72
    2110:	ff 4f       	sbci	r31, 0xFF	; 255
    2112:	84 e0       	ldi	r24, 0x04	; 4
    2114:	80 83       	st	Z, r24
    2116:	ce 01       	movw	r24, r28
    2118:	86 5d       	subi	r24, 0xD6	; 214
    211a:	9e 4f       	sbci	r25, 0xFE	; 254
    211c:	fc 01       	movw	r30, r24
    211e:	e6 54       	subi	r30, 0x46	; 70
    2120:	ff 4f       	sbci	r31, 0xFF	; 255
    2122:	8c e0       	ldi	r24, 0x0C	; 12
    2124:	80 83       	st	Z, r24
    2126:	ce 01       	movw	r24, r28
    2128:	86 5d       	subi	r24, 0xD6	; 214
    212a:	9e 4f       	sbci	r25, 0xFE	; 254
    212c:	fc 01       	movw	r30, r24
    212e:	e5 54       	subi	r30, 0x45	; 69
    2130:	ff 4f       	sbci	r31, 0xFF	; 255
    2132:	82 e0       	ldi	r24, 0x02	; 2
    2134:	80 83       	st	Z, r24
    2136:	ce 01       	movw	r24, r28
    2138:	86 5d       	subi	r24, 0xD6	; 214
    213a:	9e 4f       	sbci	r25, 0xFE	; 254
    213c:	fc 01       	movw	r30, r24
    213e:	e4 54       	subi	r30, 0x44	; 68
    2140:	ff 4f       	sbci	r31, 0xFF	; 255
    2142:	8f e1       	ldi	r24, 0x1F	; 31
    2144:	80 83       	st	Z, r24
    2146:	ce 01       	movw	r24, r28
    2148:	86 5d       	subi	r24, 0xD6	; 214
    214a:	9e 4f       	sbci	r25, 0xFE	; 254
    214c:	fc 01       	movw	r30, r24
    214e:	ee 53       	subi	r30, 0x3E	; 62
    2150:	ff 4f       	sbci	r31, 0xFF	; 255
    2152:	84 e0       	ldi	r24, 0x04	; 4
    2154:	80 83       	st	Z, r24
    2156:	ce 01       	movw	r24, r28
    2158:	86 5d       	subi	r24, 0xD6	; 214
    215a:	9e 4f       	sbci	r25, 0xFE	; 254
    215c:	fc 01       	movw	r30, r24
    215e:	ed 53       	subi	r30, 0x3D	; 61
    2160:	ff 4f       	sbci	r31, 0xFF	; 255
    2162:	81 e1       	ldi	r24, 0x11	; 17
    2164:	80 83       	st	Z, r24
    2166:	ce 01       	movw	r24, r28
    2168:	86 5d       	subi	r24, 0xD6	; 214
    216a:	9e 4f       	sbci	r25, 0xFE	; 254
    216c:	fc 01       	movw	r30, r24
    216e:	ec 53       	subi	r30, 0x3C	; 60
    2170:	ff 4f       	sbci	r31, 0xFF	; 255
    2172:	8f e1       	ldi	r24, 0x1F	; 31
    2174:	80 83       	st	Z, r24
    2176:	ce 01       	movw	r24, r28
    2178:	86 5d       	subi	r24, 0xD6	; 214
    217a:	9e 4f       	sbci	r25, 0xFE	; 254
    217c:	fc 01       	movw	r30, r24
    217e:	e8 53       	subi	r30, 0x38	; 56
    2180:	ff 4f       	sbci	r31, 0xFF	; 255
    2182:	82 e0       	ldi	r24, 0x02	; 2
    2184:	80 83       	st	Z, r24
    2186:	ce 01       	movw	r24, r28
    2188:	86 5d       	subi	r24, 0xD6	; 214
    218a:	9e 4f       	sbci	r25, 0xFE	; 254
    218c:	fc 01       	movw	r30, r24
    218e:	e6 53       	subi	r30, 0x36	; 54
    2190:	ff 4f       	sbci	r31, 0xFF	; 255
    2192:	87 e0       	ldi	r24, 0x07	; 7
    2194:	80 83       	st	Z, r24
    2196:	ce 01       	movw	r24, r28
    2198:	86 5d       	subi	r24, 0xD6	; 214
    219a:	9e 4f       	sbci	r25, 0xFE	; 254
    219c:	fc 01       	movw	r30, r24
    219e:	e5 53       	subi	r30, 0x35	; 53
    21a0:	ff 4f       	sbci	r31, 0xFF	; 255
    21a2:	85 e0       	ldi	r24, 0x05	; 5
    21a4:	80 83       	st	Z, r24
    21a6:	ce 01       	movw	r24, r28
    21a8:	86 5d       	subi	r24, 0xD6	; 214
    21aa:	9e 4f       	sbci	r25, 0xFE	; 254
    21ac:	fc 01       	movw	r30, r24
    21ae:	e4 53       	subi	r30, 0x34	; 52
    21b0:	ff 4f       	sbci	r31, 0xFF	; 255
    21b2:	8f e1       	ldi	r24, 0x1F	; 31
    21b4:	80 83       	st	Z, r24
	while(1)
	{
		LCD_VoidSendCommand(1);
    21b6:	81 e0       	ldi	r24, 0x01	; 1
    21b8:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
		uint16 Local_u16FlexInput[5]={0};
    21bc:	ce 01       	movw	r24, r28
    21be:	86 50       	subi	r24, 0x06	; 6
    21c0:	9e 4f       	sbci	r25, 0xFE	; 254
    21c2:	2a e0       	ldi	r18, 0x0A	; 10
    21c4:	fc 01       	movw	r30, r24
    21c6:	df 01       	movw	r26, r30
    21c8:	32 2f       	mov	r19, r18
    21ca:	1d 92       	st	X+, r1
    21cc:	3a 95       	dec	r19
    21ce:	e9 f7       	brne	.-6      	; 0x21ca <main+0x6c0>
		ADC_u8_StartConvSynch(Local_u8ADCChannel[ADC_u8_SINGLE_ENDED_CH4],&Local_u16FlexInput[ADC_u8_SINGLE_ENDED_CH4]);
    21d0:	fe 01       	movw	r30, r28
    21d2:	eb 5d       	subi	r30, 0xDB	; 219
    21d4:	fe 4f       	sbci	r31, 0xFE	; 254
    21d6:	44 81       	ldd	r20, Z+4	; 0x04
    21d8:	ce 01       	movw	r24, r28
    21da:	86 50       	subi	r24, 0x06	; 6
    21dc:	9e 4f       	sbci	r25, 0xFE	; 254
    21de:	9c 01       	movw	r18, r24
    21e0:	28 5f       	subi	r18, 0xF8	; 248
    21e2:	3f 4f       	sbci	r19, 0xFF	; 255
    21e4:	84 2f       	mov	r24, r20
    21e6:	b9 01       	movw	r22, r18
    21e8:	0e 94 48 07 	call	0xe90	; 0xe90 <ADC_u8_StartConvSynch>
		Local_u16FlexInput[ADC_u8_SINGLE_ENDED_CH4]=((float)Local_u16FlexInput[ADC_u8_SINGLE_ENDED_CH4]/20);
    21ec:	fe 01       	movw	r30, r28
    21ee:	e6 50       	subi	r30, 0x06	; 6
    21f0:	fe 4f       	sbci	r31, 0xFE	; 254
    21f2:	80 85       	ldd	r24, Z+8	; 0x08
    21f4:	91 85       	ldd	r25, Z+9	; 0x09
    21f6:	cc 01       	movw	r24, r24
    21f8:	a0 e0       	ldi	r26, 0x00	; 0
    21fa:	b0 e0       	ldi	r27, 0x00	; 0
    21fc:	bc 01       	movw	r22, r24
    21fe:	cd 01       	movw	r24, r26
    2200:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    2204:	dc 01       	movw	r26, r24
    2206:	cb 01       	movw	r24, r22
    2208:	bc 01       	movw	r22, r24
    220a:	cd 01       	movw	r24, r26
    220c:	20 e0       	ldi	r18, 0x00	; 0
    220e:	30 e0       	ldi	r19, 0x00	; 0
    2210:	40 ea       	ldi	r20, 0xA0	; 160
    2212:	51 e4       	ldi	r21, 0x41	; 65
    2214:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    2218:	dc 01       	movw	r26, r24
    221a:	cb 01       	movw	r24, r22
    221c:	bc 01       	movw	r22, r24
    221e:	cd 01       	movw	r24, r26
    2220:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2224:	dc 01       	movw	r26, r24
    2226:	cb 01       	movw	r24, r22
    2228:	fe 01       	movw	r30, r28
    222a:	e6 50       	subi	r30, 0x06	; 6
    222c:	fe 4f       	sbci	r31, 0xFE	; 254
    222e:	91 87       	std	Z+9, r25	; 0x09
    2230:	80 87       	std	Z+8, r24	; 0x08
		LCD_voidGoToXY(0,0);
    2232:	80 e0       	ldi	r24, 0x00	; 0
    2234:	60 e0       	ldi	r22, 0x00	; 0
    2236:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
		LCD_voidSendNumber(Local_u16FlexInput[ADC_u8_SINGLE_ENDED_CH4]);
    223a:	fe 01       	movw	r30, r28
    223c:	e6 50       	subi	r30, 0x06	; 6
    223e:	fe 4f       	sbci	r31, 0xFE	; 254
    2240:	80 85       	ldd	r24, Z+8	; 0x08
    2242:	91 85       	ldd	r25, Z+9	; 0x09
    2244:	cc 01       	movw	r24, r24
    2246:	a0 e0       	ldi	r26, 0x00	; 0
    2248:	b0 e0       	ldi	r27, 0x00	; 0
    224a:	bc 01       	movw	r22, r24
    224c:	cd 01       	movw	r24, r26
    224e:	0e 94 c7 0c 	call	0x198e	; 0x198e <LCD_voidSendNumber>
    2252:	fe 01       	movw	r30, r28
    2254:	eb 5e       	subi	r30, 0xEB	; 235
    2256:	fe 4f       	sbci	r31, 0xFE	; 254
    2258:	80 e0       	ldi	r24, 0x00	; 0
    225a:	90 e0       	ldi	r25, 0x00	; 0
    225c:	aa ef       	ldi	r26, 0xFA	; 250
    225e:	b4 e4       	ldi	r27, 0x44	; 68
    2260:	80 83       	st	Z, r24
    2262:	91 83       	std	Z+1, r25	; 0x01
    2264:	a2 83       	std	Z+2, r26	; 0x02
    2266:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2268:	8e 01       	movw	r16, r28
    226a:	0f 5e       	subi	r16, 0xEF	; 239
    226c:	1e 4f       	sbci	r17, 0xFE	; 254
    226e:	fe 01       	movw	r30, r28
    2270:	eb 5e       	subi	r30, 0xEB	; 235
    2272:	fe 4f       	sbci	r31, 0xFE	; 254
    2274:	60 81       	ld	r22, Z
    2276:	71 81       	ldd	r23, Z+1	; 0x01
    2278:	82 81       	ldd	r24, Z+2	; 0x02
    227a:	93 81       	ldd	r25, Z+3	; 0x03
    227c:	20 e0       	ldi	r18, 0x00	; 0
    227e:	30 e0       	ldi	r19, 0x00	; 0
    2280:	4a e7       	ldi	r20, 0x7A	; 122
    2282:	55 e4       	ldi	r21, 0x45	; 69
    2284:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2288:	dc 01       	movw	r26, r24
    228a:	cb 01       	movw	r24, r22
    228c:	f8 01       	movw	r30, r16
    228e:	80 83       	st	Z, r24
    2290:	91 83       	std	Z+1, r25	; 0x01
    2292:	a2 83       	std	Z+2, r26	; 0x02
    2294:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2296:	fe 01       	movw	r30, r28
    2298:	ef 5e       	subi	r30, 0xEF	; 239
    229a:	fe 4f       	sbci	r31, 0xFE	; 254
    229c:	60 81       	ld	r22, Z
    229e:	71 81       	ldd	r23, Z+1	; 0x01
    22a0:	82 81       	ldd	r24, Z+2	; 0x02
    22a2:	93 81       	ldd	r25, Z+3	; 0x03
    22a4:	20 e0       	ldi	r18, 0x00	; 0
    22a6:	30 e0       	ldi	r19, 0x00	; 0
    22a8:	40 e8       	ldi	r20, 0x80	; 128
    22aa:	5f e3       	ldi	r21, 0x3F	; 63
    22ac:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    22b0:	88 23       	and	r24, r24
    22b2:	44 f4       	brge	.+16     	; 0x22c4 <main+0x7ba>
		__ticks = 1;
    22b4:	fe 01       	movw	r30, r28
    22b6:	e1 5f       	subi	r30, 0xF1	; 241
    22b8:	fe 4f       	sbci	r31, 0xFE	; 254
    22ba:	81 e0       	ldi	r24, 0x01	; 1
    22bc:	90 e0       	ldi	r25, 0x00	; 0
    22be:	91 83       	std	Z+1, r25	; 0x01
    22c0:	80 83       	st	Z, r24
    22c2:	64 c0       	rjmp	.+200    	; 0x238c <main+0x882>
	else if (__tmp > 65535)
    22c4:	fe 01       	movw	r30, r28
    22c6:	ef 5e       	subi	r30, 0xEF	; 239
    22c8:	fe 4f       	sbci	r31, 0xFE	; 254
    22ca:	60 81       	ld	r22, Z
    22cc:	71 81       	ldd	r23, Z+1	; 0x01
    22ce:	82 81       	ldd	r24, Z+2	; 0x02
    22d0:	93 81       	ldd	r25, Z+3	; 0x03
    22d2:	20 e0       	ldi	r18, 0x00	; 0
    22d4:	3f ef       	ldi	r19, 0xFF	; 255
    22d6:	4f e7       	ldi	r20, 0x7F	; 127
    22d8:	57 e4       	ldi	r21, 0x47	; 71
    22da:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    22de:	18 16       	cp	r1, r24
    22e0:	0c f0       	brlt	.+2      	; 0x22e4 <main+0x7da>
    22e2:	43 c0       	rjmp	.+134    	; 0x236a <main+0x860>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22e4:	fe 01       	movw	r30, r28
    22e6:	eb 5e       	subi	r30, 0xEB	; 235
    22e8:	fe 4f       	sbci	r31, 0xFE	; 254
    22ea:	60 81       	ld	r22, Z
    22ec:	71 81       	ldd	r23, Z+1	; 0x01
    22ee:	82 81       	ldd	r24, Z+2	; 0x02
    22f0:	93 81       	ldd	r25, Z+3	; 0x03
    22f2:	20 e0       	ldi	r18, 0x00	; 0
    22f4:	30 e0       	ldi	r19, 0x00	; 0
    22f6:	40 e2       	ldi	r20, 0x20	; 32
    22f8:	51 e4       	ldi	r21, 0x41	; 65
    22fa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    22fe:	dc 01       	movw	r26, r24
    2300:	cb 01       	movw	r24, r22
    2302:	8e 01       	movw	r16, r28
    2304:	01 5f       	subi	r16, 0xF1	; 241
    2306:	1e 4f       	sbci	r17, 0xFE	; 254
    2308:	bc 01       	movw	r22, r24
    230a:	cd 01       	movw	r24, r26
    230c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2310:	dc 01       	movw	r26, r24
    2312:	cb 01       	movw	r24, r22
    2314:	f8 01       	movw	r30, r16
    2316:	91 83       	std	Z+1, r25	; 0x01
    2318:	80 83       	st	Z, r24
    231a:	1f c0       	rjmp	.+62     	; 0x235a <main+0x850>
    231c:	fe 01       	movw	r30, r28
    231e:	e3 5f       	subi	r30, 0xF3	; 243
    2320:	fe 4f       	sbci	r31, 0xFE	; 254
    2322:	80 e9       	ldi	r24, 0x90	; 144
    2324:	91 e0       	ldi	r25, 0x01	; 1
    2326:	91 83       	std	Z+1, r25	; 0x01
    2328:	80 83       	st	Z, r24
    232a:	fe 01       	movw	r30, r28
    232c:	e3 5f       	subi	r30, 0xF3	; 243
    232e:	fe 4f       	sbci	r31, 0xFE	; 254
    2330:	80 81       	ld	r24, Z
    2332:	91 81       	ldd	r25, Z+1	; 0x01
    2334:	01 97       	sbiw	r24, 0x01	; 1
    2336:	f1 f7       	brne	.-4      	; 0x2334 <main+0x82a>
    2338:	fe 01       	movw	r30, r28
    233a:	e3 5f       	subi	r30, 0xF3	; 243
    233c:	fe 4f       	sbci	r31, 0xFE	; 254
    233e:	91 83       	std	Z+1, r25	; 0x01
    2340:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2342:	de 01       	movw	r26, r28
    2344:	a1 5f       	subi	r26, 0xF1	; 241
    2346:	be 4f       	sbci	r27, 0xFE	; 254
    2348:	fe 01       	movw	r30, r28
    234a:	e1 5f       	subi	r30, 0xF1	; 241
    234c:	fe 4f       	sbci	r31, 0xFE	; 254
    234e:	80 81       	ld	r24, Z
    2350:	91 81       	ldd	r25, Z+1	; 0x01
    2352:	01 97       	sbiw	r24, 0x01	; 1
    2354:	11 96       	adiw	r26, 0x01	; 1
    2356:	9c 93       	st	X, r25
    2358:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    235a:	fe 01       	movw	r30, r28
    235c:	e1 5f       	subi	r30, 0xF1	; 241
    235e:	fe 4f       	sbci	r31, 0xFE	; 254
    2360:	80 81       	ld	r24, Z
    2362:	91 81       	ldd	r25, Z+1	; 0x01
    2364:	00 97       	sbiw	r24, 0x00	; 0
    2366:	d1 f6       	brne	.-76     	; 0x231c <main+0x812>
    2368:	28 c0       	rjmp	.+80     	; 0x23ba <main+0x8b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    236a:	8e 01       	movw	r16, r28
    236c:	01 5f       	subi	r16, 0xF1	; 241
    236e:	1e 4f       	sbci	r17, 0xFE	; 254
    2370:	fe 01       	movw	r30, r28
    2372:	ef 5e       	subi	r30, 0xEF	; 239
    2374:	fe 4f       	sbci	r31, 0xFE	; 254
    2376:	60 81       	ld	r22, Z
    2378:	71 81       	ldd	r23, Z+1	; 0x01
    237a:	82 81       	ldd	r24, Z+2	; 0x02
    237c:	93 81       	ldd	r25, Z+3	; 0x03
    237e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2382:	dc 01       	movw	r26, r24
    2384:	cb 01       	movw	r24, r22
    2386:	f8 01       	movw	r30, r16
    2388:	91 83       	std	Z+1, r25	; 0x01
    238a:	80 83       	st	Z, r24
    238c:	de 01       	movw	r26, r28
    238e:	a5 5f       	subi	r26, 0xF5	; 245
    2390:	be 4f       	sbci	r27, 0xFE	; 254
    2392:	fe 01       	movw	r30, r28
    2394:	e1 5f       	subi	r30, 0xF1	; 241
    2396:	fe 4f       	sbci	r31, 0xFE	; 254
    2398:	80 81       	ld	r24, Z
    239a:	91 81       	ldd	r25, Z+1	; 0x01
    239c:	11 96       	adiw	r26, 0x01	; 1
    239e:	9c 93       	st	X, r25
    23a0:	8e 93       	st	-X, r24
    23a2:	fe 01       	movw	r30, r28
    23a4:	e5 5f       	subi	r30, 0xF5	; 245
    23a6:	fe 4f       	sbci	r31, 0xFE	; 254
    23a8:	80 81       	ld	r24, Z
    23aa:	91 81       	ldd	r25, Z+1	; 0x01
    23ac:	01 97       	sbiw	r24, 0x01	; 1
    23ae:	f1 f7       	brne	.-4      	; 0x23ac <main+0x8a2>
    23b0:	fe 01       	movw	r30, r28
    23b2:	e5 5f       	subi	r30, 0xF5	; 245
    23b4:	fe 4f       	sbci	r31, 0xFE	; 254
    23b6:	91 83       	std	Z+1, r25	; 0x01
    23b8:	80 83       	st	Z, r24
		_delay_ms(2000);
		if(Local_u16FlexInput[ADC_u8_SINGLE_ENDED_CH4]>0)
    23ba:	fe 01       	movw	r30, r28
    23bc:	e6 50       	subi	r30, 0x06	; 6
    23be:	fe 4f       	sbci	r31, 0xFE	; 254
    23c0:	80 85       	ldd	r24, Z+8	; 0x08
    23c2:	91 85       	ldd	r25, Z+9	; 0x09
    23c4:	00 97       	sbiw	r24, 0x00	; 0
    23c6:	09 f4       	brne	.+2      	; 0x23ca <main+0x8c0>
    23c8:	f6 ce       	rjmp	.-532    	; 0x21b6 <main+0x6ac>
		{
			LCD_voidGoToXY(0,0);
    23ca:	80 e0       	ldi	r24, 0x00	; 0
    23cc:	60 e0       	ldi	r22, 0x00	; 0
    23ce:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_u8SendString("Make your word");
    23d2:	80 e6       	ldi	r24, 0x60	; 96
    23d4:	90 e0       	ldi	r25, 0x00	; 0
    23d6:	0e 94 1e 0c 	call	0x183c	; 0x183c <LCD_u8SendString>
    23da:	fe 01       	movw	r30, r28
    23dc:	e9 5f       	subi	r30, 0xF9	; 249
    23de:	fe 4f       	sbci	r31, 0xFE	; 254
    23e0:	80 e0       	ldi	r24, 0x00	; 0
    23e2:	90 e0       	ldi	r25, 0x00	; 0
    23e4:	aa ef       	ldi	r26, 0xFA	; 250
    23e6:	b4 e4       	ldi	r27, 0x44	; 68
    23e8:	80 83       	st	Z, r24
    23ea:	91 83       	std	Z+1, r25	; 0x01
    23ec:	a2 83       	std	Z+2, r26	; 0x02
    23ee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23f0:	8e 01       	movw	r16, r28
    23f2:	0d 5f       	subi	r16, 0xFD	; 253
    23f4:	1e 4f       	sbci	r17, 0xFE	; 254
    23f6:	fe 01       	movw	r30, r28
    23f8:	e9 5f       	subi	r30, 0xF9	; 249
    23fa:	fe 4f       	sbci	r31, 0xFE	; 254
    23fc:	60 81       	ld	r22, Z
    23fe:	71 81       	ldd	r23, Z+1	; 0x01
    2400:	82 81       	ldd	r24, Z+2	; 0x02
    2402:	93 81       	ldd	r25, Z+3	; 0x03
    2404:	20 e0       	ldi	r18, 0x00	; 0
    2406:	30 e0       	ldi	r19, 0x00	; 0
    2408:	4a e7       	ldi	r20, 0x7A	; 122
    240a:	55 e4       	ldi	r21, 0x45	; 69
    240c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2410:	dc 01       	movw	r26, r24
    2412:	cb 01       	movw	r24, r22
    2414:	f8 01       	movw	r30, r16
    2416:	80 83       	st	Z, r24
    2418:	91 83       	std	Z+1, r25	; 0x01
    241a:	a2 83       	std	Z+2, r26	; 0x02
    241c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    241e:	fe 01       	movw	r30, r28
    2420:	ed 5f       	subi	r30, 0xFD	; 253
    2422:	fe 4f       	sbci	r31, 0xFE	; 254
    2424:	60 81       	ld	r22, Z
    2426:	71 81       	ldd	r23, Z+1	; 0x01
    2428:	82 81       	ldd	r24, Z+2	; 0x02
    242a:	93 81       	ldd	r25, Z+3	; 0x03
    242c:	20 e0       	ldi	r18, 0x00	; 0
    242e:	30 e0       	ldi	r19, 0x00	; 0
    2430:	40 e8       	ldi	r20, 0x80	; 128
    2432:	5f e3       	ldi	r21, 0x3F	; 63
    2434:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2438:	88 23       	and	r24, r24
    243a:	44 f4       	brge	.+16     	; 0x244c <main+0x942>
		__ticks = 1;
    243c:	fe 01       	movw	r30, r28
    243e:	ef 5f       	subi	r30, 0xFF	; 255
    2440:	fe 4f       	sbci	r31, 0xFE	; 254
    2442:	81 e0       	ldi	r24, 0x01	; 1
    2444:	90 e0       	ldi	r25, 0x00	; 0
    2446:	91 83       	std	Z+1, r25	; 0x01
    2448:	80 83       	st	Z, r24
    244a:	64 c0       	rjmp	.+200    	; 0x2514 <main+0xa0a>
	else if (__tmp > 65535)
    244c:	fe 01       	movw	r30, r28
    244e:	ed 5f       	subi	r30, 0xFD	; 253
    2450:	fe 4f       	sbci	r31, 0xFE	; 254
    2452:	60 81       	ld	r22, Z
    2454:	71 81       	ldd	r23, Z+1	; 0x01
    2456:	82 81       	ldd	r24, Z+2	; 0x02
    2458:	93 81       	ldd	r25, Z+3	; 0x03
    245a:	20 e0       	ldi	r18, 0x00	; 0
    245c:	3f ef       	ldi	r19, 0xFF	; 255
    245e:	4f e7       	ldi	r20, 0x7F	; 127
    2460:	57 e4       	ldi	r21, 0x47	; 71
    2462:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2466:	18 16       	cp	r1, r24
    2468:	0c f0       	brlt	.+2      	; 0x246c <main+0x962>
    246a:	43 c0       	rjmp	.+134    	; 0x24f2 <main+0x9e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    246c:	fe 01       	movw	r30, r28
    246e:	e9 5f       	subi	r30, 0xF9	; 249
    2470:	fe 4f       	sbci	r31, 0xFE	; 254
    2472:	60 81       	ld	r22, Z
    2474:	71 81       	ldd	r23, Z+1	; 0x01
    2476:	82 81       	ldd	r24, Z+2	; 0x02
    2478:	93 81       	ldd	r25, Z+3	; 0x03
    247a:	20 e0       	ldi	r18, 0x00	; 0
    247c:	30 e0       	ldi	r19, 0x00	; 0
    247e:	40 e2       	ldi	r20, 0x20	; 32
    2480:	51 e4       	ldi	r21, 0x41	; 65
    2482:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2486:	dc 01       	movw	r26, r24
    2488:	cb 01       	movw	r24, r22
    248a:	8e 01       	movw	r16, r28
    248c:	0f 5f       	subi	r16, 0xFF	; 255
    248e:	1e 4f       	sbci	r17, 0xFE	; 254
    2490:	bc 01       	movw	r22, r24
    2492:	cd 01       	movw	r24, r26
    2494:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2498:	dc 01       	movw	r26, r24
    249a:	cb 01       	movw	r24, r22
    249c:	f8 01       	movw	r30, r16
    249e:	91 83       	std	Z+1, r25	; 0x01
    24a0:	80 83       	st	Z, r24
    24a2:	1f c0       	rjmp	.+62     	; 0x24e2 <main+0x9d8>
    24a4:	fe 01       	movw	r30, r28
    24a6:	e1 50       	subi	r30, 0x01	; 1
    24a8:	ff 4f       	sbci	r31, 0xFF	; 255
    24aa:	80 e9       	ldi	r24, 0x90	; 144
    24ac:	91 e0       	ldi	r25, 0x01	; 1
    24ae:	91 83       	std	Z+1, r25	; 0x01
    24b0:	80 83       	st	Z, r24
    24b2:	fe 01       	movw	r30, r28
    24b4:	e1 50       	subi	r30, 0x01	; 1
    24b6:	ff 4f       	sbci	r31, 0xFF	; 255
    24b8:	80 81       	ld	r24, Z
    24ba:	91 81       	ldd	r25, Z+1	; 0x01
    24bc:	01 97       	sbiw	r24, 0x01	; 1
    24be:	f1 f7       	brne	.-4      	; 0x24bc <main+0x9b2>
    24c0:	fe 01       	movw	r30, r28
    24c2:	e1 50       	subi	r30, 0x01	; 1
    24c4:	ff 4f       	sbci	r31, 0xFF	; 255
    24c6:	91 83       	std	Z+1, r25	; 0x01
    24c8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24ca:	de 01       	movw	r26, r28
    24cc:	af 5f       	subi	r26, 0xFF	; 255
    24ce:	be 4f       	sbci	r27, 0xFE	; 254
    24d0:	fe 01       	movw	r30, r28
    24d2:	ef 5f       	subi	r30, 0xFF	; 255
    24d4:	fe 4f       	sbci	r31, 0xFE	; 254
    24d6:	80 81       	ld	r24, Z
    24d8:	91 81       	ldd	r25, Z+1	; 0x01
    24da:	01 97       	sbiw	r24, 0x01	; 1
    24dc:	11 96       	adiw	r26, 0x01	; 1
    24de:	9c 93       	st	X, r25
    24e0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24e2:	fe 01       	movw	r30, r28
    24e4:	ef 5f       	subi	r30, 0xFF	; 255
    24e6:	fe 4f       	sbci	r31, 0xFE	; 254
    24e8:	80 81       	ld	r24, Z
    24ea:	91 81       	ldd	r25, Z+1	; 0x01
    24ec:	00 97       	sbiw	r24, 0x00	; 0
    24ee:	d1 f6       	brne	.-76     	; 0x24a4 <main+0x99a>
    24f0:	27 c0       	rjmp	.+78     	; 0x2540 <main+0xa36>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24f2:	8e 01       	movw	r16, r28
    24f4:	0f 5f       	subi	r16, 0xFF	; 255
    24f6:	1e 4f       	sbci	r17, 0xFE	; 254
    24f8:	fe 01       	movw	r30, r28
    24fa:	ed 5f       	subi	r30, 0xFD	; 253
    24fc:	fe 4f       	sbci	r31, 0xFE	; 254
    24fe:	60 81       	ld	r22, Z
    2500:	71 81       	ldd	r23, Z+1	; 0x01
    2502:	82 81       	ldd	r24, Z+2	; 0x02
    2504:	93 81       	ldd	r25, Z+3	; 0x03
    2506:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    250a:	dc 01       	movw	r26, r24
    250c:	cb 01       	movw	r24, r22
    250e:	f8 01       	movw	r30, r16
    2510:	91 83       	std	Z+1, r25	; 0x01
    2512:	80 83       	st	Z, r24
    2514:	de 01       	movw	r26, r28
    2516:	a3 50       	subi	r26, 0x03	; 3
    2518:	bf 4f       	sbci	r27, 0xFF	; 255
    251a:	fe 01       	movw	r30, r28
    251c:	ef 5f       	subi	r30, 0xFF	; 255
    251e:	fe 4f       	sbci	r31, 0xFE	; 254
    2520:	80 81       	ld	r24, Z
    2522:	91 81       	ldd	r25, Z+1	; 0x01
    2524:	8d 93       	st	X+, r24
    2526:	9c 93       	st	X, r25
    2528:	fe 01       	movw	r30, r28
    252a:	e3 50       	subi	r30, 0x03	; 3
    252c:	ff 4f       	sbci	r31, 0xFF	; 255
    252e:	80 81       	ld	r24, Z
    2530:	91 81       	ldd	r25, Z+1	; 0x01
    2532:	01 97       	sbiw	r24, 0x01	; 1
    2534:	f1 f7       	brne	.-4      	; 0x2532 <main+0xa28>
    2536:	fe 01       	movw	r30, r28
    2538:	e3 50       	subi	r30, 0x03	; 3
    253a:	ff 4f       	sbci	r31, 0xFF	; 255
    253c:	91 83       	std	Z+1, r25	; 0x01
    253e:	80 83       	st	Z, r24
			_delay_ms(2000);
			Word=0b00000000;
    2540:	fe 01       	movw	r30, r28
    2542:	e7 5e       	subi	r30, 0xE7	; 231
    2544:	fe 4f       	sbci	r31, 0xFE	; 254
    2546:	10 82       	st	Z, r1
			LCD_VoidSendCommand(1);
    2548:	81 e0       	ldi	r24, 0x01	; 1
    254a:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
			for(Iterator=0;Iterator<4;Iterator++)
    254e:	fe 01       	movw	r30, r28
    2550:	e6 5e       	subi	r30, 0xE6	; 230
    2552:	fe 4f       	sbci	r31, 0xFE	; 254
    2554:	10 82       	st	Z, r1
    2556:	90 c1       	rjmp	.+800    	; 0x2878 <main+0xd6e>
			{
				ADC_u8_StartConvSynch(Local_u8ADCChannel[Iterator],&Local_u16FlexInput[Iterator]);
    2558:	fe 01       	movw	r30, r28
    255a:	e6 5e       	subi	r30, 0xE6	; 230
    255c:	fe 4f       	sbci	r31, 0xFE	; 254
    255e:	80 81       	ld	r24, Z
    2560:	28 2f       	mov	r18, r24
    2562:	30 e0       	ldi	r19, 0x00	; 0
    2564:	ce 01       	movw	r24, r28
    2566:	8b 5d       	subi	r24, 0xDB	; 219
    2568:	9e 4f       	sbci	r25, 0xFE	; 254
    256a:	fc 01       	movw	r30, r24
    256c:	e2 0f       	add	r30, r18
    256e:	f3 1f       	adc	r31, r19
    2570:	40 81       	ld	r20, Z
    2572:	fe 01       	movw	r30, r28
    2574:	e6 5e       	subi	r30, 0xE6	; 230
    2576:	fe 4f       	sbci	r31, 0xFE	; 254
    2578:	80 81       	ld	r24, Z
    257a:	88 2f       	mov	r24, r24
    257c:	90 e0       	ldi	r25, 0x00	; 0
    257e:	88 0f       	add	r24, r24
    2580:	99 1f       	adc	r25, r25
    2582:	9e 01       	movw	r18, r28
    2584:	26 50       	subi	r18, 0x06	; 6
    2586:	3e 4f       	sbci	r19, 0xFE	; 254
    2588:	28 0f       	add	r18, r24
    258a:	39 1f       	adc	r19, r25
    258c:	84 2f       	mov	r24, r20
    258e:	b9 01       	movw	r22, r18
    2590:	0e 94 48 07 	call	0xe90	; 0xe90 <ADC_u8_StartConvSynch>
				Local_u16FlexInput[Iterator]=((float)Local_u16FlexInput[Iterator]/20.0);
    2594:	fe 01       	movw	r30, r28
    2596:	e6 5e       	subi	r30, 0xE6	; 230
    2598:	fe 4f       	sbci	r31, 0xFE	; 254
    259a:	80 81       	ld	r24, Z
    259c:	08 2f       	mov	r16, r24
    259e:	10 e0       	ldi	r17, 0x00	; 0
    25a0:	fe 01       	movw	r30, r28
    25a2:	e6 5e       	subi	r30, 0xE6	; 230
    25a4:	fe 4f       	sbci	r31, 0xFE	; 254
    25a6:	80 81       	ld	r24, Z
    25a8:	88 2f       	mov	r24, r24
    25aa:	90 e0       	ldi	r25, 0x00	; 0
    25ac:	9e 01       	movw	r18, r28
    25ae:	26 50       	subi	r18, 0x06	; 6
    25b0:	3e 4f       	sbci	r19, 0xFE	; 254
    25b2:	88 0f       	add	r24, r24
    25b4:	99 1f       	adc	r25, r25
    25b6:	f9 01       	movw	r30, r18
    25b8:	e8 0f       	add	r30, r24
    25ba:	f9 1f       	adc	r31, r25
    25bc:	80 81       	ld	r24, Z
    25be:	91 81       	ldd	r25, Z+1	; 0x01
    25c0:	cc 01       	movw	r24, r24
    25c2:	a0 e0       	ldi	r26, 0x00	; 0
    25c4:	b0 e0       	ldi	r27, 0x00	; 0
    25c6:	bc 01       	movw	r22, r24
    25c8:	cd 01       	movw	r24, r26
    25ca:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
    25ce:	dc 01       	movw	r26, r24
    25d0:	cb 01       	movw	r24, r22
    25d2:	bc 01       	movw	r22, r24
    25d4:	cd 01       	movw	r24, r26
    25d6:	20 e0       	ldi	r18, 0x00	; 0
    25d8:	30 e0       	ldi	r19, 0x00	; 0
    25da:	40 ea       	ldi	r20, 0xA0	; 160
    25dc:	51 e4       	ldi	r21, 0x41	; 65
    25de:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    25e2:	dc 01       	movw	r26, r24
    25e4:	cb 01       	movw	r24, r22
    25e6:	bc 01       	movw	r22, r24
    25e8:	cd 01       	movw	r24, r26
    25ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    25ee:	dc 01       	movw	r26, r24
    25f0:	cb 01       	movw	r24, r22
    25f2:	ac 01       	movw	r20, r24
    25f4:	9e 01       	movw	r18, r28
    25f6:	26 50       	subi	r18, 0x06	; 6
    25f8:	3e 4f       	sbci	r19, 0xFE	; 254
    25fa:	c8 01       	movw	r24, r16
    25fc:	88 0f       	add	r24, r24
    25fe:	99 1f       	adc	r25, r25
    2600:	f9 01       	movw	r30, r18
    2602:	e8 0f       	add	r30, r24
    2604:	f9 1f       	adc	r31, r25
    2606:	51 83       	std	Z+1, r21	; 0x01
    2608:	40 83       	st	Z, r20
				LCD_voidSendNumber(Local_u16FlexInput[Iterator]);
    260a:	fe 01       	movw	r30, r28
    260c:	e6 5e       	subi	r30, 0xE6	; 230
    260e:	fe 4f       	sbci	r31, 0xFE	; 254
    2610:	80 81       	ld	r24, Z
    2612:	88 2f       	mov	r24, r24
    2614:	90 e0       	ldi	r25, 0x00	; 0
    2616:	9e 01       	movw	r18, r28
    2618:	26 50       	subi	r18, 0x06	; 6
    261a:	3e 4f       	sbci	r19, 0xFE	; 254
    261c:	88 0f       	add	r24, r24
    261e:	99 1f       	adc	r25, r25
    2620:	f9 01       	movw	r30, r18
    2622:	e8 0f       	add	r30, r24
    2624:	f9 1f       	adc	r31, r25
    2626:	80 81       	ld	r24, Z
    2628:	91 81       	ldd	r25, Z+1	; 0x01
    262a:	cc 01       	movw	r24, r24
    262c:	a0 e0       	ldi	r26, 0x00	; 0
    262e:	b0 e0       	ldi	r27, 0x00	; 0
    2630:	bc 01       	movw	r22, r24
    2632:	cd 01       	movw	r24, r26
    2634:	0e 94 c7 0c 	call	0x198e	; 0x198e <LCD_voidSendNumber>
    2638:	fe 01       	movw	r30, r28
    263a:	e7 50       	subi	r30, 0x07	; 7
    263c:	ff 4f       	sbci	r31, 0xFF	; 255
    263e:	80 e0       	ldi	r24, 0x00	; 0
    2640:	90 e0       	ldi	r25, 0x00	; 0
    2642:	aa e7       	ldi	r26, 0x7A	; 122
    2644:	b4 e4       	ldi	r27, 0x44	; 68
    2646:	80 83       	st	Z, r24
    2648:	91 83       	std	Z+1, r25	; 0x01
    264a:	a2 83       	std	Z+2, r26	; 0x02
    264c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    264e:	8e 01       	movw	r16, r28
    2650:	0b 50       	subi	r16, 0x0B	; 11
    2652:	1f 4f       	sbci	r17, 0xFF	; 255
    2654:	fe 01       	movw	r30, r28
    2656:	e7 50       	subi	r30, 0x07	; 7
    2658:	ff 4f       	sbci	r31, 0xFF	; 255
    265a:	60 81       	ld	r22, Z
    265c:	71 81       	ldd	r23, Z+1	; 0x01
    265e:	82 81       	ldd	r24, Z+2	; 0x02
    2660:	93 81       	ldd	r25, Z+3	; 0x03
    2662:	20 e0       	ldi	r18, 0x00	; 0
    2664:	30 e0       	ldi	r19, 0x00	; 0
    2666:	4a e7       	ldi	r20, 0x7A	; 122
    2668:	55 e4       	ldi	r21, 0x45	; 69
    266a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    266e:	dc 01       	movw	r26, r24
    2670:	cb 01       	movw	r24, r22
    2672:	f8 01       	movw	r30, r16
    2674:	80 83       	st	Z, r24
    2676:	91 83       	std	Z+1, r25	; 0x01
    2678:	a2 83       	std	Z+2, r26	; 0x02
    267a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    267c:	fe 01       	movw	r30, r28
    267e:	eb 50       	subi	r30, 0x0B	; 11
    2680:	ff 4f       	sbci	r31, 0xFF	; 255
    2682:	60 81       	ld	r22, Z
    2684:	71 81       	ldd	r23, Z+1	; 0x01
    2686:	82 81       	ldd	r24, Z+2	; 0x02
    2688:	93 81       	ldd	r25, Z+3	; 0x03
    268a:	20 e0       	ldi	r18, 0x00	; 0
    268c:	30 e0       	ldi	r19, 0x00	; 0
    268e:	40 e8       	ldi	r20, 0x80	; 128
    2690:	5f e3       	ldi	r21, 0x3F	; 63
    2692:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2696:	88 23       	and	r24, r24
    2698:	44 f4       	brge	.+16     	; 0x26aa <main+0xba0>
		__ticks = 1;
    269a:	fe 01       	movw	r30, r28
    269c:	ed 50       	subi	r30, 0x0D	; 13
    269e:	ff 4f       	sbci	r31, 0xFF	; 255
    26a0:	81 e0       	ldi	r24, 0x01	; 1
    26a2:	90 e0       	ldi	r25, 0x00	; 0
    26a4:	91 83       	std	Z+1, r25	; 0x01
    26a6:	80 83       	st	Z, r24
    26a8:	64 c0       	rjmp	.+200    	; 0x2772 <main+0xc68>
	else if (__tmp > 65535)
    26aa:	fe 01       	movw	r30, r28
    26ac:	eb 50       	subi	r30, 0x0B	; 11
    26ae:	ff 4f       	sbci	r31, 0xFF	; 255
    26b0:	60 81       	ld	r22, Z
    26b2:	71 81       	ldd	r23, Z+1	; 0x01
    26b4:	82 81       	ldd	r24, Z+2	; 0x02
    26b6:	93 81       	ldd	r25, Z+3	; 0x03
    26b8:	20 e0       	ldi	r18, 0x00	; 0
    26ba:	3f ef       	ldi	r19, 0xFF	; 255
    26bc:	4f e7       	ldi	r20, 0x7F	; 127
    26be:	57 e4       	ldi	r21, 0x47	; 71
    26c0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    26c4:	18 16       	cp	r1, r24
    26c6:	0c f0       	brlt	.+2      	; 0x26ca <main+0xbc0>
    26c8:	43 c0       	rjmp	.+134    	; 0x2750 <main+0xc46>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26ca:	fe 01       	movw	r30, r28
    26cc:	e7 50       	subi	r30, 0x07	; 7
    26ce:	ff 4f       	sbci	r31, 0xFF	; 255
    26d0:	60 81       	ld	r22, Z
    26d2:	71 81       	ldd	r23, Z+1	; 0x01
    26d4:	82 81       	ldd	r24, Z+2	; 0x02
    26d6:	93 81       	ldd	r25, Z+3	; 0x03
    26d8:	20 e0       	ldi	r18, 0x00	; 0
    26da:	30 e0       	ldi	r19, 0x00	; 0
    26dc:	40 e2       	ldi	r20, 0x20	; 32
    26de:	51 e4       	ldi	r21, 0x41	; 65
    26e0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    26e4:	dc 01       	movw	r26, r24
    26e6:	cb 01       	movw	r24, r22
    26e8:	8e 01       	movw	r16, r28
    26ea:	0d 50       	subi	r16, 0x0D	; 13
    26ec:	1f 4f       	sbci	r17, 0xFF	; 255
    26ee:	bc 01       	movw	r22, r24
    26f0:	cd 01       	movw	r24, r26
    26f2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26f6:	dc 01       	movw	r26, r24
    26f8:	cb 01       	movw	r24, r22
    26fa:	f8 01       	movw	r30, r16
    26fc:	91 83       	std	Z+1, r25	; 0x01
    26fe:	80 83       	st	Z, r24
    2700:	1f c0       	rjmp	.+62     	; 0x2740 <main+0xc36>
    2702:	fe 01       	movw	r30, r28
    2704:	ef 50       	subi	r30, 0x0F	; 15
    2706:	ff 4f       	sbci	r31, 0xFF	; 255
    2708:	80 e9       	ldi	r24, 0x90	; 144
    270a:	91 e0       	ldi	r25, 0x01	; 1
    270c:	91 83       	std	Z+1, r25	; 0x01
    270e:	80 83       	st	Z, r24
    2710:	fe 01       	movw	r30, r28
    2712:	ef 50       	subi	r30, 0x0F	; 15
    2714:	ff 4f       	sbci	r31, 0xFF	; 255
    2716:	80 81       	ld	r24, Z
    2718:	91 81       	ldd	r25, Z+1	; 0x01
    271a:	01 97       	sbiw	r24, 0x01	; 1
    271c:	f1 f7       	brne	.-4      	; 0x271a <main+0xc10>
    271e:	fe 01       	movw	r30, r28
    2720:	ef 50       	subi	r30, 0x0F	; 15
    2722:	ff 4f       	sbci	r31, 0xFF	; 255
    2724:	91 83       	std	Z+1, r25	; 0x01
    2726:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2728:	de 01       	movw	r26, r28
    272a:	ad 50       	subi	r26, 0x0D	; 13
    272c:	bf 4f       	sbci	r27, 0xFF	; 255
    272e:	fe 01       	movw	r30, r28
    2730:	ed 50       	subi	r30, 0x0D	; 13
    2732:	ff 4f       	sbci	r31, 0xFF	; 255
    2734:	80 81       	ld	r24, Z
    2736:	91 81       	ldd	r25, Z+1	; 0x01
    2738:	01 97       	sbiw	r24, 0x01	; 1
    273a:	11 96       	adiw	r26, 0x01	; 1
    273c:	9c 93       	st	X, r25
    273e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2740:	fe 01       	movw	r30, r28
    2742:	ed 50       	subi	r30, 0x0D	; 13
    2744:	ff 4f       	sbci	r31, 0xFF	; 255
    2746:	80 81       	ld	r24, Z
    2748:	91 81       	ldd	r25, Z+1	; 0x01
    274a:	00 97       	sbiw	r24, 0x00	; 0
    274c:	d1 f6       	brne	.-76     	; 0x2702 <main+0xbf8>
    274e:	28 c0       	rjmp	.+80     	; 0x27a0 <main+0xc96>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2750:	8e 01       	movw	r16, r28
    2752:	0d 50       	subi	r16, 0x0D	; 13
    2754:	1f 4f       	sbci	r17, 0xFF	; 255
    2756:	fe 01       	movw	r30, r28
    2758:	eb 50       	subi	r30, 0x0B	; 11
    275a:	ff 4f       	sbci	r31, 0xFF	; 255
    275c:	60 81       	ld	r22, Z
    275e:	71 81       	ldd	r23, Z+1	; 0x01
    2760:	82 81       	ldd	r24, Z+2	; 0x02
    2762:	93 81       	ldd	r25, Z+3	; 0x03
    2764:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2768:	dc 01       	movw	r26, r24
    276a:	cb 01       	movw	r24, r22
    276c:	f8 01       	movw	r30, r16
    276e:	91 83       	std	Z+1, r25	; 0x01
    2770:	80 83       	st	Z, r24
    2772:	de 01       	movw	r26, r28
    2774:	a1 51       	subi	r26, 0x11	; 17
    2776:	bf 4f       	sbci	r27, 0xFF	; 255
    2778:	fe 01       	movw	r30, r28
    277a:	ed 50       	subi	r30, 0x0D	; 13
    277c:	ff 4f       	sbci	r31, 0xFF	; 255
    277e:	80 81       	ld	r24, Z
    2780:	91 81       	ldd	r25, Z+1	; 0x01
    2782:	11 96       	adiw	r26, 0x01	; 1
    2784:	9c 93       	st	X, r25
    2786:	8e 93       	st	-X, r24
    2788:	fe 01       	movw	r30, r28
    278a:	e1 51       	subi	r30, 0x11	; 17
    278c:	ff 4f       	sbci	r31, 0xFF	; 255
    278e:	80 81       	ld	r24, Z
    2790:	91 81       	ldd	r25, Z+1	; 0x01
    2792:	01 97       	sbiw	r24, 0x01	; 1
    2794:	f1 f7       	brne	.-4      	; 0x2792 <main+0xc88>
    2796:	fe 01       	movw	r30, r28
    2798:	e1 51       	subi	r30, 0x11	; 17
    279a:	ff 4f       	sbci	r31, 0xFF	; 255
    279c:	91 83       	std	Z+1, r25	; 0x01
    279e:	80 83       	st	Z, r24
				_delay_ms(1000);
				if(Iterator==0 || Iterator==2)
    27a0:	fe 01       	movw	r30, r28
    27a2:	e6 5e       	subi	r30, 0xE6	; 230
    27a4:	fe 4f       	sbci	r31, 0xFE	; 254
    27a6:	80 81       	ld	r24, Z
    27a8:	88 23       	and	r24, r24
    27aa:	31 f0       	breq	.+12     	; 0x27b8 <main+0xcae>
    27ac:	fe 01       	movw	r30, r28
    27ae:	e6 5e       	subi	r30, 0xE6	; 230
    27b0:	fe 4f       	sbci	r31, 0xFE	; 254
    27b2:	80 81       	ld	r24, Z
    27b4:	82 30       	cpi	r24, 0x02	; 2
    27b6:	69 f5       	brne	.+90     	; 0x2812 <main+0xd08>
				{
					if(Local_u16FlexInput[Iterator]>1)
    27b8:	fe 01       	movw	r30, r28
    27ba:	e6 5e       	subi	r30, 0xE6	; 230
    27bc:	fe 4f       	sbci	r31, 0xFE	; 254
    27be:	80 81       	ld	r24, Z
    27c0:	88 2f       	mov	r24, r24
    27c2:	90 e0       	ldi	r25, 0x00	; 0
    27c4:	9e 01       	movw	r18, r28
    27c6:	26 50       	subi	r18, 0x06	; 6
    27c8:	3e 4f       	sbci	r19, 0xFE	; 254
    27ca:	88 0f       	add	r24, r24
    27cc:	99 1f       	adc	r25, r25
    27ce:	f9 01       	movw	r30, r18
    27d0:	e8 0f       	add	r30, r24
    27d2:	f9 1f       	adc	r31, r25
    27d4:	80 81       	ld	r24, Z
    27d6:	91 81       	ldd	r25, Z+1	; 0x01
    27d8:	82 30       	cpi	r24, 0x02	; 2
    27da:	91 05       	cpc	r25, r1
    27dc:	08 f4       	brcc	.+2      	; 0x27e0 <main+0xcd6>
    27de:	43 c0       	rjmp	.+134    	; 0x2866 <main+0xd5c>
					{
						Word |= 1<<Iterator;
    27e0:	fe 01       	movw	r30, r28
    27e2:	e6 5e       	subi	r30, 0xE6	; 230
    27e4:	fe 4f       	sbci	r31, 0xFE	; 254
    27e6:	80 81       	ld	r24, Z
    27e8:	28 2f       	mov	r18, r24
    27ea:	30 e0       	ldi	r19, 0x00	; 0
    27ec:	81 e0       	ldi	r24, 0x01	; 1
    27ee:	90 e0       	ldi	r25, 0x00	; 0
    27f0:	02 2e       	mov	r0, r18
    27f2:	02 c0       	rjmp	.+4      	; 0x27f8 <main+0xcee>
    27f4:	88 0f       	add	r24, r24
    27f6:	99 1f       	adc	r25, r25
    27f8:	0a 94       	dec	r0
    27fa:	e2 f7       	brpl	.-8      	; 0x27f4 <main+0xcea>
    27fc:	98 2f       	mov	r25, r24
    27fe:	fe 01       	movw	r30, r28
    2800:	e7 5e       	subi	r30, 0xE7	; 231
    2802:	fe 4f       	sbci	r31, 0xFE	; 254
    2804:	80 81       	ld	r24, Z
    2806:	89 2b       	or	r24, r25
    2808:	fe 01       	movw	r30, r28
    280a:	e7 5e       	subi	r30, 0xE7	; 231
    280c:	fe 4f       	sbci	r31, 0xFE	; 254
    280e:	80 83       	st	Z, r24
    2810:	2a c0       	rjmp	.+84     	; 0x2866 <main+0xd5c>
					}
				}
				else
				{
					if(Local_u16FlexInput[Iterator]>0)
    2812:	fe 01       	movw	r30, r28
    2814:	e6 5e       	subi	r30, 0xE6	; 230
    2816:	fe 4f       	sbci	r31, 0xFE	; 254
    2818:	80 81       	ld	r24, Z
    281a:	88 2f       	mov	r24, r24
    281c:	90 e0       	ldi	r25, 0x00	; 0
    281e:	9e 01       	movw	r18, r28
    2820:	26 50       	subi	r18, 0x06	; 6
    2822:	3e 4f       	sbci	r19, 0xFE	; 254
    2824:	88 0f       	add	r24, r24
    2826:	99 1f       	adc	r25, r25
    2828:	f9 01       	movw	r30, r18
    282a:	e8 0f       	add	r30, r24
    282c:	f9 1f       	adc	r31, r25
    282e:	80 81       	ld	r24, Z
    2830:	91 81       	ldd	r25, Z+1	; 0x01
    2832:	00 97       	sbiw	r24, 0x00	; 0
    2834:	c1 f0       	breq	.+48     	; 0x2866 <main+0xd5c>
					{
						Word |= 1<<Iterator;
    2836:	fe 01       	movw	r30, r28
    2838:	e6 5e       	subi	r30, 0xE6	; 230
    283a:	fe 4f       	sbci	r31, 0xFE	; 254
    283c:	80 81       	ld	r24, Z
    283e:	28 2f       	mov	r18, r24
    2840:	30 e0       	ldi	r19, 0x00	; 0
    2842:	81 e0       	ldi	r24, 0x01	; 1
    2844:	90 e0       	ldi	r25, 0x00	; 0
    2846:	02 2e       	mov	r0, r18
    2848:	02 c0       	rjmp	.+4      	; 0x284e <main+0xd44>
    284a:	88 0f       	add	r24, r24
    284c:	99 1f       	adc	r25, r25
    284e:	0a 94       	dec	r0
    2850:	e2 f7       	brpl	.-8      	; 0x284a <main+0xd40>
    2852:	98 2f       	mov	r25, r24
    2854:	fe 01       	movw	r30, r28
    2856:	e7 5e       	subi	r30, 0xE7	; 231
    2858:	fe 4f       	sbci	r31, 0xFE	; 254
    285a:	80 81       	ld	r24, Z
    285c:	89 2b       	or	r24, r25
    285e:	fe 01       	movw	r30, r28
    2860:	e7 5e       	subi	r30, 0xE7	; 231
    2862:	fe 4f       	sbci	r31, 0xFE	; 254
    2864:	80 83       	st	Z, r24
			LCD_voidGoToXY(0,0);
			LCD_u8SendString("Make your word");
			_delay_ms(2000);
			Word=0b00000000;
			LCD_VoidSendCommand(1);
			for(Iterator=0;Iterator<4;Iterator++)
    2866:	de 01       	movw	r26, r28
    2868:	a6 5e       	subi	r26, 0xE6	; 230
    286a:	be 4f       	sbci	r27, 0xFE	; 254
    286c:	fe 01       	movw	r30, r28
    286e:	e6 5e       	subi	r30, 0xE6	; 230
    2870:	fe 4f       	sbci	r31, 0xFE	; 254
    2872:	80 81       	ld	r24, Z
    2874:	8f 5f       	subi	r24, 0xFF	; 255
    2876:	8c 93       	st	X, r24
    2878:	fe 01       	movw	r30, r28
    287a:	e6 5e       	subi	r30, 0xE6	; 230
    287c:	fe 4f       	sbci	r31, 0xFE	; 254
    287e:	80 81       	ld	r24, Z
    2880:	84 30       	cpi	r24, 0x04	; 4
    2882:	08 f4       	brcc	.+2      	; 0x2886 <main+0xd7c>
    2884:	69 ce       	rjmp	.-814    	; 0x2558 <main+0xa4e>
					{
						Word |= 1<<Iterator;
					}
				}
			}
			LCD_VoidSendCommand(1);
    2886:	81 e0       	ldi	r24, 0x01	; 1
    2888:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
			LCD_voidSendNumber(Word);
    288c:	fe 01       	movw	r30, r28
    288e:	e7 5e       	subi	r30, 0xE7	; 231
    2890:	fe 4f       	sbci	r31, 0xFE	; 254
    2892:	80 81       	ld	r24, Z
    2894:	88 2f       	mov	r24, r24
    2896:	90 e0       	ldi	r25, 0x00	; 0
    2898:	a0 e0       	ldi	r26, 0x00	; 0
    289a:	b0 e0       	ldi	r27, 0x00	; 0
    289c:	bc 01       	movw	r22, r24
    289e:	cd 01       	movw	r24, r26
    28a0:	0e 94 c7 0c 	call	0x198e	; 0x198e <LCD_voidSendNumber>
    28a4:	fe 01       	movw	r30, r28
    28a6:	e5 51       	subi	r30, 0x15	; 21
    28a8:	ff 4f       	sbci	r31, 0xFF	; 255
    28aa:	80 e0       	ldi	r24, 0x00	; 0
    28ac:	90 e0       	ldi	r25, 0x00	; 0
    28ae:	aa e7       	ldi	r26, 0x7A	; 122
    28b0:	b4 e4       	ldi	r27, 0x44	; 68
    28b2:	80 83       	st	Z, r24
    28b4:	91 83       	std	Z+1, r25	; 0x01
    28b6:	a2 83       	std	Z+2, r26	; 0x02
    28b8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28ba:	8e 01       	movw	r16, r28
    28bc:	09 51       	subi	r16, 0x19	; 25
    28be:	1f 4f       	sbci	r17, 0xFF	; 255
    28c0:	fe 01       	movw	r30, r28
    28c2:	e5 51       	subi	r30, 0x15	; 21
    28c4:	ff 4f       	sbci	r31, 0xFF	; 255
    28c6:	60 81       	ld	r22, Z
    28c8:	71 81       	ldd	r23, Z+1	; 0x01
    28ca:	82 81       	ldd	r24, Z+2	; 0x02
    28cc:	93 81       	ldd	r25, Z+3	; 0x03
    28ce:	20 e0       	ldi	r18, 0x00	; 0
    28d0:	30 e0       	ldi	r19, 0x00	; 0
    28d2:	4a e7       	ldi	r20, 0x7A	; 122
    28d4:	55 e4       	ldi	r21, 0x45	; 69
    28d6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    28da:	dc 01       	movw	r26, r24
    28dc:	cb 01       	movw	r24, r22
    28de:	f8 01       	movw	r30, r16
    28e0:	80 83       	st	Z, r24
    28e2:	91 83       	std	Z+1, r25	; 0x01
    28e4:	a2 83       	std	Z+2, r26	; 0x02
    28e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28e8:	fe 01       	movw	r30, r28
    28ea:	e9 51       	subi	r30, 0x19	; 25
    28ec:	ff 4f       	sbci	r31, 0xFF	; 255
    28ee:	60 81       	ld	r22, Z
    28f0:	71 81       	ldd	r23, Z+1	; 0x01
    28f2:	82 81       	ldd	r24, Z+2	; 0x02
    28f4:	93 81       	ldd	r25, Z+3	; 0x03
    28f6:	20 e0       	ldi	r18, 0x00	; 0
    28f8:	30 e0       	ldi	r19, 0x00	; 0
    28fa:	40 e8       	ldi	r20, 0x80	; 128
    28fc:	5f e3       	ldi	r21, 0x3F	; 63
    28fe:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2902:	88 23       	and	r24, r24
    2904:	44 f4       	brge	.+16     	; 0x2916 <main+0xe0c>
		__ticks = 1;
    2906:	fe 01       	movw	r30, r28
    2908:	eb 51       	subi	r30, 0x1B	; 27
    290a:	ff 4f       	sbci	r31, 0xFF	; 255
    290c:	81 e0       	ldi	r24, 0x01	; 1
    290e:	90 e0       	ldi	r25, 0x00	; 0
    2910:	91 83       	std	Z+1, r25	; 0x01
    2912:	80 83       	st	Z, r24
    2914:	64 c0       	rjmp	.+200    	; 0x29de <main+0xed4>
	else if (__tmp > 65535)
    2916:	fe 01       	movw	r30, r28
    2918:	e9 51       	subi	r30, 0x19	; 25
    291a:	ff 4f       	sbci	r31, 0xFF	; 255
    291c:	60 81       	ld	r22, Z
    291e:	71 81       	ldd	r23, Z+1	; 0x01
    2920:	82 81       	ldd	r24, Z+2	; 0x02
    2922:	93 81       	ldd	r25, Z+3	; 0x03
    2924:	20 e0       	ldi	r18, 0x00	; 0
    2926:	3f ef       	ldi	r19, 0xFF	; 255
    2928:	4f e7       	ldi	r20, 0x7F	; 127
    292a:	57 e4       	ldi	r21, 0x47	; 71
    292c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2930:	18 16       	cp	r1, r24
    2932:	0c f0       	brlt	.+2      	; 0x2936 <main+0xe2c>
    2934:	43 c0       	rjmp	.+134    	; 0x29bc <main+0xeb2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2936:	fe 01       	movw	r30, r28
    2938:	e5 51       	subi	r30, 0x15	; 21
    293a:	ff 4f       	sbci	r31, 0xFF	; 255
    293c:	60 81       	ld	r22, Z
    293e:	71 81       	ldd	r23, Z+1	; 0x01
    2940:	82 81       	ldd	r24, Z+2	; 0x02
    2942:	93 81       	ldd	r25, Z+3	; 0x03
    2944:	20 e0       	ldi	r18, 0x00	; 0
    2946:	30 e0       	ldi	r19, 0x00	; 0
    2948:	40 e2       	ldi	r20, 0x20	; 32
    294a:	51 e4       	ldi	r21, 0x41	; 65
    294c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2950:	dc 01       	movw	r26, r24
    2952:	cb 01       	movw	r24, r22
    2954:	8e 01       	movw	r16, r28
    2956:	0b 51       	subi	r16, 0x1B	; 27
    2958:	1f 4f       	sbci	r17, 0xFF	; 255
    295a:	bc 01       	movw	r22, r24
    295c:	cd 01       	movw	r24, r26
    295e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2962:	dc 01       	movw	r26, r24
    2964:	cb 01       	movw	r24, r22
    2966:	f8 01       	movw	r30, r16
    2968:	91 83       	std	Z+1, r25	; 0x01
    296a:	80 83       	st	Z, r24
    296c:	1f c0       	rjmp	.+62     	; 0x29ac <main+0xea2>
    296e:	fe 01       	movw	r30, r28
    2970:	ed 51       	subi	r30, 0x1D	; 29
    2972:	ff 4f       	sbci	r31, 0xFF	; 255
    2974:	80 e9       	ldi	r24, 0x90	; 144
    2976:	91 e0       	ldi	r25, 0x01	; 1
    2978:	91 83       	std	Z+1, r25	; 0x01
    297a:	80 83       	st	Z, r24
    297c:	fe 01       	movw	r30, r28
    297e:	ed 51       	subi	r30, 0x1D	; 29
    2980:	ff 4f       	sbci	r31, 0xFF	; 255
    2982:	80 81       	ld	r24, Z
    2984:	91 81       	ldd	r25, Z+1	; 0x01
    2986:	01 97       	sbiw	r24, 0x01	; 1
    2988:	f1 f7       	brne	.-4      	; 0x2986 <main+0xe7c>
    298a:	fe 01       	movw	r30, r28
    298c:	ed 51       	subi	r30, 0x1D	; 29
    298e:	ff 4f       	sbci	r31, 0xFF	; 255
    2990:	91 83       	std	Z+1, r25	; 0x01
    2992:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2994:	de 01       	movw	r26, r28
    2996:	ab 51       	subi	r26, 0x1B	; 27
    2998:	bf 4f       	sbci	r27, 0xFF	; 255
    299a:	fe 01       	movw	r30, r28
    299c:	eb 51       	subi	r30, 0x1B	; 27
    299e:	ff 4f       	sbci	r31, 0xFF	; 255
    29a0:	80 81       	ld	r24, Z
    29a2:	91 81       	ldd	r25, Z+1	; 0x01
    29a4:	01 97       	sbiw	r24, 0x01	; 1
    29a6:	11 96       	adiw	r26, 0x01	; 1
    29a8:	9c 93       	st	X, r25
    29aa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29ac:	fe 01       	movw	r30, r28
    29ae:	eb 51       	subi	r30, 0x1B	; 27
    29b0:	ff 4f       	sbci	r31, 0xFF	; 255
    29b2:	80 81       	ld	r24, Z
    29b4:	91 81       	ldd	r25, Z+1	; 0x01
    29b6:	00 97       	sbiw	r24, 0x00	; 0
    29b8:	d1 f6       	brne	.-76     	; 0x296e <main+0xe64>
    29ba:	28 c0       	rjmp	.+80     	; 0x2a0c <main+0xf02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29bc:	8e 01       	movw	r16, r28
    29be:	0b 51       	subi	r16, 0x1B	; 27
    29c0:	1f 4f       	sbci	r17, 0xFF	; 255
    29c2:	fe 01       	movw	r30, r28
    29c4:	e9 51       	subi	r30, 0x19	; 25
    29c6:	ff 4f       	sbci	r31, 0xFF	; 255
    29c8:	60 81       	ld	r22, Z
    29ca:	71 81       	ldd	r23, Z+1	; 0x01
    29cc:	82 81       	ldd	r24, Z+2	; 0x02
    29ce:	93 81       	ldd	r25, Z+3	; 0x03
    29d0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    29d4:	dc 01       	movw	r26, r24
    29d6:	cb 01       	movw	r24, r22
    29d8:	f8 01       	movw	r30, r16
    29da:	91 83       	std	Z+1, r25	; 0x01
    29dc:	80 83       	st	Z, r24
    29de:	de 01       	movw	r26, r28
    29e0:	af 51       	subi	r26, 0x1F	; 31
    29e2:	bf 4f       	sbci	r27, 0xFF	; 255
    29e4:	fe 01       	movw	r30, r28
    29e6:	eb 51       	subi	r30, 0x1B	; 27
    29e8:	ff 4f       	sbci	r31, 0xFF	; 255
    29ea:	80 81       	ld	r24, Z
    29ec:	91 81       	ldd	r25, Z+1	; 0x01
    29ee:	11 96       	adiw	r26, 0x01	; 1
    29f0:	9c 93       	st	X, r25
    29f2:	8e 93       	st	-X, r24
    29f4:	fe 01       	movw	r30, r28
    29f6:	ef 51       	subi	r30, 0x1F	; 31
    29f8:	ff 4f       	sbci	r31, 0xFF	; 255
    29fa:	80 81       	ld	r24, Z
    29fc:	91 81       	ldd	r25, Z+1	; 0x01
    29fe:	01 97       	sbiw	r24, 0x01	; 1
    2a00:	f1 f7       	brne	.-4      	; 0x29fe <main+0xef4>
    2a02:	fe 01       	movw	r30, r28
    2a04:	ef 51       	subi	r30, 0x1F	; 31
    2a06:	ff 4f       	sbci	r31, 0xFF	; 255
    2a08:	91 83       	std	Z+1, r25	; 0x01
    2a0a:	80 83       	st	Z, r24
			_delay_ms(1000);
			switch(Word)
    2a0c:	fe 01       	movw	r30, r28
    2a0e:	e7 5e       	subi	r30, 0xE7	; 231
    2a10:	fe 4f       	sbci	r31, 0xFE	; 254
    2a12:	80 81       	ld	r24, Z
    2a14:	28 2f       	mov	r18, r24
    2a16:	30 e0       	ldi	r19, 0x00	; 0
    2a18:	cc 5f       	subi	r28, 0xFC	; 252
    2a1a:	dd 4f       	sbci	r29, 0xFD	; 253
    2a1c:	39 83       	std	Y+1, r19	; 0x01
    2a1e:	28 83       	st	Y, r18
    2a20:	c4 50       	subi	r28, 0x04	; 4
    2a22:	d2 40       	sbci	r29, 0x02	; 2
    2a24:	cc 5f       	subi	r28, 0xFC	; 252
    2a26:	dd 4f       	sbci	r29, 0xFD	; 253
    2a28:	88 81       	ld	r24, Y
    2a2a:	99 81       	ldd	r25, Y+1	; 0x01
    2a2c:	c4 50       	subi	r28, 0x04	; 4
    2a2e:	d2 40       	sbci	r29, 0x02	; 2
    2a30:	88 30       	cpi	r24, 0x08	; 8
    2a32:	91 05       	cpc	r25, r1
    2a34:	09 f4       	brne	.+2      	; 0x2a38 <main+0xf2e>
    2a36:	13 c7       	rjmp	.+3622   	; 0x385e <main+0x1d54>
    2a38:	cc 5f       	subi	r28, 0xFC	; 252
    2a3a:	dd 4f       	sbci	r29, 0xFD	; 253
    2a3c:	a8 81       	ld	r26, Y
    2a3e:	b9 81       	ldd	r27, Y+1	; 0x01
    2a40:	c4 50       	subi	r28, 0x04	; 4
    2a42:	d2 40       	sbci	r29, 0x02	; 2
    2a44:	a9 30       	cpi	r26, 0x09	; 9
    2a46:	b1 05       	cpc	r27, r1
    2a48:	0c f0       	brlt	.+2      	; 0x2a4c <main+0xf42>
    2a4a:	48 c0       	rjmp	.+144    	; 0x2adc <main+0xfd2>
    2a4c:	cc 5f       	subi	r28, 0xFC	; 252
    2a4e:	dd 4f       	sbci	r29, 0xFD	; 253
    2a50:	e8 81       	ld	r30, Y
    2a52:	f9 81       	ldd	r31, Y+1	; 0x01
    2a54:	c4 50       	subi	r28, 0x04	; 4
    2a56:	d2 40       	sbci	r29, 0x02	; 2
    2a58:	e4 30       	cpi	r30, 0x04	; 4
    2a5a:	f1 05       	cpc	r31, r1
    2a5c:	09 f4       	brne	.+2      	; 0x2a60 <main+0xf56>
    2a5e:	43 c3       	rjmp	.+1670   	; 0x30e6 <main+0x15dc>
    2a60:	cc 5f       	subi	r28, 0xFC	; 252
    2a62:	dd 4f       	sbci	r29, 0xFD	; 253
    2a64:	28 81       	ld	r18, Y
    2a66:	39 81       	ldd	r19, Y+1	; 0x01
    2a68:	c4 50       	subi	r28, 0x04	; 4
    2a6a:	d2 40       	sbci	r29, 0x02	; 2
    2a6c:	25 30       	cpi	r18, 0x05	; 5
    2a6e:	31 05       	cpc	r19, r1
    2a70:	04 f5       	brge	.+64     	; 0x2ab2 <main+0xfa8>
    2a72:	cc 5f       	subi	r28, 0xFC	; 252
    2a74:	dd 4f       	sbci	r29, 0xFD	; 253
    2a76:	88 81       	ld	r24, Y
    2a78:	99 81       	ldd	r25, Y+1	; 0x01
    2a7a:	c4 50       	subi	r28, 0x04	; 4
    2a7c:	d2 40       	sbci	r29, 0x02	; 2
    2a7e:	82 30       	cpi	r24, 0x02	; 2
    2a80:	91 05       	cpc	r25, r1
    2a82:	09 f4       	brne	.+2      	; 0x2a86 <main+0xf7c>
    2a84:	4f c1       	rjmp	.+670    	; 0x2d24 <main+0x121a>
    2a86:	cc 5f       	subi	r28, 0xFC	; 252
    2a88:	dd 4f       	sbci	r29, 0xFD	; 253
    2a8a:	a8 81       	ld	r26, Y
    2a8c:	b9 81       	ldd	r27, Y+1	; 0x01
    2a8e:	c4 50       	subi	r28, 0x04	; 4
    2a90:	d2 40       	sbci	r29, 0x02	; 2
    2a92:	a3 30       	cpi	r26, 0x03	; 3
    2a94:	b1 05       	cpc	r27, r1
    2a96:	0c f0       	brlt	.+2      	; 0x2a9a <main+0xf90>
    2a98:	25 c2       	rjmp	.+1098   	; 0x2ee4 <main+0x13da>
    2a9a:	cc 5f       	subi	r28, 0xFC	; 252
    2a9c:	dd 4f       	sbci	r29, 0xFD	; 253
    2a9e:	e8 81       	ld	r30, Y
    2aa0:	f9 81       	ldd	r31, Y+1	; 0x01
    2aa2:	c4 50       	subi	r28, 0x04	; 4
    2aa4:	d2 40       	sbci	r29, 0x02	; 2
    2aa6:	e1 30       	cpi	r30, 0x01	; 1
    2aa8:	f1 05       	cpc	r31, r1
    2aaa:	09 f4       	brne	.+2      	; 0x2aae <main+0xfa4>
    2aac:	65 c0       	rjmp	.+202    	; 0x2b78 <main+0x106e>
    2aae:	0c 94 ac 22 	jmp	0x4558	; 0x4558 <main+0x2a4e>
    2ab2:	cc 5f       	subi	r28, 0xFC	; 252
    2ab4:	dd 4f       	sbci	r29, 0xFD	; 253
    2ab6:	28 81       	ld	r18, Y
    2ab8:	39 81       	ldd	r19, Y+1	; 0x01
    2aba:	c4 50       	subi	r28, 0x04	; 4
    2abc:	d2 40       	sbci	r29, 0x02	; 2
    2abe:	26 30       	cpi	r18, 0x06	; 6
    2ac0:	31 05       	cpc	r19, r1
    2ac2:	09 f4       	brne	.+2      	; 0x2ac6 <main+0xfbc>
    2ac4:	e8 c4       	rjmp	.+2512   	; 0x3496 <main+0x198c>
    2ac6:	cc 5f       	subi	r28, 0xFC	; 252
    2ac8:	dd 4f       	sbci	r29, 0xFD	; 253
    2aca:	88 81       	ld	r24, Y
    2acc:	99 81       	ldd	r25, Y+1	; 0x01
    2ace:	c4 50       	subi	r28, 0x04	; 4
    2ad0:	d2 40       	sbci	r29, 0x02	; 2
    2ad2:	87 30       	cpi	r24, 0x07	; 7
    2ad4:	91 05       	cpc	r25, r1
    2ad6:	0c f0       	brlt	.+2      	; 0x2ada <main+0xfd0>
    2ad8:	c2 c5       	rjmp	.+2948   	; 0x365e <main+0x1b54>
    2ada:	f9 c3       	rjmp	.+2034   	; 0x32ce <main+0x17c4>
    2adc:	cc 5f       	subi	r28, 0xFC	; 252
    2ade:	dd 4f       	sbci	r29, 0xFD	; 253
    2ae0:	a8 81       	ld	r26, Y
    2ae2:	b9 81       	ldd	r27, Y+1	; 0x01
    2ae4:	c4 50       	subi	r28, 0x04	; 4
    2ae6:	d2 40       	sbci	r29, 0x02	; 2
    2ae8:	ac 30       	cpi	r26, 0x0C	; 12
    2aea:	b1 05       	cpc	r27, r1
    2aec:	11 f4       	brne	.+4      	; 0x2af2 <main+0xfe8>
    2aee:	0c 94 b8 1f 	jmp	0x3f70	; 0x3f70 <main+0x2466>
    2af2:	cc 5f       	subi	r28, 0xFC	; 252
    2af4:	dd 4f       	sbci	r29, 0xFD	; 253
    2af6:	e8 81       	ld	r30, Y
    2af8:	f9 81       	ldd	r31, Y+1	; 0x01
    2afa:	c4 50       	subi	r28, 0x04	; 4
    2afc:	d2 40       	sbci	r29, 0x02	; 2
    2afe:	ed 30       	cpi	r30, 0x0D	; 13
    2b00:	f1 05       	cpc	r31, r1
    2b02:	bc f4       	brge	.+46     	; 0x2b32 <main+0x1028>
    2b04:	cc 5f       	subi	r28, 0xFC	; 252
    2b06:	dd 4f       	sbci	r29, 0xFD	; 253
    2b08:	28 81       	ld	r18, Y
    2b0a:	39 81       	ldd	r19, Y+1	; 0x01
    2b0c:	c4 50       	subi	r28, 0x04	; 4
    2b0e:	d2 40       	sbci	r29, 0x02	; 2
    2b10:	2a 30       	cpi	r18, 0x0A	; 10
    2b12:	31 05       	cpc	r19, r1
    2b14:	11 f4       	brne	.+4      	; 0x2b1a <main+0x1010>
    2b16:	0c 94 ef 1d 	jmp	0x3bde	; 0x3bde <main+0x20d4>
    2b1a:	cc 5f       	subi	r28, 0xFC	; 252
    2b1c:	dd 4f       	sbci	r29, 0xFD	; 253
    2b1e:	88 81       	ld	r24, Y
    2b20:	99 81       	ldd	r25, Y+1	; 0x01
    2b22:	c4 50       	subi	r28, 0x04	; 4
    2b24:	d2 40       	sbci	r29, 0x02	; 2
    2b26:	8b 30       	cpi	r24, 0x0B	; 11
    2b28:	91 05       	cpc	r25, r1
    2b2a:	14 f0       	brlt	.+4      	; 0x2b30 <main+0x1026>
    2b2c:	0c 94 d3 1e 	jmp	0x3da6	; 0x3da6 <main+0x229c>
    2b30:	72 c7       	rjmp	.+3812   	; 0x3a16 <main+0x1f0c>
    2b32:	cc 5f       	subi	r28, 0xFC	; 252
    2b34:	dd 4f       	sbci	r29, 0xFD	; 253
    2b36:	a8 81       	ld	r26, Y
    2b38:	b9 81       	ldd	r27, Y+1	; 0x01
    2b3a:	c4 50       	subi	r28, 0x04	; 4
    2b3c:	d2 40       	sbci	r29, 0x02	; 2
    2b3e:	ae 30       	cpi	r26, 0x0E	; 14
    2b40:	b1 05       	cpc	r27, r1
    2b42:	11 f4       	brne	.+4      	; 0x2b48 <main+0x103e>
    2b44:	0c 94 23 21 	jmp	0x4246	; 0x4246 <main+0x273c>
    2b48:	cc 5f       	subi	r28, 0xFC	; 252
    2b4a:	dd 4f       	sbci	r29, 0xFD	; 253
    2b4c:	e8 81       	ld	r30, Y
    2b4e:	f9 81       	ldd	r31, Y+1	; 0x01
    2b50:	c4 50       	subi	r28, 0x04	; 4
    2b52:	d2 40       	sbci	r29, 0x02	; 2
    2b54:	ee 30       	cpi	r30, 0x0E	; 14
    2b56:	f1 05       	cpc	r31, r1
    2b58:	14 f4       	brge	.+4      	; 0x2b5e <main+0x1054>
    2b5a:	0c 94 78 20 	jmp	0x40f0	; 0x40f0 <main+0x25e6>
    2b5e:	cc 5f       	subi	r28, 0xFC	; 252
    2b60:	dd 4f       	sbci	r29, 0xFD	; 253
    2b62:	28 81       	ld	r18, Y
    2b64:	39 81       	ldd	r19, Y+1	; 0x01
    2b66:	c4 50       	subi	r28, 0x04	; 4
    2b68:	d2 40       	sbci	r29, 0x02	; 2
    2b6a:	2f 30       	cpi	r18, 0x0F	; 15
    2b6c:	31 05       	cpc	r19, r1
    2b6e:	11 f4       	brne	.+4      	; 0x2b74 <main+0x106a>
    2b70:	0c 94 e2 21 	jmp	0x43c4	; 0x43c4 <main+0x28ba>
    2b74:	0c 94 ac 22 	jmp	0x4558	; 0x4558 <main+0x2a4e>
			{
			case YOU:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    2b78:	81 e0       	ldi	r24, 0x01	; 1
    2b7a:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    2b7e:	80 e0       	ldi	r24, 0x00	; 0
    2b80:	60 e0       	ldi	r22, 0x00	; 0
    2b82:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[0],0,8,0);
    2b86:	ce 01       	movw	r24, r28
    2b88:	86 5d       	subi	r24, 0xD6	; 214
    2b8a:	9e 4f       	sbci	r25, 0xFE	; 254
    2b8c:	60 e0       	ldi	r22, 0x00	; 0
    2b8e:	48 e0       	ldi	r20, 0x08	; 8
    2b90:	20 e0       	ldi	r18, 0x00	; 0
    2b92:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[4],1,7,0);
    2b96:	ce 01       	movw	r24, r28
    2b98:	86 5d       	subi	r24, 0xD6	; 214
    2b9a:	9e 4f       	sbci	r25, 0xFE	; 254
    2b9c:	80 96       	adiw	r24, 0x20	; 32
    2b9e:	61 e0       	ldi	r22, 0x01	; 1
    2ba0:	47 e0       	ldi	r20, 0x07	; 7
    2ba2:	20 e0       	ldi	r18, 0x00	; 0
    2ba4:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[2],2,6,0);
    2ba8:	ce 01       	movw	r24, r28
    2baa:	86 5d       	subi	r24, 0xD6	; 214
    2bac:	9e 4f       	sbci	r25, 0xFE	; 254
    2bae:	40 96       	adiw	r24, 0x10	; 16
    2bb0:	62 e0       	ldi	r22, 0x02	; 2
    2bb2:	46 e0       	ldi	r20, 0x06	; 6
    2bb4:	20 e0       	ldi	r18, 0x00	; 0
    2bb6:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    2bba:	fe 01       	movw	r30, r28
    2bbc:	e3 52       	subi	r30, 0x23	; 35
    2bbe:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc0:	80 e0       	ldi	r24, 0x00	; 0
    2bc2:	90 e0       	ldi	r25, 0x00	; 0
    2bc4:	aa ef       	ldi	r26, 0xFA	; 250
    2bc6:	b4 e4       	ldi	r27, 0x44	; 68
    2bc8:	80 83       	st	Z, r24
    2bca:	91 83       	std	Z+1, r25	; 0x01
    2bcc:	a2 83       	std	Z+2, r26	; 0x02
    2bce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bd0:	8e 01       	movw	r16, r28
    2bd2:	07 52       	subi	r16, 0x27	; 39
    2bd4:	1f 4f       	sbci	r17, 0xFF	; 255
    2bd6:	fe 01       	movw	r30, r28
    2bd8:	e3 52       	subi	r30, 0x23	; 35
    2bda:	ff 4f       	sbci	r31, 0xFF	; 255
    2bdc:	60 81       	ld	r22, Z
    2bde:	71 81       	ldd	r23, Z+1	; 0x01
    2be0:	82 81       	ldd	r24, Z+2	; 0x02
    2be2:	93 81       	ldd	r25, Z+3	; 0x03
    2be4:	20 e0       	ldi	r18, 0x00	; 0
    2be6:	30 e0       	ldi	r19, 0x00	; 0
    2be8:	4a e7       	ldi	r20, 0x7A	; 122
    2bea:	55 e4       	ldi	r21, 0x45	; 69
    2bec:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2bf0:	dc 01       	movw	r26, r24
    2bf2:	cb 01       	movw	r24, r22
    2bf4:	f8 01       	movw	r30, r16
    2bf6:	80 83       	st	Z, r24
    2bf8:	91 83       	std	Z+1, r25	; 0x01
    2bfa:	a2 83       	std	Z+2, r26	; 0x02
    2bfc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2bfe:	fe 01       	movw	r30, r28
    2c00:	e7 52       	subi	r30, 0x27	; 39
    2c02:	ff 4f       	sbci	r31, 0xFF	; 255
    2c04:	60 81       	ld	r22, Z
    2c06:	71 81       	ldd	r23, Z+1	; 0x01
    2c08:	82 81       	ldd	r24, Z+2	; 0x02
    2c0a:	93 81       	ldd	r25, Z+3	; 0x03
    2c0c:	20 e0       	ldi	r18, 0x00	; 0
    2c0e:	30 e0       	ldi	r19, 0x00	; 0
    2c10:	40 e8       	ldi	r20, 0x80	; 128
    2c12:	5f e3       	ldi	r21, 0x3F	; 63
    2c14:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2c18:	88 23       	and	r24, r24
    2c1a:	44 f4       	brge	.+16     	; 0x2c2c <main+0x1122>
		__ticks = 1;
    2c1c:	fe 01       	movw	r30, r28
    2c1e:	e9 52       	subi	r30, 0x29	; 41
    2c20:	ff 4f       	sbci	r31, 0xFF	; 255
    2c22:	81 e0       	ldi	r24, 0x01	; 1
    2c24:	90 e0       	ldi	r25, 0x00	; 0
    2c26:	91 83       	std	Z+1, r25	; 0x01
    2c28:	80 83       	st	Z, r24
    2c2a:	64 c0       	rjmp	.+200    	; 0x2cf4 <main+0x11ea>
	else if (__tmp > 65535)
    2c2c:	fe 01       	movw	r30, r28
    2c2e:	e7 52       	subi	r30, 0x27	; 39
    2c30:	ff 4f       	sbci	r31, 0xFF	; 255
    2c32:	60 81       	ld	r22, Z
    2c34:	71 81       	ldd	r23, Z+1	; 0x01
    2c36:	82 81       	ldd	r24, Z+2	; 0x02
    2c38:	93 81       	ldd	r25, Z+3	; 0x03
    2c3a:	20 e0       	ldi	r18, 0x00	; 0
    2c3c:	3f ef       	ldi	r19, 0xFF	; 255
    2c3e:	4f e7       	ldi	r20, 0x7F	; 127
    2c40:	57 e4       	ldi	r21, 0x47	; 71
    2c42:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2c46:	18 16       	cp	r1, r24
    2c48:	0c f0       	brlt	.+2      	; 0x2c4c <main+0x1142>
    2c4a:	43 c0       	rjmp	.+134    	; 0x2cd2 <main+0x11c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c4c:	fe 01       	movw	r30, r28
    2c4e:	e3 52       	subi	r30, 0x23	; 35
    2c50:	ff 4f       	sbci	r31, 0xFF	; 255
    2c52:	60 81       	ld	r22, Z
    2c54:	71 81       	ldd	r23, Z+1	; 0x01
    2c56:	82 81       	ldd	r24, Z+2	; 0x02
    2c58:	93 81       	ldd	r25, Z+3	; 0x03
    2c5a:	20 e0       	ldi	r18, 0x00	; 0
    2c5c:	30 e0       	ldi	r19, 0x00	; 0
    2c5e:	40 e2       	ldi	r20, 0x20	; 32
    2c60:	51 e4       	ldi	r21, 0x41	; 65
    2c62:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2c66:	dc 01       	movw	r26, r24
    2c68:	cb 01       	movw	r24, r22
    2c6a:	8e 01       	movw	r16, r28
    2c6c:	09 52       	subi	r16, 0x29	; 41
    2c6e:	1f 4f       	sbci	r17, 0xFF	; 255
    2c70:	bc 01       	movw	r22, r24
    2c72:	cd 01       	movw	r24, r26
    2c74:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2c78:	dc 01       	movw	r26, r24
    2c7a:	cb 01       	movw	r24, r22
    2c7c:	f8 01       	movw	r30, r16
    2c7e:	91 83       	std	Z+1, r25	; 0x01
    2c80:	80 83       	st	Z, r24
    2c82:	1f c0       	rjmp	.+62     	; 0x2cc2 <main+0x11b8>
    2c84:	fe 01       	movw	r30, r28
    2c86:	eb 52       	subi	r30, 0x2B	; 43
    2c88:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8a:	80 e9       	ldi	r24, 0x90	; 144
    2c8c:	91 e0       	ldi	r25, 0x01	; 1
    2c8e:	91 83       	std	Z+1, r25	; 0x01
    2c90:	80 83       	st	Z, r24
    2c92:	fe 01       	movw	r30, r28
    2c94:	eb 52       	subi	r30, 0x2B	; 43
    2c96:	ff 4f       	sbci	r31, 0xFF	; 255
    2c98:	80 81       	ld	r24, Z
    2c9a:	91 81       	ldd	r25, Z+1	; 0x01
    2c9c:	01 97       	sbiw	r24, 0x01	; 1
    2c9e:	f1 f7       	brne	.-4      	; 0x2c9c <main+0x1192>
    2ca0:	fe 01       	movw	r30, r28
    2ca2:	eb 52       	subi	r30, 0x2B	; 43
    2ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca6:	91 83       	std	Z+1, r25	; 0x01
    2ca8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2caa:	de 01       	movw	r26, r28
    2cac:	a9 52       	subi	r26, 0x29	; 41
    2cae:	bf 4f       	sbci	r27, 0xFF	; 255
    2cb0:	fe 01       	movw	r30, r28
    2cb2:	e9 52       	subi	r30, 0x29	; 41
    2cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb6:	80 81       	ld	r24, Z
    2cb8:	91 81       	ldd	r25, Z+1	; 0x01
    2cba:	01 97       	sbiw	r24, 0x01	; 1
    2cbc:	11 96       	adiw	r26, 0x01	; 1
    2cbe:	9c 93       	st	X, r25
    2cc0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cc2:	fe 01       	movw	r30, r28
    2cc4:	e9 52       	subi	r30, 0x29	; 41
    2cc6:	ff 4f       	sbci	r31, 0xFF	; 255
    2cc8:	80 81       	ld	r24, Z
    2cca:	91 81       	ldd	r25, Z+1	; 0x01
    2ccc:	00 97       	sbiw	r24, 0x00	; 0
    2cce:	d1 f6       	brne	.-76     	; 0x2c84 <main+0x117a>
    2cd0:	72 ca       	rjmp	.-2844   	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cd2:	8e 01       	movw	r16, r28
    2cd4:	09 52       	subi	r16, 0x29	; 41
    2cd6:	1f 4f       	sbci	r17, 0xFF	; 255
    2cd8:	fe 01       	movw	r30, r28
    2cda:	e7 52       	subi	r30, 0x27	; 39
    2cdc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cde:	60 81       	ld	r22, Z
    2ce0:	71 81       	ldd	r23, Z+1	; 0x01
    2ce2:	82 81       	ldd	r24, Z+2	; 0x02
    2ce4:	93 81       	ldd	r25, Z+3	; 0x03
    2ce6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2cea:	dc 01       	movw	r26, r24
    2cec:	cb 01       	movw	r24, r22
    2cee:	f8 01       	movw	r30, r16
    2cf0:	91 83       	std	Z+1, r25	; 0x01
    2cf2:	80 83       	st	Z, r24
    2cf4:	de 01       	movw	r26, r28
    2cf6:	ad 52       	subi	r26, 0x2D	; 45
    2cf8:	bf 4f       	sbci	r27, 0xFF	; 255
    2cfa:	fe 01       	movw	r30, r28
    2cfc:	e9 52       	subi	r30, 0x29	; 41
    2cfe:	ff 4f       	sbci	r31, 0xFF	; 255
    2d00:	80 81       	ld	r24, Z
    2d02:	91 81       	ldd	r25, Z+1	; 0x01
    2d04:	11 96       	adiw	r26, 0x01	; 1
    2d06:	9c 93       	st	X, r25
    2d08:	8e 93       	st	-X, r24
    2d0a:	fe 01       	movw	r30, r28
    2d0c:	ed 52       	subi	r30, 0x2D	; 45
    2d0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d10:	80 81       	ld	r24, Z
    2d12:	91 81       	ldd	r25, Z+1	; 0x01
    2d14:	01 97       	sbiw	r24, 0x01	; 1
    2d16:	f1 f7       	brne	.-4      	; 0x2d14 <main+0x120a>
    2d18:	fe 01       	movw	r30, r28
    2d1a:	ed 52       	subi	r30, 0x2D	; 45
    2d1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d1e:	91 83       	std	Z+1, r25	; 0x01
    2d20:	80 83       	st	Z, r24
    2d22:	49 ca       	rjmp	.-2926   	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case I_LOVE_YOU:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    2d24:	81 e0       	ldi	r24, 0x01	; 1
    2d26:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    2d2a:	80 e0       	ldi	r24, 0x00	; 0
    2d2c:	60 e0       	ldi	r22, 0x00	; 0
    2d2e:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[0],0,9,0);
    2d32:	ce 01       	movw	r24, r28
    2d34:	86 5d       	subi	r24, 0xD6	; 214
    2d36:	9e 4f       	sbci	r25, 0xFE	; 254
    2d38:	60 e0       	ldi	r22, 0x00	; 0
    2d3a:	49 e0       	ldi	r20, 0x09	; 9
    2d3c:	20 e0       	ldi	r18, 0x00	; 0
    2d3e:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[3],1,8,0);
    2d42:	ce 01       	movw	r24, r28
    2d44:	86 5d       	subi	r24, 0xD6	; 214
    2d46:	9e 4f       	sbci	r25, 0xFE	; 254
    2d48:	48 96       	adiw	r24, 0x18	; 24
    2d4a:	61 e0       	ldi	r22, 0x01	; 1
    2d4c:	48 e0       	ldi	r20, 0x08	; 8
    2d4e:	20 e0       	ldi	r18, 0x00	; 0
    2d50:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[1],2,7,0);
    2d54:	ce 01       	movw	r24, r28
    2d56:	86 5d       	subi	r24, 0xD6	; 214
    2d58:	9e 4f       	sbci	r25, 0xFE	; 254
    2d5a:	08 96       	adiw	r24, 0x08	; 8
    2d5c:	62 e0       	ldi	r22, 0x02	; 2
    2d5e:	47 e0       	ldi	r20, 0x07	; 7
    2d60:	20 e0       	ldi	r18, 0x00	; 0
    2d62:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[16],3,6,0);
    2d66:	ce 01       	movw	r24, r28
    2d68:	86 5d       	subi	r24, 0xD6	; 214
    2d6a:	9e 4f       	sbci	r25, 0xFE	; 254
    2d6c:	80 58       	subi	r24, 0x80	; 128
    2d6e:	9f 4f       	sbci	r25, 0xFF	; 255
    2d70:	63 e0       	ldi	r22, 0x03	; 3
    2d72:	46 e0       	ldi	r20, 0x06	; 6
    2d74:	20 e0       	ldi	r18, 0x00	; 0
    2d76:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    2d7a:	fe 01       	movw	r30, r28
    2d7c:	e1 53       	subi	r30, 0x31	; 49
    2d7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d80:	80 e0       	ldi	r24, 0x00	; 0
    2d82:	90 e0       	ldi	r25, 0x00	; 0
    2d84:	aa ef       	ldi	r26, 0xFA	; 250
    2d86:	b4 e4       	ldi	r27, 0x44	; 68
    2d88:	80 83       	st	Z, r24
    2d8a:	91 83       	std	Z+1, r25	; 0x01
    2d8c:	a2 83       	std	Z+2, r26	; 0x02
    2d8e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d90:	8e 01       	movw	r16, r28
    2d92:	05 53       	subi	r16, 0x35	; 53
    2d94:	1f 4f       	sbci	r17, 0xFF	; 255
    2d96:	fe 01       	movw	r30, r28
    2d98:	e1 53       	subi	r30, 0x31	; 49
    2d9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d9c:	60 81       	ld	r22, Z
    2d9e:	71 81       	ldd	r23, Z+1	; 0x01
    2da0:	82 81       	ldd	r24, Z+2	; 0x02
    2da2:	93 81       	ldd	r25, Z+3	; 0x03
    2da4:	20 e0       	ldi	r18, 0x00	; 0
    2da6:	30 e0       	ldi	r19, 0x00	; 0
    2da8:	4a e7       	ldi	r20, 0x7A	; 122
    2daa:	55 e4       	ldi	r21, 0x45	; 69
    2dac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2db0:	dc 01       	movw	r26, r24
    2db2:	cb 01       	movw	r24, r22
    2db4:	f8 01       	movw	r30, r16
    2db6:	80 83       	st	Z, r24
    2db8:	91 83       	std	Z+1, r25	; 0x01
    2dba:	a2 83       	std	Z+2, r26	; 0x02
    2dbc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2dbe:	fe 01       	movw	r30, r28
    2dc0:	e5 53       	subi	r30, 0x35	; 53
    2dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc4:	60 81       	ld	r22, Z
    2dc6:	71 81       	ldd	r23, Z+1	; 0x01
    2dc8:	82 81       	ldd	r24, Z+2	; 0x02
    2dca:	93 81       	ldd	r25, Z+3	; 0x03
    2dcc:	20 e0       	ldi	r18, 0x00	; 0
    2dce:	30 e0       	ldi	r19, 0x00	; 0
    2dd0:	40 e8       	ldi	r20, 0x80	; 128
    2dd2:	5f e3       	ldi	r21, 0x3F	; 63
    2dd4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2dd8:	88 23       	and	r24, r24
    2dda:	44 f4       	brge	.+16     	; 0x2dec <main+0x12e2>
		__ticks = 1;
    2ddc:	fe 01       	movw	r30, r28
    2dde:	e7 53       	subi	r30, 0x37	; 55
    2de0:	ff 4f       	sbci	r31, 0xFF	; 255
    2de2:	81 e0       	ldi	r24, 0x01	; 1
    2de4:	90 e0       	ldi	r25, 0x00	; 0
    2de6:	91 83       	std	Z+1, r25	; 0x01
    2de8:	80 83       	st	Z, r24
    2dea:	64 c0       	rjmp	.+200    	; 0x2eb4 <main+0x13aa>
	else if (__tmp > 65535)
    2dec:	fe 01       	movw	r30, r28
    2dee:	e5 53       	subi	r30, 0x35	; 53
    2df0:	ff 4f       	sbci	r31, 0xFF	; 255
    2df2:	60 81       	ld	r22, Z
    2df4:	71 81       	ldd	r23, Z+1	; 0x01
    2df6:	82 81       	ldd	r24, Z+2	; 0x02
    2df8:	93 81       	ldd	r25, Z+3	; 0x03
    2dfa:	20 e0       	ldi	r18, 0x00	; 0
    2dfc:	3f ef       	ldi	r19, 0xFF	; 255
    2dfe:	4f e7       	ldi	r20, 0x7F	; 127
    2e00:	57 e4       	ldi	r21, 0x47	; 71
    2e02:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2e06:	18 16       	cp	r1, r24
    2e08:	0c f0       	brlt	.+2      	; 0x2e0c <main+0x1302>
    2e0a:	43 c0       	rjmp	.+134    	; 0x2e92 <main+0x1388>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e0c:	fe 01       	movw	r30, r28
    2e0e:	e1 53       	subi	r30, 0x31	; 49
    2e10:	ff 4f       	sbci	r31, 0xFF	; 255
    2e12:	60 81       	ld	r22, Z
    2e14:	71 81       	ldd	r23, Z+1	; 0x01
    2e16:	82 81       	ldd	r24, Z+2	; 0x02
    2e18:	93 81       	ldd	r25, Z+3	; 0x03
    2e1a:	20 e0       	ldi	r18, 0x00	; 0
    2e1c:	30 e0       	ldi	r19, 0x00	; 0
    2e1e:	40 e2       	ldi	r20, 0x20	; 32
    2e20:	51 e4       	ldi	r21, 0x41	; 65
    2e22:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2e26:	dc 01       	movw	r26, r24
    2e28:	cb 01       	movw	r24, r22
    2e2a:	8e 01       	movw	r16, r28
    2e2c:	07 53       	subi	r16, 0x37	; 55
    2e2e:	1f 4f       	sbci	r17, 0xFF	; 255
    2e30:	bc 01       	movw	r22, r24
    2e32:	cd 01       	movw	r24, r26
    2e34:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2e38:	dc 01       	movw	r26, r24
    2e3a:	cb 01       	movw	r24, r22
    2e3c:	f8 01       	movw	r30, r16
    2e3e:	91 83       	std	Z+1, r25	; 0x01
    2e40:	80 83       	st	Z, r24
    2e42:	1f c0       	rjmp	.+62     	; 0x2e82 <main+0x1378>
    2e44:	fe 01       	movw	r30, r28
    2e46:	e9 53       	subi	r30, 0x39	; 57
    2e48:	ff 4f       	sbci	r31, 0xFF	; 255
    2e4a:	80 e9       	ldi	r24, 0x90	; 144
    2e4c:	91 e0       	ldi	r25, 0x01	; 1
    2e4e:	91 83       	std	Z+1, r25	; 0x01
    2e50:	80 83       	st	Z, r24
    2e52:	fe 01       	movw	r30, r28
    2e54:	e9 53       	subi	r30, 0x39	; 57
    2e56:	ff 4f       	sbci	r31, 0xFF	; 255
    2e58:	80 81       	ld	r24, Z
    2e5a:	91 81       	ldd	r25, Z+1	; 0x01
    2e5c:	01 97       	sbiw	r24, 0x01	; 1
    2e5e:	f1 f7       	brne	.-4      	; 0x2e5c <main+0x1352>
    2e60:	fe 01       	movw	r30, r28
    2e62:	e9 53       	subi	r30, 0x39	; 57
    2e64:	ff 4f       	sbci	r31, 0xFF	; 255
    2e66:	91 83       	std	Z+1, r25	; 0x01
    2e68:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e6a:	de 01       	movw	r26, r28
    2e6c:	a7 53       	subi	r26, 0x37	; 55
    2e6e:	bf 4f       	sbci	r27, 0xFF	; 255
    2e70:	fe 01       	movw	r30, r28
    2e72:	e7 53       	subi	r30, 0x37	; 55
    2e74:	ff 4f       	sbci	r31, 0xFF	; 255
    2e76:	80 81       	ld	r24, Z
    2e78:	91 81       	ldd	r25, Z+1	; 0x01
    2e7a:	01 97       	sbiw	r24, 0x01	; 1
    2e7c:	11 96       	adiw	r26, 0x01	; 1
    2e7e:	9c 93       	st	X, r25
    2e80:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e82:	fe 01       	movw	r30, r28
    2e84:	e7 53       	subi	r30, 0x37	; 55
    2e86:	ff 4f       	sbci	r31, 0xFF	; 255
    2e88:	80 81       	ld	r24, Z
    2e8a:	91 81       	ldd	r25, Z+1	; 0x01
    2e8c:	00 97       	sbiw	r24, 0x00	; 0
    2e8e:	d1 f6       	brne	.-76     	; 0x2e44 <main+0x133a>
    2e90:	92 c9       	rjmp	.-3292   	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e92:	8e 01       	movw	r16, r28
    2e94:	07 53       	subi	r16, 0x37	; 55
    2e96:	1f 4f       	sbci	r17, 0xFF	; 255
    2e98:	fe 01       	movw	r30, r28
    2e9a:	e5 53       	subi	r30, 0x35	; 53
    2e9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e9e:	60 81       	ld	r22, Z
    2ea0:	71 81       	ldd	r23, Z+1	; 0x01
    2ea2:	82 81       	ldd	r24, Z+2	; 0x02
    2ea4:	93 81       	ldd	r25, Z+3	; 0x03
    2ea6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2eaa:	dc 01       	movw	r26, r24
    2eac:	cb 01       	movw	r24, r22
    2eae:	f8 01       	movw	r30, r16
    2eb0:	91 83       	std	Z+1, r25	; 0x01
    2eb2:	80 83       	st	Z, r24
    2eb4:	de 01       	movw	r26, r28
    2eb6:	ab 53       	subi	r26, 0x3B	; 59
    2eb8:	bf 4f       	sbci	r27, 0xFF	; 255
    2eba:	fe 01       	movw	r30, r28
    2ebc:	e7 53       	subi	r30, 0x37	; 55
    2ebe:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec0:	80 81       	ld	r24, Z
    2ec2:	91 81       	ldd	r25, Z+1	; 0x01
    2ec4:	11 96       	adiw	r26, 0x01	; 1
    2ec6:	9c 93       	st	X, r25
    2ec8:	8e 93       	st	-X, r24
    2eca:	fe 01       	movw	r30, r28
    2ecc:	eb 53       	subi	r30, 0x3B	; 59
    2ece:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed0:	80 81       	ld	r24, Z
    2ed2:	91 81       	ldd	r25, Z+1	; 0x01
    2ed4:	01 97       	sbiw	r24, 0x01	; 1
    2ed6:	f1 f7       	brne	.-4      	; 0x2ed4 <main+0x13ca>
    2ed8:	fe 01       	movw	r30, r28
    2eda:	eb 53       	subi	r30, 0x3B	; 59
    2edc:	ff 4f       	sbci	r31, 0xFF	; 255
    2ede:	91 83       	std	Z+1, r25	; 0x01
    2ee0:	80 83       	st	Z, r24
    2ee2:	69 c9       	rjmp	.-3374   	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case HELP:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    2ee4:	81 e0       	ldi	r24, 0x01	; 1
    2ee6:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    2eea:	80 e0       	ldi	r24, 0x00	; 0
    2eec:	60 e0       	ldi	r22, 0x00	; 0
    2eee:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[9],0,10,0);
    2ef2:	ce 01       	movw	r24, r28
    2ef4:	86 5d       	subi	r24, 0xD6	; 214
    2ef6:	9e 4f       	sbci	r25, 0xFE	; 254
    2ef8:	88 5b       	subi	r24, 0xB8	; 184
    2efa:	9f 4f       	sbci	r25, 0xFF	; 255
    2efc:	60 e0       	ldi	r22, 0x00	; 0
    2efe:	4a e0       	ldi	r20, 0x0A	; 10
    2f00:	20 e0       	ldi	r18, 0x00	; 0
    2f02:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[17],1,9,0);
    2f06:	ce 01       	movw	r24, r28
    2f08:	86 5d       	subi	r24, 0xD6	; 214
    2f0a:	9e 4f       	sbci	r25, 0xFE	; 254
    2f0c:	88 57       	subi	r24, 0x78	; 120
    2f0e:	9f 4f       	sbci	r25, 0xFF	; 255
    2f10:	61 e0       	ldi	r22, 0x01	; 1
    2f12:	49 e0       	ldi	r20, 0x09	; 9
    2f14:	20 e0       	ldi	r18, 0x00	; 0
    2f16:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[7],2,8,0);
    2f1a:	ce 01       	movw	r24, r28
    2f1c:	86 5d       	subi	r24, 0xD6	; 214
    2f1e:	9e 4f       	sbci	r25, 0xFE	; 254
    2f20:	c8 96       	adiw	r24, 0x38	; 56
    2f22:	62 e0       	ldi	r22, 0x02	; 2
    2f24:	48 e0       	ldi	r20, 0x08	; 8
    2f26:	20 e0       	ldi	r18, 0x00	; 0
    2f28:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[10],3,7,0);
    2f2c:	ce 01       	movw	r24, r28
    2f2e:	86 5d       	subi	r24, 0xD6	; 214
    2f30:	9e 4f       	sbci	r25, 0xFE	; 254
    2f32:	80 5b       	subi	r24, 0xB0	; 176
    2f34:	9f 4f       	sbci	r25, 0xFF	; 255
    2f36:	63 e0       	ldi	r22, 0x03	; 3
    2f38:	47 e0       	ldi	r20, 0x07	; 7
    2f3a:	20 e0       	ldi	r18, 0x00	; 0
    2f3c:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[11],4,6,0);
    2f40:	ce 01       	movw	r24, r28
    2f42:	86 5d       	subi	r24, 0xD6	; 214
    2f44:	9e 4f       	sbci	r25, 0xFE	; 254
    2f46:	88 5a       	subi	r24, 0xA8	; 168
    2f48:	9f 4f       	sbci	r25, 0xFF	; 255
    2f4a:	64 e0       	ldi	r22, 0x04	; 4
    2f4c:	46 e0       	ldi	r20, 0x06	; 6
    2f4e:	20 e0       	ldi	r18, 0x00	; 0
    2f50:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[18],5,5,0);
    2f54:	ce 01       	movw	r24, r28
    2f56:	86 5d       	subi	r24, 0xD6	; 214
    2f58:	9e 4f       	sbci	r25, 0xFE	; 254
    2f5a:	80 57       	subi	r24, 0x70	; 112
    2f5c:	9f 4f       	sbci	r25, 0xFF	; 255
    2f5e:	65 e0       	ldi	r22, 0x05	; 5
    2f60:	45 e0       	ldi	r20, 0x05	; 5
    2f62:	20 e0       	ldi	r18, 0x00	; 0
    2f64:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[21],6,4,0);
    2f68:	ce 01       	movw	r24, r28
    2f6a:	86 5d       	subi	r24, 0xD6	; 214
    2f6c:	9e 4f       	sbci	r25, 0xFE	; 254
    2f6e:	88 55       	subi	r24, 0x58	; 88
    2f70:	9f 4f       	sbci	r25, 0xFF	; 255
    2f72:	66 e0       	ldi	r22, 0x06	; 6
    2f74:	44 e0       	ldi	r20, 0x04	; 4
    2f76:	20 e0       	ldi	r18, 0x00	; 0
    2f78:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    2f7c:	fe 01       	movw	r30, r28
    2f7e:	ef 53       	subi	r30, 0x3F	; 63
    2f80:	ff 4f       	sbci	r31, 0xFF	; 255
    2f82:	80 e0       	ldi	r24, 0x00	; 0
    2f84:	90 e0       	ldi	r25, 0x00	; 0
    2f86:	aa ef       	ldi	r26, 0xFA	; 250
    2f88:	b4 e4       	ldi	r27, 0x44	; 68
    2f8a:	80 83       	st	Z, r24
    2f8c:	91 83       	std	Z+1, r25	; 0x01
    2f8e:	a2 83       	std	Z+2, r26	; 0x02
    2f90:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f92:	8e 01       	movw	r16, r28
    2f94:	03 54       	subi	r16, 0x43	; 67
    2f96:	1f 4f       	sbci	r17, 0xFF	; 255
    2f98:	fe 01       	movw	r30, r28
    2f9a:	ef 53       	subi	r30, 0x3F	; 63
    2f9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f9e:	60 81       	ld	r22, Z
    2fa0:	71 81       	ldd	r23, Z+1	; 0x01
    2fa2:	82 81       	ldd	r24, Z+2	; 0x02
    2fa4:	93 81       	ldd	r25, Z+3	; 0x03
    2fa6:	20 e0       	ldi	r18, 0x00	; 0
    2fa8:	30 e0       	ldi	r19, 0x00	; 0
    2faa:	4a e7       	ldi	r20, 0x7A	; 122
    2fac:	55 e4       	ldi	r21, 0x45	; 69
    2fae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2fb2:	dc 01       	movw	r26, r24
    2fb4:	cb 01       	movw	r24, r22
    2fb6:	f8 01       	movw	r30, r16
    2fb8:	80 83       	st	Z, r24
    2fba:	91 83       	std	Z+1, r25	; 0x01
    2fbc:	a2 83       	std	Z+2, r26	; 0x02
    2fbe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2fc0:	fe 01       	movw	r30, r28
    2fc2:	e3 54       	subi	r30, 0x43	; 67
    2fc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2fc6:	60 81       	ld	r22, Z
    2fc8:	71 81       	ldd	r23, Z+1	; 0x01
    2fca:	82 81       	ldd	r24, Z+2	; 0x02
    2fcc:	93 81       	ldd	r25, Z+3	; 0x03
    2fce:	20 e0       	ldi	r18, 0x00	; 0
    2fd0:	30 e0       	ldi	r19, 0x00	; 0
    2fd2:	40 e8       	ldi	r20, 0x80	; 128
    2fd4:	5f e3       	ldi	r21, 0x3F	; 63
    2fd6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2fda:	88 23       	and	r24, r24
    2fdc:	44 f4       	brge	.+16     	; 0x2fee <main+0x14e4>
		__ticks = 1;
    2fde:	fe 01       	movw	r30, r28
    2fe0:	e5 54       	subi	r30, 0x45	; 69
    2fe2:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe4:	81 e0       	ldi	r24, 0x01	; 1
    2fe6:	90 e0       	ldi	r25, 0x00	; 0
    2fe8:	91 83       	std	Z+1, r25	; 0x01
    2fea:	80 83       	st	Z, r24
    2fec:	64 c0       	rjmp	.+200    	; 0x30b6 <main+0x15ac>
	else if (__tmp > 65535)
    2fee:	fe 01       	movw	r30, r28
    2ff0:	e3 54       	subi	r30, 0x43	; 67
    2ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ff4:	60 81       	ld	r22, Z
    2ff6:	71 81       	ldd	r23, Z+1	; 0x01
    2ff8:	82 81       	ldd	r24, Z+2	; 0x02
    2ffa:	93 81       	ldd	r25, Z+3	; 0x03
    2ffc:	20 e0       	ldi	r18, 0x00	; 0
    2ffe:	3f ef       	ldi	r19, 0xFF	; 255
    3000:	4f e7       	ldi	r20, 0x7F	; 127
    3002:	57 e4       	ldi	r21, 0x47	; 71
    3004:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3008:	18 16       	cp	r1, r24
    300a:	0c f0       	brlt	.+2      	; 0x300e <main+0x1504>
    300c:	43 c0       	rjmp	.+134    	; 0x3094 <main+0x158a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    300e:	fe 01       	movw	r30, r28
    3010:	ef 53       	subi	r30, 0x3F	; 63
    3012:	ff 4f       	sbci	r31, 0xFF	; 255
    3014:	60 81       	ld	r22, Z
    3016:	71 81       	ldd	r23, Z+1	; 0x01
    3018:	82 81       	ldd	r24, Z+2	; 0x02
    301a:	93 81       	ldd	r25, Z+3	; 0x03
    301c:	20 e0       	ldi	r18, 0x00	; 0
    301e:	30 e0       	ldi	r19, 0x00	; 0
    3020:	40 e2       	ldi	r20, 0x20	; 32
    3022:	51 e4       	ldi	r21, 0x41	; 65
    3024:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3028:	dc 01       	movw	r26, r24
    302a:	cb 01       	movw	r24, r22
    302c:	8e 01       	movw	r16, r28
    302e:	05 54       	subi	r16, 0x45	; 69
    3030:	1f 4f       	sbci	r17, 0xFF	; 255
    3032:	bc 01       	movw	r22, r24
    3034:	cd 01       	movw	r24, r26
    3036:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    303a:	dc 01       	movw	r26, r24
    303c:	cb 01       	movw	r24, r22
    303e:	f8 01       	movw	r30, r16
    3040:	91 83       	std	Z+1, r25	; 0x01
    3042:	80 83       	st	Z, r24
    3044:	1f c0       	rjmp	.+62     	; 0x3084 <main+0x157a>
    3046:	fe 01       	movw	r30, r28
    3048:	e7 54       	subi	r30, 0x47	; 71
    304a:	ff 4f       	sbci	r31, 0xFF	; 255
    304c:	80 e9       	ldi	r24, 0x90	; 144
    304e:	91 e0       	ldi	r25, 0x01	; 1
    3050:	91 83       	std	Z+1, r25	; 0x01
    3052:	80 83       	st	Z, r24
    3054:	fe 01       	movw	r30, r28
    3056:	e7 54       	subi	r30, 0x47	; 71
    3058:	ff 4f       	sbci	r31, 0xFF	; 255
    305a:	80 81       	ld	r24, Z
    305c:	91 81       	ldd	r25, Z+1	; 0x01
    305e:	01 97       	sbiw	r24, 0x01	; 1
    3060:	f1 f7       	brne	.-4      	; 0x305e <main+0x1554>
    3062:	fe 01       	movw	r30, r28
    3064:	e7 54       	subi	r30, 0x47	; 71
    3066:	ff 4f       	sbci	r31, 0xFF	; 255
    3068:	91 83       	std	Z+1, r25	; 0x01
    306a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    306c:	de 01       	movw	r26, r28
    306e:	a5 54       	subi	r26, 0x45	; 69
    3070:	bf 4f       	sbci	r27, 0xFF	; 255
    3072:	fe 01       	movw	r30, r28
    3074:	e5 54       	subi	r30, 0x45	; 69
    3076:	ff 4f       	sbci	r31, 0xFF	; 255
    3078:	80 81       	ld	r24, Z
    307a:	91 81       	ldd	r25, Z+1	; 0x01
    307c:	01 97       	sbiw	r24, 0x01	; 1
    307e:	11 96       	adiw	r26, 0x01	; 1
    3080:	9c 93       	st	X, r25
    3082:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3084:	fe 01       	movw	r30, r28
    3086:	e5 54       	subi	r30, 0x45	; 69
    3088:	ff 4f       	sbci	r31, 0xFF	; 255
    308a:	80 81       	ld	r24, Z
    308c:	91 81       	ldd	r25, Z+1	; 0x01
    308e:	00 97       	sbiw	r24, 0x00	; 0
    3090:	d1 f6       	brne	.-76     	; 0x3046 <main+0x153c>
    3092:	91 c8       	rjmp	.-3806   	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3094:	8e 01       	movw	r16, r28
    3096:	05 54       	subi	r16, 0x45	; 69
    3098:	1f 4f       	sbci	r17, 0xFF	; 255
    309a:	fe 01       	movw	r30, r28
    309c:	e3 54       	subi	r30, 0x43	; 67
    309e:	ff 4f       	sbci	r31, 0xFF	; 255
    30a0:	60 81       	ld	r22, Z
    30a2:	71 81       	ldd	r23, Z+1	; 0x01
    30a4:	82 81       	ldd	r24, Z+2	; 0x02
    30a6:	93 81       	ldd	r25, Z+3	; 0x03
    30a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    30ac:	dc 01       	movw	r26, r24
    30ae:	cb 01       	movw	r24, r22
    30b0:	f8 01       	movw	r30, r16
    30b2:	91 83       	std	Z+1, r25	; 0x01
    30b4:	80 83       	st	Z, r24
    30b6:	de 01       	movw	r26, r28
    30b8:	a9 54       	subi	r26, 0x49	; 73
    30ba:	bf 4f       	sbci	r27, 0xFF	; 255
    30bc:	fe 01       	movw	r30, r28
    30be:	e5 54       	subi	r30, 0x45	; 69
    30c0:	ff 4f       	sbci	r31, 0xFF	; 255
    30c2:	80 81       	ld	r24, Z
    30c4:	91 81       	ldd	r25, Z+1	; 0x01
    30c6:	11 96       	adiw	r26, 0x01	; 1
    30c8:	9c 93       	st	X, r25
    30ca:	8e 93       	st	-X, r24
    30cc:	fe 01       	movw	r30, r28
    30ce:	e9 54       	subi	r30, 0x49	; 73
    30d0:	ff 4f       	sbci	r31, 0xFF	; 255
    30d2:	80 81       	ld	r24, Z
    30d4:	91 81       	ldd	r25, Z+1	; 0x01
    30d6:	01 97       	sbiw	r24, 0x01	; 1
    30d8:	f1 f7       	brne	.-4      	; 0x30d6 <main+0x15cc>
    30da:	fe 01       	movw	r30, r28
    30dc:	e9 54       	subi	r30, 0x49	; 73
    30de:	ff 4f       	sbci	r31, 0xFF	; 255
    30e0:	91 83       	std	Z+1, r25	; 0x01
    30e2:	80 83       	st	Z, r24
    30e4:	68 c8       	rjmp	.-3888   	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;
			case I_AM_WATCHING_YOU:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    30e6:	81 e0       	ldi	r24, 0x01	; 1
    30e8:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    30ec:	80 e0       	ldi	r24, 0x00	; 0
    30ee:	60 e0       	ldi	r22, 0x00	; 0
    30f0:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[0],0,10,0);
    30f4:	ce 01       	movw	r24, r28
    30f6:	86 5d       	subi	r24, 0xD6	; 214
    30f8:	9e 4f       	sbci	r25, 0xFE	; 254
    30fa:	60 e0       	ldi	r22, 0x00	; 0
    30fc:	4a e0       	ldi	r20, 0x0A	; 10
    30fe:	20 e0       	ldi	r18, 0x00	; 0
    3100:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[5],1,9,0);
    3104:	ce 01       	movw	r24, r28
    3106:	86 5d       	subi	r24, 0xD6	; 214
    3108:	9e 4f       	sbci	r25, 0xFE	; 254
    310a:	88 96       	adiw	r24, 0x28	; 40
    310c:	61 e0       	ldi	r22, 0x01	; 1
    310e:	49 e0       	ldi	r20, 0x09	; 9
    3110:	20 e0       	ldi	r18, 0x00	; 0
    3112:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[7],2,8,0);
    3116:	ce 01       	movw	r24, r28
    3118:	86 5d       	subi	r24, 0xD6	; 214
    311a:	9e 4f       	sbci	r25, 0xFE	; 254
    311c:	c8 96       	adiw	r24, 0x38	; 56
    311e:	62 e0       	ldi	r22, 0x02	; 2
    3120:	48 e0       	ldi	r20, 0x08	; 8
    3122:	20 e0       	ldi	r18, 0x00	; 0
    3124:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[6],3,7,0);
    3128:	ce 01       	movw	r24, r28
    312a:	86 5d       	subi	r24, 0xD6	; 214
    312c:	9e 4f       	sbci	r25, 0xFE	; 254
    312e:	c0 96       	adiw	r24, 0x30	; 48
    3130:	63 e0       	ldi	r22, 0x03	; 3
    3132:	47 e0       	ldi	r20, 0x07	; 7
    3134:	20 e0       	ldi	r18, 0x00	; 0
    3136:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[1],4,6,0);
    313a:	ce 01       	movw	r24, r28
    313c:	86 5d       	subi	r24, 0xD6	; 214
    313e:	9e 4f       	sbci	r25, 0xFE	; 254
    3140:	08 96       	adiw	r24, 0x08	; 8
    3142:	64 e0       	ldi	r22, 0x04	; 4
    3144:	46 e0       	ldi	r20, 0x06	; 6
    3146:	20 e0       	ldi	r18, 0x00	; 0
    3148:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[16],5,5,0);
    314c:	ce 01       	movw	r24, r28
    314e:	86 5d       	subi	r24, 0xD6	; 214
    3150:	9e 4f       	sbci	r25, 0xFE	; 254
    3152:	80 58       	subi	r24, 0x80	; 128
    3154:	9f 4f       	sbci	r25, 0xFF	; 255
    3156:	65 e0       	ldi	r22, 0x05	; 5
    3158:	45 e0       	ldi	r20, 0x05	; 5
    315a:	20 e0       	ldi	r18, 0x00	; 0
    315c:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    3160:	fe 01       	movw	r30, r28
    3162:	ed 54       	subi	r30, 0x4D	; 77
    3164:	ff 4f       	sbci	r31, 0xFF	; 255
    3166:	80 e0       	ldi	r24, 0x00	; 0
    3168:	90 e0       	ldi	r25, 0x00	; 0
    316a:	aa ef       	ldi	r26, 0xFA	; 250
    316c:	b4 e4       	ldi	r27, 0x44	; 68
    316e:	80 83       	st	Z, r24
    3170:	91 83       	std	Z+1, r25	; 0x01
    3172:	a2 83       	std	Z+2, r26	; 0x02
    3174:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3176:	8e 01       	movw	r16, r28
    3178:	01 55       	subi	r16, 0x51	; 81
    317a:	1f 4f       	sbci	r17, 0xFF	; 255
    317c:	fe 01       	movw	r30, r28
    317e:	ed 54       	subi	r30, 0x4D	; 77
    3180:	ff 4f       	sbci	r31, 0xFF	; 255
    3182:	60 81       	ld	r22, Z
    3184:	71 81       	ldd	r23, Z+1	; 0x01
    3186:	82 81       	ldd	r24, Z+2	; 0x02
    3188:	93 81       	ldd	r25, Z+3	; 0x03
    318a:	20 e0       	ldi	r18, 0x00	; 0
    318c:	30 e0       	ldi	r19, 0x00	; 0
    318e:	4a e7       	ldi	r20, 0x7A	; 122
    3190:	55 e4       	ldi	r21, 0x45	; 69
    3192:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3196:	dc 01       	movw	r26, r24
    3198:	cb 01       	movw	r24, r22
    319a:	f8 01       	movw	r30, r16
    319c:	80 83       	st	Z, r24
    319e:	91 83       	std	Z+1, r25	; 0x01
    31a0:	a2 83       	std	Z+2, r26	; 0x02
    31a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    31a4:	fe 01       	movw	r30, r28
    31a6:	e1 55       	subi	r30, 0x51	; 81
    31a8:	ff 4f       	sbci	r31, 0xFF	; 255
    31aa:	60 81       	ld	r22, Z
    31ac:	71 81       	ldd	r23, Z+1	; 0x01
    31ae:	82 81       	ldd	r24, Z+2	; 0x02
    31b0:	93 81       	ldd	r25, Z+3	; 0x03
    31b2:	20 e0       	ldi	r18, 0x00	; 0
    31b4:	30 e0       	ldi	r19, 0x00	; 0
    31b6:	40 e8       	ldi	r20, 0x80	; 128
    31b8:	5f e3       	ldi	r21, 0x3F	; 63
    31ba:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    31be:	88 23       	and	r24, r24
    31c0:	44 f4       	brge	.+16     	; 0x31d2 <main+0x16c8>
		__ticks = 1;
    31c2:	fe 01       	movw	r30, r28
    31c4:	e3 55       	subi	r30, 0x53	; 83
    31c6:	ff 4f       	sbci	r31, 0xFF	; 255
    31c8:	81 e0       	ldi	r24, 0x01	; 1
    31ca:	90 e0       	ldi	r25, 0x00	; 0
    31cc:	91 83       	std	Z+1, r25	; 0x01
    31ce:	80 83       	st	Z, r24
    31d0:	65 c0       	rjmp	.+202    	; 0x329c <main+0x1792>
	else if (__tmp > 65535)
    31d2:	fe 01       	movw	r30, r28
    31d4:	e1 55       	subi	r30, 0x51	; 81
    31d6:	ff 4f       	sbci	r31, 0xFF	; 255
    31d8:	60 81       	ld	r22, Z
    31da:	71 81       	ldd	r23, Z+1	; 0x01
    31dc:	82 81       	ldd	r24, Z+2	; 0x02
    31de:	93 81       	ldd	r25, Z+3	; 0x03
    31e0:	20 e0       	ldi	r18, 0x00	; 0
    31e2:	3f ef       	ldi	r19, 0xFF	; 255
    31e4:	4f e7       	ldi	r20, 0x7F	; 127
    31e6:	57 e4       	ldi	r21, 0x47	; 71
    31e8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    31ec:	18 16       	cp	r1, r24
    31ee:	0c f0       	brlt	.+2      	; 0x31f2 <main+0x16e8>
    31f0:	44 c0       	rjmp	.+136    	; 0x327a <main+0x1770>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31f2:	fe 01       	movw	r30, r28
    31f4:	ed 54       	subi	r30, 0x4D	; 77
    31f6:	ff 4f       	sbci	r31, 0xFF	; 255
    31f8:	60 81       	ld	r22, Z
    31fa:	71 81       	ldd	r23, Z+1	; 0x01
    31fc:	82 81       	ldd	r24, Z+2	; 0x02
    31fe:	93 81       	ldd	r25, Z+3	; 0x03
    3200:	20 e0       	ldi	r18, 0x00	; 0
    3202:	30 e0       	ldi	r19, 0x00	; 0
    3204:	40 e2       	ldi	r20, 0x20	; 32
    3206:	51 e4       	ldi	r21, 0x41	; 65
    3208:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    320c:	dc 01       	movw	r26, r24
    320e:	cb 01       	movw	r24, r22
    3210:	8e 01       	movw	r16, r28
    3212:	03 55       	subi	r16, 0x53	; 83
    3214:	1f 4f       	sbci	r17, 0xFF	; 255
    3216:	bc 01       	movw	r22, r24
    3218:	cd 01       	movw	r24, r26
    321a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    321e:	dc 01       	movw	r26, r24
    3220:	cb 01       	movw	r24, r22
    3222:	f8 01       	movw	r30, r16
    3224:	91 83       	std	Z+1, r25	; 0x01
    3226:	80 83       	st	Z, r24
    3228:	1f c0       	rjmp	.+62     	; 0x3268 <main+0x175e>
    322a:	fe 01       	movw	r30, r28
    322c:	e5 55       	subi	r30, 0x55	; 85
    322e:	ff 4f       	sbci	r31, 0xFF	; 255
    3230:	80 e9       	ldi	r24, 0x90	; 144
    3232:	91 e0       	ldi	r25, 0x01	; 1
    3234:	91 83       	std	Z+1, r25	; 0x01
    3236:	80 83       	st	Z, r24
    3238:	fe 01       	movw	r30, r28
    323a:	e5 55       	subi	r30, 0x55	; 85
    323c:	ff 4f       	sbci	r31, 0xFF	; 255
    323e:	80 81       	ld	r24, Z
    3240:	91 81       	ldd	r25, Z+1	; 0x01
    3242:	01 97       	sbiw	r24, 0x01	; 1
    3244:	f1 f7       	brne	.-4      	; 0x3242 <main+0x1738>
    3246:	fe 01       	movw	r30, r28
    3248:	e5 55       	subi	r30, 0x55	; 85
    324a:	ff 4f       	sbci	r31, 0xFF	; 255
    324c:	91 83       	std	Z+1, r25	; 0x01
    324e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3250:	de 01       	movw	r26, r28
    3252:	a3 55       	subi	r26, 0x53	; 83
    3254:	bf 4f       	sbci	r27, 0xFF	; 255
    3256:	fe 01       	movw	r30, r28
    3258:	e3 55       	subi	r30, 0x53	; 83
    325a:	ff 4f       	sbci	r31, 0xFF	; 255
    325c:	80 81       	ld	r24, Z
    325e:	91 81       	ldd	r25, Z+1	; 0x01
    3260:	01 97       	sbiw	r24, 0x01	; 1
    3262:	11 96       	adiw	r26, 0x01	; 1
    3264:	9c 93       	st	X, r25
    3266:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3268:	fe 01       	movw	r30, r28
    326a:	e3 55       	subi	r30, 0x53	; 83
    326c:	ff 4f       	sbci	r31, 0xFF	; 255
    326e:	80 81       	ld	r24, Z
    3270:	91 81       	ldd	r25, Z+1	; 0x01
    3272:	00 97       	sbiw	r24, 0x00	; 0
    3274:	d1 f6       	brne	.-76     	; 0x322a <main+0x1720>
    3276:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    327a:	8e 01       	movw	r16, r28
    327c:	03 55       	subi	r16, 0x53	; 83
    327e:	1f 4f       	sbci	r17, 0xFF	; 255
    3280:	fe 01       	movw	r30, r28
    3282:	e1 55       	subi	r30, 0x51	; 81
    3284:	ff 4f       	sbci	r31, 0xFF	; 255
    3286:	60 81       	ld	r22, Z
    3288:	71 81       	ldd	r23, Z+1	; 0x01
    328a:	82 81       	ldd	r24, Z+2	; 0x02
    328c:	93 81       	ldd	r25, Z+3	; 0x03
    328e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3292:	dc 01       	movw	r26, r24
    3294:	cb 01       	movw	r24, r22
    3296:	f8 01       	movw	r30, r16
    3298:	91 83       	std	Z+1, r25	; 0x01
    329a:	80 83       	st	Z, r24
    329c:	de 01       	movw	r26, r28
    329e:	a7 55       	subi	r26, 0x57	; 87
    32a0:	bf 4f       	sbci	r27, 0xFF	; 255
    32a2:	fe 01       	movw	r30, r28
    32a4:	e3 55       	subi	r30, 0x53	; 83
    32a6:	ff 4f       	sbci	r31, 0xFF	; 255
    32a8:	80 81       	ld	r24, Z
    32aa:	91 81       	ldd	r25, Z+1	; 0x01
    32ac:	11 96       	adiw	r26, 0x01	; 1
    32ae:	9c 93       	st	X, r25
    32b0:	8e 93       	st	-X, r24
    32b2:	fe 01       	movw	r30, r28
    32b4:	e7 55       	subi	r30, 0x57	; 87
    32b6:	ff 4f       	sbci	r31, 0xFF	; 255
    32b8:	80 81       	ld	r24, Z
    32ba:	91 81       	ldd	r25, Z+1	; 0x01
    32bc:	01 97       	sbiw	r24, 0x01	; 1
    32be:	f1 f7       	brne	.-4      	; 0x32bc <main+0x17b2>
    32c0:	fe 01       	movw	r30, r28
    32c2:	e7 55       	subi	r30, 0x57	; 87
    32c4:	ff 4f       	sbci	r31, 0xFF	; 255
    32c6:	91 83       	std	Z+1, r25	; 0x01
    32c8:	80 83       	st	Z, r24
    32ca:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case THANK_YOU:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    32ce:	81 e0       	ldi	r24, 0x01	; 1
    32d0:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    32d4:	80 e0       	ldi	r24, 0x00	; 0
    32d6:	60 e0       	ldi	r22, 0x00	; 0
    32d8:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[19],0,9,0);
    32dc:	ce 01       	movw	r24, r28
    32de:	86 5d       	subi	r24, 0xD6	; 214
    32e0:	9e 4f       	sbci	r25, 0xFE	; 254
    32e2:	88 56       	subi	r24, 0x68	; 104
    32e4:	9f 4f       	sbci	r25, 0xFF	; 255
    32e6:	60 e0       	ldi	r22, 0x00	; 0
    32e8:	49 e0       	ldi	r20, 0x09	; 9
    32ea:	20 e0       	ldi	r18, 0x00	; 0
    32ec:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[20],1,8,0);
    32f0:	ce 01       	movw	r24, r28
    32f2:	86 5d       	subi	r24, 0xD6	; 214
    32f4:	9e 4f       	sbci	r25, 0xFE	; 254
    32f6:	80 56       	subi	r24, 0x60	; 96
    32f8:	9f 4f       	sbci	r25, 0xFF	; 255
    32fa:	61 e0       	ldi	r22, 0x01	; 1
    32fc:	48 e0       	ldi	r20, 0x08	; 8
    32fe:	20 e0       	ldi	r18, 0x00	; 0
    3300:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[5],2,7,0);
    3304:	ce 01       	movw	r24, r28
    3306:	86 5d       	subi	r24, 0xD6	; 214
    3308:	9e 4f       	sbci	r25, 0xFE	; 254
    330a:	88 96       	adiw	r24, 0x28	; 40
    330c:	62 e0       	ldi	r22, 0x02	; 2
    330e:	47 e0       	ldi	r20, 0x07	; 7
    3310:	20 e0       	ldi	r18, 0x00	; 0
    3312:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[7],3,6,0);
    3316:	ce 01       	movw	r24, r28
    3318:	86 5d       	subi	r24, 0xD6	; 214
    331a:	9e 4f       	sbci	r25, 0xFE	; 254
    331c:	c8 96       	adiw	r24, 0x38	; 56
    331e:	63 e0       	ldi	r22, 0x03	; 3
    3320:	46 e0       	ldi	r20, 0x06	; 6
    3322:	20 e0       	ldi	r18, 0x00	; 0
    3324:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    3328:	fe 01       	movw	r30, r28
    332a:	eb 55       	subi	r30, 0x5B	; 91
    332c:	ff 4f       	sbci	r31, 0xFF	; 255
    332e:	80 e0       	ldi	r24, 0x00	; 0
    3330:	90 e0       	ldi	r25, 0x00	; 0
    3332:	aa ef       	ldi	r26, 0xFA	; 250
    3334:	b4 e4       	ldi	r27, 0x44	; 68
    3336:	80 83       	st	Z, r24
    3338:	91 83       	std	Z+1, r25	; 0x01
    333a:	a2 83       	std	Z+2, r26	; 0x02
    333c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    333e:	8e 01       	movw	r16, r28
    3340:	0f 55       	subi	r16, 0x5F	; 95
    3342:	1f 4f       	sbci	r17, 0xFF	; 255
    3344:	fe 01       	movw	r30, r28
    3346:	eb 55       	subi	r30, 0x5B	; 91
    3348:	ff 4f       	sbci	r31, 0xFF	; 255
    334a:	60 81       	ld	r22, Z
    334c:	71 81       	ldd	r23, Z+1	; 0x01
    334e:	82 81       	ldd	r24, Z+2	; 0x02
    3350:	93 81       	ldd	r25, Z+3	; 0x03
    3352:	20 e0       	ldi	r18, 0x00	; 0
    3354:	30 e0       	ldi	r19, 0x00	; 0
    3356:	4a e7       	ldi	r20, 0x7A	; 122
    3358:	55 e4       	ldi	r21, 0x45	; 69
    335a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    335e:	dc 01       	movw	r26, r24
    3360:	cb 01       	movw	r24, r22
    3362:	f8 01       	movw	r30, r16
    3364:	80 83       	st	Z, r24
    3366:	91 83       	std	Z+1, r25	; 0x01
    3368:	a2 83       	std	Z+2, r26	; 0x02
    336a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    336c:	fe 01       	movw	r30, r28
    336e:	ef 55       	subi	r30, 0x5F	; 95
    3370:	ff 4f       	sbci	r31, 0xFF	; 255
    3372:	60 81       	ld	r22, Z
    3374:	71 81       	ldd	r23, Z+1	; 0x01
    3376:	82 81       	ldd	r24, Z+2	; 0x02
    3378:	93 81       	ldd	r25, Z+3	; 0x03
    337a:	20 e0       	ldi	r18, 0x00	; 0
    337c:	30 e0       	ldi	r19, 0x00	; 0
    337e:	40 e8       	ldi	r20, 0x80	; 128
    3380:	5f e3       	ldi	r21, 0x3F	; 63
    3382:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3386:	88 23       	and	r24, r24
    3388:	44 f4       	brge	.+16     	; 0x339a <main+0x1890>
		__ticks = 1;
    338a:	fe 01       	movw	r30, r28
    338c:	e1 56       	subi	r30, 0x61	; 97
    338e:	ff 4f       	sbci	r31, 0xFF	; 255
    3390:	81 e0       	ldi	r24, 0x01	; 1
    3392:	90 e0       	ldi	r25, 0x00	; 0
    3394:	91 83       	std	Z+1, r25	; 0x01
    3396:	80 83       	st	Z, r24
    3398:	65 c0       	rjmp	.+202    	; 0x3464 <main+0x195a>
	else if (__tmp > 65535)
    339a:	fe 01       	movw	r30, r28
    339c:	ef 55       	subi	r30, 0x5F	; 95
    339e:	ff 4f       	sbci	r31, 0xFF	; 255
    33a0:	60 81       	ld	r22, Z
    33a2:	71 81       	ldd	r23, Z+1	; 0x01
    33a4:	82 81       	ldd	r24, Z+2	; 0x02
    33a6:	93 81       	ldd	r25, Z+3	; 0x03
    33a8:	20 e0       	ldi	r18, 0x00	; 0
    33aa:	3f ef       	ldi	r19, 0xFF	; 255
    33ac:	4f e7       	ldi	r20, 0x7F	; 127
    33ae:	57 e4       	ldi	r21, 0x47	; 71
    33b0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    33b4:	18 16       	cp	r1, r24
    33b6:	0c f0       	brlt	.+2      	; 0x33ba <main+0x18b0>
    33b8:	44 c0       	rjmp	.+136    	; 0x3442 <main+0x1938>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33ba:	fe 01       	movw	r30, r28
    33bc:	eb 55       	subi	r30, 0x5B	; 91
    33be:	ff 4f       	sbci	r31, 0xFF	; 255
    33c0:	60 81       	ld	r22, Z
    33c2:	71 81       	ldd	r23, Z+1	; 0x01
    33c4:	82 81       	ldd	r24, Z+2	; 0x02
    33c6:	93 81       	ldd	r25, Z+3	; 0x03
    33c8:	20 e0       	ldi	r18, 0x00	; 0
    33ca:	30 e0       	ldi	r19, 0x00	; 0
    33cc:	40 e2       	ldi	r20, 0x20	; 32
    33ce:	51 e4       	ldi	r21, 0x41	; 65
    33d0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    33d4:	dc 01       	movw	r26, r24
    33d6:	cb 01       	movw	r24, r22
    33d8:	8e 01       	movw	r16, r28
    33da:	01 56       	subi	r16, 0x61	; 97
    33dc:	1f 4f       	sbci	r17, 0xFF	; 255
    33de:	bc 01       	movw	r22, r24
    33e0:	cd 01       	movw	r24, r26
    33e2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    33e6:	dc 01       	movw	r26, r24
    33e8:	cb 01       	movw	r24, r22
    33ea:	f8 01       	movw	r30, r16
    33ec:	91 83       	std	Z+1, r25	; 0x01
    33ee:	80 83       	st	Z, r24
    33f0:	1f c0       	rjmp	.+62     	; 0x3430 <main+0x1926>
    33f2:	fe 01       	movw	r30, r28
    33f4:	e3 56       	subi	r30, 0x63	; 99
    33f6:	ff 4f       	sbci	r31, 0xFF	; 255
    33f8:	80 e9       	ldi	r24, 0x90	; 144
    33fa:	91 e0       	ldi	r25, 0x01	; 1
    33fc:	91 83       	std	Z+1, r25	; 0x01
    33fe:	80 83       	st	Z, r24
    3400:	fe 01       	movw	r30, r28
    3402:	e3 56       	subi	r30, 0x63	; 99
    3404:	ff 4f       	sbci	r31, 0xFF	; 255
    3406:	80 81       	ld	r24, Z
    3408:	91 81       	ldd	r25, Z+1	; 0x01
    340a:	01 97       	sbiw	r24, 0x01	; 1
    340c:	f1 f7       	brne	.-4      	; 0x340a <main+0x1900>
    340e:	fe 01       	movw	r30, r28
    3410:	e3 56       	subi	r30, 0x63	; 99
    3412:	ff 4f       	sbci	r31, 0xFF	; 255
    3414:	91 83       	std	Z+1, r25	; 0x01
    3416:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3418:	de 01       	movw	r26, r28
    341a:	a1 56       	subi	r26, 0x61	; 97
    341c:	bf 4f       	sbci	r27, 0xFF	; 255
    341e:	fe 01       	movw	r30, r28
    3420:	e1 56       	subi	r30, 0x61	; 97
    3422:	ff 4f       	sbci	r31, 0xFF	; 255
    3424:	80 81       	ld	r24, Z
    3426:	91 81       	ldd	r25, Z+1	; 0x01
    3428:	01 97       	sbiw	r24, 0x01	; 1
    342a:	11 96       	adiw	r26, 0x01	; 1
    342c:	9c 93       	st	X, r25
    342e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3430:	fe 01       	movw	r30, r28
    3432:	e1 56       	subi	r30, 0x61	; 97
    3434:	ff 4f       	sbci	r31, 0xFF	; 255
    3436:	80 81       	ld	r24, Z
    3438:	91 81       	ldd	r25, Z+1	; 0x01
    343a:	00 97       	sbiw	r24, 0x00	; 0
    343c:	d1 f6       	brne	.-76     	; 0x33f2 <main+0x18e8>
    343e:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3442:	8e 01       	movw	r16, r28
    3444:	01 56       	subi	r16, 0x61	; 97
    3446:	1f 4f       	sbci	r17, 0xFF	; 255
    3448:	fe 01       	movw	r30, r28
    344a:	ef 55       	subi	r30, 0x5F	; 95
    344c:	ff 4f       	sbci	r31, 0xFF	; 255
    344e:	60 81       	ld	r22, Z
    3450:	71 81       	ldd	r23, Z+1	; 0x01
    3452:	82 81       	ldd	r24, Z+2	; 0x02
    3454:	93 81       	ldd	r25, Z+3	; 0x03
    3456:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    345a:	dc 01       	movw	r26, r24
    345c:	cb 01       	movw	r24, r22
    345e:	f8 01       	movw	r30, r16
    3460:	91 83       	std	Z+1, r25	; 0x01
    3462:	80 83       	st	Z, r24
    3464:	de 01       	movw	r26, r28
    3466:	a5 56       	subi	r26, 0x65	; 101
    3468:	bf 4f       	sbci	r27, 0xFF	; 255
    346a:	fe 01       	movw	r30, r28
    346c:	e1 56       	subi	r30, 0x61	; 97
    346e:	ff 4f       	sbci	r31, 0xFF	; 255
    3470:	80 81       	ld	r24, Z
    3472:	91 81       	ldd	r25, Z+1	; 0x01
    3474:	11 96       	adiw	r26, 0x01	; 1
    3476:	9c 93       	st	X, r25
    3478:	8e 93       	st	-X, r24
    347a:	fe 01       	movw	r30, r28
    347c:	e5 56       	subi	r30, 0x65	; 101
    347e:	ff 4f       	sbci	r31, 0xFF	; 255
    3480:	80 81       	ld	r24, Z
    3482:	91 81       	ldd	r25, Z+1	; 0x01
    3484:	01 97       	sbiw	r24, 0x01	; 1
    3486:	f1 f7       	brne	.-4      	; 0x3484 <main+0x197a>
    3488:	fe 01       	movw	r30, r28
    348a:	e5 56       	subi	r30, 0x65	; 101
    348c:	ff 4f       	sbci	r31, 0xFF	; 255
    348e:	91 83       	std	Z+1, r25	; 0x01
    3490:	80 83       	st	Z, r24
    3492:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			}
			case GREAT_WORK:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    3496:	81 e0       	ldi	r24, 0x01	; 1
    3498:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    349c:	80 e0       	ldi	r24, 0x00	; 0
    349e:	60 e0       	ldi	r22, 0x00	; 0
    34a0:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[2],0,9,0);
    34a4:	ce 01       	movw	r24, r28
    34a6:	86 5d       	subi	r24, 0xD6	; 214
    34a8:	9e 4f       	sbci	r25, 0xFE	; 254
    34aa:	40 96       	adiw	r24, 0x10	; 16
    34ac:	60 e0       	ldi	r22, 0x00	; 0
    34ae:	49 e0       	ldi	r20, 0x09	; 9
    34b0:	20 e0       	ldi	r18, 0x00	; 0
    34b2:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[9],1,8,0);
    34b6:	ce 01       	movw	r24, r28
    34b8:	86 5d       	subi	r24, 0xD6	; 214
    34ba:	9e 4f       	sbci	r25, 0xFE	; 254
    34bc:	88 5b       	subi	r24, 0xB8	; 184
    34be:	9f 4f       	sbci	r25, 0xFF	; 255
    34c0:	61 e0       	ldi	r22, 0x01	; 1
    34c2:	48 e0       	ldi	r20, 0x08	; 8
    34c4:	20 e0       	ldi	r18, 0x00	; 0
    34c6:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[7],2,7,0);
    34ca:	ce 01       	movw	r24, r28
    34cc:	86 5d       	subi	r24, 0xD6	; 214
    34ce:	9e 4f       	sbci	r25, 0xFE	; 254
    34d0:	c8 96       	adiw	r24, 0x38	; 56
    34d2:	62 e0       	ldi	r22, 0x02	; 2
    34d4:	47 e0       	ldi	r20, 0x07	; 7
    34d6:	20 e0       	ldi	r18, 0x00	; 0
    34d8:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[12],3,6,0);
    34dc:	ce 01       	movw	r24, r28
    34de:	86 5d       	subi	r24, 0xD6	; 214
    34e0:	9e 4f       	sbci	r25, 0xFE	; 254
    34e2:	80 5a       	subi	r24, 0xA0	; 160
    34e4:	9f 4f       	sbci	r25, 0xFF	; 255
    34e6:	63 e0       	ldi	r22, 0x03	; 3
    34e8:	46 e0       	ldi	r20, 0x06	; 6
    34ea:	20 e0       	ldi	r18, 0x00	; 0
    34ec:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    34f0:	fe 01       	movw	r30, r28
    34f2:	e9 56       	subi	r30, 0x69	; 105
    34f4:	ff 4f       	sbci	r31, 0xFF	; 255
    34f6:	80 e0       	ldi	r24, 0x00	; 0
    34f8:	90 e0       	ldi	r25, 0x00	; 0
    34fa:	aa ef       	ldi	r26, 0xFA	; 250
    34fc:	b4 e4       	ldi	r27, 0x44	; 68
    34fe:	80 83       	st	Z, r24
    3500:	91 83       	std	Z+1, r25	; 0x01
    3502:	a2 83       	std	Z+2, r26	; 0x02
    3504:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3506:	8e 01       	movw	r16, r28
    3508:	0d 56       	subi	r16, 0x6D	; 109
    350a:	1f 4f       	sbci	r17, 0xFF	; 255
    350c:	fe 01       	movw	r30, r28
    350e:	e9 56       	subi	r30, 0x69	; 105
    3510:	ff 4f       	sbci	r31, 0xFF	; 255
    3512:	60 81       	ld	r22, Z
    3514:	71 81       	ldd	r23, Z+1	; 0x01
    3516:	82 81       	ldd	r24, Z+2	; 0x02
    3518:	93 81       	ldd	r25, Z+3	; 0x03
    351a:	20 e0       	ldi	r18, 0x00	; 0
    351c:	30 e0       	ldi	r19, 0x00	; 0
    351e:	4a e7       	ldi	r20, 0x7A	; 122
    3520:	55 e4       	ldi	r21, 0x45	; 69
    3522:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3526:	dc 01       	movw	r26, r24
    3528:	cb 01       	movw	r24, r22
    352a:	f8 01       	movw	r30, r16
    352c:	80 83       	st	Z, r24
    352e:	91 83       	std	Z+1, r25	; 0x01
    3530:	a2 83       	std	Z+2, r26	; 0x02
    3532:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3534:	fe 01       	movw	r30, r28
    3536:	ed 56       	subi	r30, 0x6D	; 109
    3538:	ff 4f       	sbci	r31, 0xFF	; 255
    353a:	60 81       	ld	r22, Z
    353c:	71 81       	ldd	r23, Z+1	; 0x01
    353e:	82 81       	ldd	r24, Z+2	; 0x02
    3540:	93 81       	ldd	r25, Z+3	; 0x03
    3542:	20 e0       	ldi	r18, 0x00	; 0
    3544:	30 e0       	ldi	r19, 0x00	; 0
    3546:	40 e8       	ldi	r20, 0x80	; 128
    3548:	5f e3       	ldi	r21, 0x3F	; 63
    354a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    354e:	88 23       	and	r24, r24
    3550:	44 f4       	brge	.+16     	; 0x3562 <main+0x1a58>
		__ticks = 1;
    3552:	fe 01       	movw	r30, r28
    3554:	ef 56       	subi	r30, 0x6F	; 111
    3556:	ff 4f       	sbci	r31, 0xFF	; 255
    3558:	81 e0       	ldi	r24, 0x01	; 1
    355a:	90 e0       	ldi	r25, 0x00	; 0
    355c:	91 83       	std	Z+1, r25	; 0x01
    355e:	80 83       	st	Z, r24
    3560:	65 c0       	rjmp	.+202    	; 0x362c <main+0x1b22>
	else if (__tmp > 65535)
    3562:	fe 01       	movw	r30, r28
    3564:	ed 56       	subi	r30, 0x6D	; 109
    3566:	ff 4f       	sbci	r31, 0xFF	; 255
    3568:	60 81       	ld	r22, Z
    356a:	71 81       	ldd	r23, Z+1	; 0x01
    356c:	82 81       	ldd	r24, Z+2	; 0x02
    356e:	93 81       	ldd	r25, Z+3	; 0x03
    3570:	20 e0       	ldi	r18, 0x00	; 0
    3572:	3f ef       	ldi	r19, 0xFF	; 255
    3574:	4f e7       	ldi	r20, 0x7F	; 127
    3576:	57 e4       	ldi	r21, 0x47	; 71
    3578:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    357c:	18 16       	cp	r1, r24
    357e:	0c f0       	brlt	.+2      	; 0x3582 <main+0x1a78>
    3580:	44 c0       	rjmp	.+136    	; 0x360a <main+0x1b00>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3582:	fe 01       	movw	r30, r28
    3584:	e9 56       	subi	r30, 0x69	; 105
    3586:	ff 4f       	sbci	r31, 0xFF	; 255
    3588:	60 81       	ld	r22, Z
    358a:	71 81       	ldd	r23, Z+1	; 0x01
    358c:	82 81       	ldd	r24, Z+2	; 0x02
    358e:	93 81       	ldd	r25, Z+3	; 0x03
    3590:	20 e0       	ldi	r18, 0x00	; 0
    3592:	30 e0       	ldi	r19, 0x00	; 0
    3594:	40 e2       	ldi	r20, 0x20	; 32
    3596:	51 e4       	ldi	r21, 0x41	; 65
    3598:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    359c:	dc 01       	movw	r26, r24
    359e:	cb 01       	movw	r24, r22
    35a0:	8e 01       	movw	r16, r28
    35a2:	0f 56       	subi	r16, 0x6F	; 111
    35a4:	1f 4f       	sbci	r17, 0xFF	; 255
    35a6:	bc 01       	movw	r22, r24
    35a8:	cd 01       	movw	r24, r26
    35aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    35ae:	dc 01       	movw	r26, r24
    35b0:	cb 01       	movw	r24, r22
    35b2:	f8 01       	movw	r30, r16
    35b4:	91 83       	std	Z+1, r25	; 0x01
    35b6:	80 83       	st	Z, r24
    35b8:	1f c0       	rjmp	.+62     	; 0x35f8 <main+0x1aee>
    35ba:	fe 01       	movw	r30, r28
    35bc:	e1 57       	subi	r30, 0x71	; 113
    35be:	ff 4f       	sbci	r31, 0xFF	; 255
    35c0:	80 e9       	ldi	r24, 0x90	; 144
    35c2:	91 e0       	ldi	r25, 0x01	; 1
    35c4:	91 83       	std	Z+1, r25	; 0x01
    35c6:	80 83       	st	Z, r24
    35c8:	fe 01       	movw	r30, r28
    35ca:	e1 57       	subi	r30, 0x71	; 113
    35cc:	ff 4f       	sbci	r31, 0xFF	; 255
    35ce:	80 81       	ld	r24, Z
    35d0:	91 81       	ldd	r25, Z+1	; 0x01
    35d2:	01 97       	sbiw	r24, 0x01	; 1
    35d4:	f1 f7       	brne	.-4      	; 0x35d2 <main+0x1ac8>
    35d6:	fe 01       	movw	r30, r28
    35d8:	e1 57       	subi	r30, 0x71	; 113
    35da:	ff 4f       	sbci	r31, 0xFF	; 255
    35dc:	91 83       	std	Z+1, r25	; 0x01
    35de:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35e0:	de 01       	movw	r26, r28
    35e2:	af 56       	subi	r26, 0x6F	; 111
    35e4:	bf 4f       	sbci	r27, 0xFF	; 255
    35e6:	fe 01       	movw	r30, r28
    35e8:	ef 56       	subi	r30, 0x6F	; 111
    35ea:	ff 4f       	sbci	r31, 0xFF	; 255
    35ec:	80 81       	ld	r24, Z
    35ee:	91 81       	ldd	r25, Z+1	; 0x01
    35f0:	01 97       	sbiw	r24, 0x01	; 1
    35f2:	11 96       	adiw	r26, 0x01	; 1
    35f4:	9c 93       	st	X, r25
    35f6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35f8:	fe 01       	movw	r30, r28
    35fa:	ef 56       	subi	r30, 0x6F	; 111
    35fc:	ff 4f       	sbci	r31, 0xFF	; 255
    35fe:	80 81       	ld	r24, Z
    3600:	91 81       	ldd	r25, Z+1	; 0x01
    3602:	00 97       	sbiw	r24, 0x00	; 0
    3604:	d1 f6       	brne	.-76     	; 0x35ba <main+0x1ab0>
    3606:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    360a:	8e 01       	movw	r16, r28
    360c:	0f 56       	subi	r16, 0x6F	; 111
    360e:	1f 4f       	sbci	r17, 0xFF	; 255
    3610:	fe 01       	movw	r30, r28
    3612:	ed 56       	subi	r30, 0x6D	; 109
    3614:	ff 4f       	sbci	r31, 0xFF	; 255
    3616:	60 81       	ld	r22, Z
    3618:	71 81       	ldd	r23, Z+1	; 0x01
    361a:	82 81       	ldd	r24, Z+2	; 0x02
    361c:	93 81       	ldd	r25, Z+3	; 0x03
    361e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3622:	dc 01       	movw	r26, r24
    3624:	cb 01       	movw	r24, r22
    3626:	f8 01       	movw	r30, r16
    3628:	91 83       	std	Z+1, r25	; 0x01
    362a:	80 83       	st	Z, r24
    362c:	de 01       	movw	r26, r28
    362e:	a3 57       	subi	r26, 0x73	; 115
    3630:	bf 4f       	sbci	r27, 0xFF	; 255
    3632:	fe 01       	movw	r30, r28
    3634:	ef 56       	subi	r30, 0x6F	; 111
    3636:	ff 4f       	sbci	r31, 0xFF	; 255
    3638:	80 81       	ld	r24, Z
    363a:	91 81       	ldd	r25, Z+1	; 0x01
    363c:	11 96       	adiw	r26, 0x01	; 1
    363e:	9c 93       	st	X, r25
    3640:	8e 93       	st	-X, r24
    3642:	fe 01       	movw	r30, r28
    3644:	e3 57       	subi	r30, 0x73	; 115
    3646:	ff 4f       	sbci	r31, 0xFF	; 255
    3648:	80 81       	ld	r24, Z
    364a:	91 81       	ldd	r25, Z+1	; 0x01
    364c:	01 97       	sbiw	r24, 0x01	; 1
    364e:	f1 f7       	brne	.-4      	; 0x364c <main+0x1b42>
    3650:	fe 01       	movw	r30, r28
    3652:	e3 57       	subi	r30, 0x73	; 115
    3654:	ff 4f       	sbci	r31, 0xFF	; 255
    3656:	91 83       	std	Z+1, r25	; 0x01
    3658:	80 83       	st	Z, r24
    365a:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case YOUR_OPINION:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    365e:	81 e0       	ldi	r24, 0x01	; 1
    3660:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    3664:	80 e0       	ldi	r24, 0x00	; 0
    3666:	60 e0       	ldi	r22, 0x00	; 0
    3668:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[9],7,11,0);
    366c:	ce 01       	movw	r24, r28
    366e:	86 5d       	subi	r24, 0xD6	; 214
    3670:	9e 4f       	sbci	r25, 0xFE	; 254
    3672:	88 5b       	subi	r24, 0xB8	; 184
    3674:	9f 4f       	sbci	r25, 0xFF	; 255
    3676:	67 e0       	ldi	r22, 0x07	; 7
    3678:	4b e0       	ldi	r20, 0x0B	; 11
    367a:	20 e0       	ldi	r18, 0x00	; 0
    367c:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[7],0,10,0);
    3680:	ce 01       	movw	r24, r28
    3682:	86 5d       	subi	r24, 0xD6	; 214
    3684:	9e 4f       	sbci	r25, 0xFE	; 254
    3686:	c8 96       	adiw	r24, 0x38	; 56
    3688:	60 e0       	ldi	r22, 0x00	; 0
    368a:	4a e0       	ldi	r20, 0x0A	; 10
    368c:	20 e0       	ldi	r18, 0x00	; 0
    368e:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>

			LCD_voidSendSpecialChar(alpha[5],2,8,0);
    3692:	ce 01       	movw	r24, r28
    3694:	86 5d       	subi	r24, 0xD6	; 214
    3696:	9e 4f       	sbci	r25, 0xFE	; 254
    3698:	88 96       	adiw	r24, 0x28	; 40
    369a:	62 e0       	ldi	r22, 0x02	; 2
    369c:	48 e0       	ldi	r20, 0x08	; 8
    369e:	20 e0       	ldi	r18, 0x00	; 0
    36a0:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[0],3,7,0);
    36a4:	ce 01       	movw	r24, r28
    36a6:	86 5d       	subi	r24, 0xD6	; 214
    36a8:	9e 4f       	sbci	r25, 0xFE	; 254
    36aa:	63 e0       	ldi	r22, 0x03	; 3
    36ac:	47 e0       	ldi	r20, 0x07	; 7
    36ae:	20 e0       	ldi	r18, 0x00	; 0
    36b0:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[8],4,6,0);
    36b4:	ce 01       	movw	r24, r28
    36b6:	86 5d       	subi	r24, 0xD6	; 214
    36b8:	9e 4f       	sbci	r25, 0xFE	; 254
    36ba:	80 5c       	subi	r24, 0xC0	; 192
    36bc:	9f 4f       	sbci	r25, 0xFF	; 255
    36be:	64 e0       	ldi	r22, 0x04	; 4
    36c0:	46 e0       	ldi	r20, 0x06	; 6
    36c2:	20 e0       	ldi	r18, 0x00	; 0
    36c4:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[16],5,5,0);
    36c8:	ce 01       	movw	r24, r28
    36ca:	86 5d       	subi	r24, 0xD6	; 214
    36cc:	9e 4f       	sbci	r25, 0xFE	; 254
    36ce:	80 58       	subi	r24, 0x80	; 128
    36d0:	9f 4f       	sbci	r25, 0xFF	; 255
    36d2:	65 e0       	ldi	r22, 0x05	; 5
    36d4:	45 e0       	ldi	r20, 0x05	; 5
    36d6:	20 e0       	ldi	r18, 0x00	; 0
    36d8:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[21],6,4,0);
    36dc:	ce 01       	movw	r24, r28
    36de:	86 5d       	subi	r24, 0xD6	; 214
    36e0:	9e 4f       	sbci	r25, 0xFE	; 254
    36e2:	88 55       	subi	r24, 0x58	; 88
    36e4:	9f 4f       	sbci	r25, 0xFF	; 255
    36e6:	66 e0       	ldi	r22, 0x06	; 6
    36e8:	44 e0       	ldi	r20, 0x04	; 4
    36ea:	20 e0       	ldi	r18, 0x00	; 0
    36ec:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    36f0:	fe 01       	movw	r30, r28
    36f2:	e7 57       	subi	r30, 0x77	; 119
    36f4:	ff 4f       	sbci	r31, 0xFF	; 255
    36f6:	80 e0       	ldi	r24, 0x00	; 0
    36f8:	90 e0       	ldi	r25, 0x00	; 0
    36fa:	aa ef       	ldi	r26, 0xFA	; 250
    36fc:	b4 e4       	ldi	r27, 0x44	; 68
    36fe:	80 83       	st	Z, r24
    3700:	91 83       	std	Z+1, r25	; 0x01
    3702:	a2 83       	std	Z+2, r26	; 0x02
    3704:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3706:	8e 01       	movw	r16, r28
    3708:	0b 57       	subi	r16, 0x7B	; 123
    370a:	1f 4f       	sbci	r17, 0xFF	; 255
    370c:	fe 01       	movw	r30, r28
    370e:	e7 57       	subi	r30, 0x77	; 119
    3710:	ff 4f       	sbci	r31, 0xFF	; 255
    3712:	60 81       	ld	r22, Z
    3714:	71 81       	ldd	r23, Z+1	; 0x01
    3716:	82 81       	ldd	r24, Z+2	; 0x02
    3718:	93 81       	ldd	r25, Z+3	; 0x03
    371a:	20 e0       	ldi	r18, 0x00	; 0
    371c:	30 e0       	ldi	r19, 0x00	; 0
    371e:	4a e7       	ldi	r20, 0x7A	; 122
    3720:	55 e4       	ldi	r21, 0x45	; 69
    3722:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3726:	dc 01       	movw	r26, r24
    3728:	cb 01       	movw	r24, r22
    372a:	f8 01       	movw	r30, r16
    372c:	80 83       	st	Z, r24
    372e:	91 83       	std	Z+1, r25	; 0x01
    3730:	a2 83       	std	Z+2, r26	; 0x02
    3732:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3734:	fe 01       	movw	r30, r28
    3736:	eb 57       	subi	r30, 0x7B	; 123
    3738:	ff 4f       	sbci	r31, 0xFF	; 255
    373a:	60 81       	ld	r22, Z
    373c:	71 81       	ldd	r23, Z+1	; 0x01
    373e:	82 81       	ldd	r24, Z+2	; 0x02
    3740:	93 81       	ldd	r25, Z+3	; 0x03
    3742:	20 e0       	ldi	r18, 0x00	; 0
    3744:	30 e0       	ldi	r19, 0x00	; 0
    3746:	40 e8       	ldi	r20, 0x80	; 128
    3748:	5f e3       	ldi	r21, 0x3F	; 63
    374a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    374e:	88 23       	and	r24, r24
    3750:	44 f4       	brge	.+16     	; 0x3762 <main+0x1c58>
		__ticks = 1;
    3752:	fe 01       	movw	r30, r28
    3754:	ed 57       	subi	r30, 0x7D	; 125
    3756:	ff 4f       	sbci	r31, 0xFF	; 255
    3758:	81 e0       	ldi	r24, 0x01	; 1
    375a:	90 e0       	ldi	r25, 0x00	; 0
    375c:	91 83       	std	Z+1, r25	; 0x01
    375e:	80 83       	st	Z, r24
    3760:	65 c0       	rjmp	.+202    	; 0x382c <main+0x1d22>
	else if (__tmp > 65535)
    3762:	fe 01       	movw	r30, r28
    3764:	eb 57       	subi	r30, 0x7B	; 123
    3766:	ff 4f       	sbci	r31, 0xFF	; 255
    3768:	60 81       	ld	r22, Z
    376a:	71 81       	ldd	r23, Z+1	; 0x01
    376c:	82 81       	ldd	r24, Z+2	; 0x02
    376e:	93 81       	ldd	r25, Z+3	; 0x03
    3770:	20 e0       	ldi	r18, 0x00	; 0
    3772:	3f ef       	ldi	r19, 0xFF	; 255
    3774:	4f e7       	ldi	r20, 0x7F	; 127
    3776:	57 e4       	ldi	r21, 0x47	; 71
    3778:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    377c:	18 16       	cp	r1, r24
    377e:	0c f0       	brlt	.+2      	; 0x3782 <main+0x1c78>
    3780:	44 c0       	rjmp	.+136    	; 0x380a <main+0x1d00>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3782:	fe 01       	movw	r30, r28
    3784:	e7 57       	subi	r30, 0x77	; 119
    3786:	ff 4f       	sbci	r31, 0xFF	; 255
    3788:	60 81       	ld	r22, Z
    378a:	71 81       	ldd	r23, Z+1	; 0x01
    378c:	82 81       	ldd	r24, Z+2	; 0x02
    378e:	93 81       	ldd	r25, Z+3	; 0x03
    3790:	20 e0       	ldi	r18, 0x00	; 0
    3792:	30 e0       	ldi	r19, 0x00	; 0
    3794:	40 e2       	ldi	r20, 0x20	; 32
    3796:	51 e4       	ldi	r21, 0x41	; 65
    3798:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    379c:	dc 01       	movw	r26, r24
    379e:	cb 01       	movw	r24, r22
    37a0:	8e 01       	movw	r16, r28
    37a2:	0d 57       	subi	r16, 0x7D	; 125
    37a4:	1f 4f       	sbci	r17, 0xFF	; 255
    37a6:	bc 01       	movw	r22, r24
    37a8:	cd 01       	movw	r24, r26
    37aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    37ae:	dc 01       	movw	r26, r24
    37b0:	cb 01       	movw	r24, r22
    37b2:	f8 01       	movw	r30, r16
    37b4:	91 83       	std	Z+1, r25	; 0x01
    37b6:	80 83       	st	Z, r24
    37b8:	1f c0       	rjmp	.+62     	; 0x37f8 <main+0x1cee>
    37ba:	fe 01       	movw	r30, r28
    37bc:	ef 57       	subi	r30, 0x7F	; 127
    37be:	ff 4f       	sbci	r31, 0xFF	; 255
    37c0:	80 e9       	ldi	r24, 0x90	; 144
    37c2:	91 e0       	ldi	r25, 0x01	; 1
    37c4:	91 83       	std	Z+1, r25	; 0x01
    37c6:	80 83       	st	Z, r24
    37c8:	fe 01       	movw	r30, r28
    37ca:	ef 57       	subi	r30, 0x7F	; 127
    37cc:	ff 4f       	sbci	r31, 0xFF	; 255
    37ce:	80 81       	ld	r24, Z
    37d0:	91 81       	ldd	r25, Z+1	; 0x01
    37d2:	01 97       	sbiw	r24, 0x01	; 1
    37d4:	f1 f7       	brne	.-4      	; 0x37d2 <main+0x1cc8>
    37d6:	fe 01       	movw	r30, r28
    37d8:	ef 57       	subi	r30, 0x7F	; 127
    37da:	ff 4f       	sbci	r31, 0xFF	; 255
    37dc:	91 83       	std	Z+1, r25	; 0x01
    37de:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37e0:	de 01       	movw	r26, r28
    37e2:	ad 57       	subi	r26, 0x7D	; 125
    37e4:	bf 4f       	sbci	r27, 0xFF	; 255
    37e6:	fe 01       	movw	r30, r28
    37e8:	ed 57       	subi	r30, 0x7D	; 125
    37ea:	ff 4f       	sbci	r31, 0xFF	; 255
    37ec:	80 81       	ld	r24, Z
    37ee:	91 81       	ldd	r25, Z+1	; 0x01
    37f0:	01 97       	sbiw	r24, 0x01	; 1
    37f2:	11 96       	adiw	r26, 0x01	; 1
    37f4:	9c 93       	st	X, r25
    37f6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37f8:	fe 01       	movw	r30, r28
    37fa:	ed 57       	subi	r30, 0x7D	; 125
    37fc:	ff 4f       	sbci	r31, 0xFF	; 255
    37fe:	80 81       	ld	r24, Z
    3800:	91 81       	ldd	r25, Z+1	; 0x01
    3802:	00 97       	sbiw	r24, 0x00	; 0
    3804:	d1 f6       	brne	.-76     	; 0x37ba <main+0x1cb0>
    3806:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    380a:	8e 01       	movw	r16, r28
    380c:	0d 57       	subi	r16, 0x7D	; 125
    380e:	1f 4f       	sbci	r17, 0xFF	; 255
    3810:	fe 01       	movw	r30, r28
    3812:	eb 57       	subi	r30, 0x7B	; 123
    3814:	ff 4f       	sbci	r31, 0xFF	; 255
    3816:	60 81       	ld	r22, Z
    3818:	71 81       	ldd	r23, Z+1	; 0x01
    381a:	82 81       	ldd	r24, Z+2	; 0x02
    381c:	93 81       	ldd	r25, Z+3	; 0x03
    381e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3822:	dc 01       	movw	r26, r24
    3824:	cb 01       	movw	r24, r22
    3826:	f8 01       	movw	r30, r16
    3828:	91 83       	std	Z+1, r25	; 0x01
    382a:	80 83       	st	Z, r24
    382c:	de 01       	movw	r26, r28
    382e:	a1 58       	subi	r26, 0x81	; 129
    3830:	bf 4f       	sbci	r27, 0xFF	; 255
    3832:	fe 01       	movw	r30, r28
    3834:	ed 57       	subi	r30, 0x7D	; 125
    3836:	ff 4f       	sbci	r31, 0xFF	; 255
    3838:	80 81       	ld	r24, Z
    383a:	91 81       	ldd	r25, Z+1	; 0x01
    383c:	11 96       	adiw	r26, 0x01	; 1
    383e:	9c 93       	st	X, r25
    3840:	8e 93       	st	-X, r24
    3842:	fe 01       	movw	r30, r28
    3844:	e1 58       	subi	r30, 0x81	; 129
    3846:	ff 4f       	sbci	r31, 0xFF	; 255
    3848:	80 81       	ld	r24, Z
    384a:	91 81       	ldd	r25, Z+1	; 0x01
    384c:	01 97       	sbiw	r24, 0x01	; 1
    384e:	f1 f7       	brne	.-4      	; 0x384c <main+0x1d42>
    3850:	fe 01       	movw	r30, r28
    3852:	e1 58       	subi	r30, 0x81	; 129
    3854:	ff 4f       	sbci	r31, 0xFF	; 255
    3856:	91 83       	std	Z+1, r25	; 0x01
    3858:	80 83       	st	Z, r24
    385a:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case PROMISE:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    385e:	81 e0       	ldi	r24, 0x01	; 1
    3860:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    3864:	80 e0       	ldi	r24, 0x00	; 0
    3866:	60 e0       	ldi	r22, 0x00	; 0
    3868:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[22],0,8,0);
    386c:	ce 01       	movw	r24, r28
    386e:	86 5d       	subi	r24, 0xD6	; 214
    3870:	9e 4f       	sbci	r25, 0xFE	; 254
    3872:	80 55       	subi	r24, 0x50	; 80
    3874:	9f 4f       	sbci	r25, 0xFF	; 255
    3876:	60 e0       	ldi	r22, 0x00	; 0
    3878:	48 e0       	ldi	r20, 0x08	; 8
    387a:	20 e0       	ldi	r18, 0x00	; 0
    387c:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[10],1,7,0);
    3880:	ce 01       	movw	r24, r28
    3882:	86 5d       	subi	r24, 0xD6	; 214
    3884:	9e 4f       	sbci	r25, 0xFE	; 254
    3886:	80 5b       	subi	r24, 0xB0	; 176
    3888:	9f 4f       	sbci	r25, 0xFF	; 255
    388a:	61 e0       	ldi	r22, 0x01	; 1
    388c:	47 e0       	ldi	r20, 0x07	; 7
    388e:	20 e0       	ldi	r18, 0x00	; 0
    3890:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[11],2,6,0);
    3894:	ce 01       	movw	r24, r28
    3896:	86 5d       	subi	r24, 0xD6	; 214
    3898:	9e 4f       	sbci	r25, 0xFE	; 254
    389a:	88 5a       	subi	r24, 0xA8	; 168
    389c:	9f 4f       	sbci	r25, 0xFF	; 255
    389e:	62 e0       	ldi	r22, 0x02	; 2
    38a0:	46 e0       	ldi	r20, 0x06	; 6
    38a2:	20 e0       	ldi	r18, 0x00	; 0
    38a4:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    38a8:	fe 01       	movw	r30, r28
    38aa:	e5 58       	subi	r30, 0x85	; 133
    38ac:	ff 4f       	sbci	r31, 0xFF	; 255
    38ae:	80 e0       	ldi	r24, 0x00	; 0
    38b0:	90 e0       	ldi	r25, 0x00	; 0
    38b2:	aa ef       	ldi	r26, 0xFA	; 250
    38b4:	b4 e4       	ldi	r27, 0x44	; 68
    38b6:	80 83       	st	Z, r24
    38b8:	91 83       	std	Z+1, r25	; 0x01
    38ba:	a2 83       	std	Z+2, r26	; 0x02
    38bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38be:	8e 01       	movw	r16, r28
    38c0:	09 58       	subi	r16, 0x89	; 137
    38c2:	1f 4f       	sbci	r17, 0xFF	; 255
    38c4:	fe 01       	movw	r30, r28
    38c6:	e5 58       	subi	r30, 0x85	; 133
    38c8:	ff 4f       	sbci	r31, 0xFF	; 255
    38ca:	60 81       	ld	r22, Z
    38cc:	71 81       	ldd	r23, Z+1	; 0x01
    38ce:	82 81       	ldd	r24, Z+2	; 0x02
    38d0:	93 81       	ldd	r25, Z+3	; 0x03
    38d2:	20 e0       	ldi	r18, 0x00	; 0
    38d4:	30 e0       	ldi	r19, 0x00	; 0
    38d6:	4a e7       	ldi	r20, 0x7A	; 122
    38d8:	55 e4       	ldi	r21, 0x45	; 69
    38da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    38de:	dc 01       	movw	r26, r24
    38e0:	cb 01       	movw	r24, r22
    38e2:	f8 01       	movw	r30, r16
    38e4:	80 83       	st	Z, r24
    38e6:	91 83       	std	Z+1, r25	; 0x01
    38e8:	a2 83       	std	Z+2, r26	; 0x02
    38ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    38ec:	fe 01       	movw	r30, r28
    38ee:	e9 58       	subi	r30, 0x89	; 137
    38f0:	ff 4f       	sbci	r31, 0xFF	; 255
    38f2:	60 81       	ld	r22, Z
    38f4:	71 81       	ldd	r23, Z+1	; 0x01
    38f6:	82 81       	ldd	r24, Z+2	; 0x02
    38f8:	93 81       	ldd	r25, Z+3	; 0x03
    38fa:	20 e0       	ldi	r18, 0x00	; 0
    38fc:	30 e0       	ldi	r19, 0x00	; 0
    38fe:	40 e8       	ldi	r20, 0x80	; 128
    3900:	5f e3       	ldi	r21, 0x3F	; 63
    3902:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3906:	88 23       	and	r24, r24
    3908:	44 f4       	brge	.+16     	; 0x391a <main+0x1e10>
		__ticks = 1;
    390a:	fe 01       	movw	r30, r28
    390c:	eb 58       	subi	r30, 0x8B	; 139
    390e:	ff 4f       	sbci	r31, 0xFF	; 255
    3910:	81 e0       	ldi	r24, 0x01	; 1
    3912:	90 e0       	ldi	r25, 0x00	; 0
    3914:	91 83       	std	Z+1, r25	; 0x01
    3916:	80 83       	st	Z, r24
    3918:	65 c0       	rjmp	.+202    	; 0x39e4 <main+0x1eda>
	else if (__tmp > 65535)
    391a:	fe 01       	movw	r30, r28
    391c:	e9 58       	subi	r30, 0x89	; 137
    391e:	ff 4f       	sbci	r31, 0xFF	; 255
    3920:	60 81       	ld	r22, Z
    3922:	71 81       	ldd	r23, Z+1	; 0x01
    3924:	82 81       	ldd	r24, Z+2	; 0x02
    3926:	93 81       	ldd	r25, Z+3	; 0x03
    3928:	20 e0       	ldi	r18, 0x00	; 0
    392a:	3f ef       	ldi	r19, 0xFF	; 255
    392c:	4f e7       	ldi	r20, 0x7F	; 127
    392e:	57 e4       	ldi	r21, 0x47	; 71
    3930:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3934:	18 16       	cp	r1, r24
    3936:	0c f0       	brlt	.+2      	; 0x393a <main+0x1e30>
    3938:	44 c0       	rjmp	.+136    	; 0x39c2 <main+0x1eb8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    393a:	fe 01       	movw	r30, r28
    393c:	e5 58       	subi	r30, 0x85	; 133
    393e:	ff 4f       	sbci	r31, 0xFF	; 255
    3940:	60 81       	ld	r22, Z
    3942:	71 81       	ldd	r23, Z+1	; 0x01
    3944:	82 81       	ldd	r24, Z+2	; 0x02
    3946:	93 81       	ldd	r25, Z+3	; 0x03
    3948:	20 e0       	ldi	r18, 0x00	; 0
    394a:	30 e0       	ldi	r19, 0x00	; 0
    394c:	40 e2       	ldi	r20, 0x20	; 32
    394e:	51 e4       	ldi	r21, 0x41	; 65
    3950:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3954:	dc 01       	movw	r26, r24
    3956:	cb 01       	movw	r24, r22
    3958:	8e 01       	movw	r16, r28
    395a:	0b 58       	subi	r16, 0x8B	; 139
    395c:	1f 4f       	sbci	r17, 0xFF	; 255
    395e:	bc 01       	movw	r22, r24
    3960:	cd 01       	movw	r24, r26
    3962:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3966:	dc 01       	movw	r26, r24
    3968:	cb 01       	movw	r24, r22
    396a:	f8 01       	movw	r30, r16
    396c:	91 83       	std	Z+1, r25	; 0x01
    396e:	80 83       	st	Z, r24
    3970:	1f c0       	rjmp	.+62     	; 0x39b0 <main+0x1ea6>
    3972:	fe 01       	movw	r30, r28
    3974:	ed 58       	subi	r30, 0x8D	; 141
    3976:	ff 4f       	sbci	r31, 0xFF	; 255
    3978:	80 e9       	ldi	r24, 0x90	; 144
    397a:	91 e0       	ldi	r25, 0x01	; 1
    397c:	91 83       	std	Z+1, r25	; 0x01
    397e:	80 83       	st	Z, r24
    3980:	fe 01       	movw	r30, r28
    3982:	ed 58       	subi	r30, 0x8D	; 141
    3984:	ff 4f       	sbci	r31, 0xFF	; 255
    3986:	80 81       	ld	r24, Z
    3988:	91 81       	ldd	r25, Z+1	; 0x01
    398a:	01 97       	sbiw	r24, 0x01	; 1
    398c:	f1 f7       	brne	.-4      	; 0x398a <main+0x1e80>
    398e:	fe 01       	movw	r30, r28
    3990:	ed 58       	subi	r30, 0x8D	; 141
    3992:	ff 4f       	sbci	r31, 0xFF	; 255
    3994:	91 83       	std	Z+1, r25	; 0x01
    3996:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3998:	de 01       	movw	r26, r28
    399a:	ab 58       	subi	r26, 0x8B	; 139
    399c:	bf 4f       	sbci	r27, 0xFF	; 255
    399e:	fe 01       	movw	r30, r28
    39a0:	eb 58       	subi	r30, 0x8B	; 139
    39a2:	ff 4f       	sbci	r31, 0xFF	; 255
    39a4:	80 81       	ld	r24, Z
    39a6:	91 81       	ldd	r25, Z+1	; 0x01
    39a8:	01 97       	sbiw	r24, 0x01	; 1
    39aa:	11 96       	adiw	r26, 0x01	; 1
    39ac:	9c 93       	st	X, r25
    39ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39b0:	fe 01       	movw	r30, r28
    39b2:	eb 58       	subi	r30, 0x8B	; 139
    39b4:	ff 4f       	sbci	r31, 0xFF	; 255
    39b6:	80 81       	ld	r24, Z
    39b8:	91 81       	ldd	r25, Z+1	; 0x01
    39ba:	00 97       	sbiw	r24, 0x00	; 0
    39bc:	d1 f6       	brne	.-76     	; 0x3972 <main+0x1e68>
    39be:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39c2:	8e 01       	movw	r16, r28
    39c4:	0b 58       	subi	r16, 0x8B	; 139
    39c6:	1f 4f       	sbci	r17, 0xFF	; 255
    39c8:	fe 01       	movw	r30, r28
    39ca:	e9 58       	subi	r30, 0x89	; 137
    39cc:	ff 4f       	sbci	r31, 0xFF	; 255
    39ce:	60 81       	ld	r22, Z
    39d0:	71 81       	ldd	r23, Z+1	; 0x01
    39d2:	82 81       	ldd	r24, Z+2	; 0x02
    39d4:	93 81       	ldd	r25, Z+3	; 0x03
    39d6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    39da:	dc 01       	movw	r26, r24
    39dc:	cb 01       	movw	r24, r22
    39de:	f8 01       	movw	r30, r16
    39e0:	91 83       	std	Z+1, r25	; 0x01
    39e2:	80 83       	st	Z, r24
    39e4:	de 01       	movw	r26, r28
    39e6:	af 58       	subi	r26, 0x8F	; 143
    39e8:	bf 4f       	sbci	r27, 0xFF	; 255
    39ea:	fe 01       	movw	r30, r28
    39ec:	eb 58       	subi	r30, 0x8B	; 139
    39ee:	ff 4f       	sbci	r31, 0xFF	; 255
    39f0:	80 81       	ld	r24, Z
    39f2:	91 81       	ldd	r25, Z+1	; 0x01
    39f4:	11 96       	adiw	r26, 0x01	; 1
    39f6:	9c 93       	st	X, r25
    39f8:	8e 93       	st	-X, r24
    39fa:	fe 01       	movw	r30, r28
    39fc:	ef 58       	subi	r30, 0x8F	; 143
    39fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3a00:	80 81       	ld	r24, Z
    3a02:	91 81       	ldd	r25, Z+1	; 0x01
    3a04:	01 97       	sbiw	r24, 0x01	; 1
    3a06:	f1 f7       	brne	.-4      	; 0x3a04 <main+0x1efa>
    3a08:	fe 01       	movw	r30, r28
    3a0a:	ef 58       	subi	r30, 0x8F	; 143
    3a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a0e:	91 83       	std	Z+1, r25	; 0x01
    3a10:	80 83       	st	Z, r24
    3a12:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case EAT:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    3a16:	81 e0       	ldi	r24, 0x01	; 1
    3a18:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    3a1c:	80 e0       	ldi	r24, 0x00	; 0
    3a1e:	60 e0       	ldi	r22, 0x00	; 0
    3a20:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[0],0,8,0);
    3a24:	ce 01       	movw	r24, r28
    3a26:	86 5d       	subi	r24, 0xD6	; 214
    3a28:	9e 4f       	sbci	r25, 0xFE	; 254
    3a2a:	60 e0       	ldi	r22, 0x00	; 0
    3a2c:	48 e0       	ldi	r20, 0x08	; 8
    3a2e:	20 e0       	ldi	r18, 0x00	; 0
    3a30:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[20],1,7,0);
    3a34:	ce 01       	movw	r24, r28
    3a36:	86 5d       	subi	r24, 0xD6	; 214
    3a38:	9e 4f       	sbci	r25, 0xFE	; 254
    3a3a:	80 56       	subi	r24, 0x60	; 96
    3a3c:	9f 4f       	sbci	r25, 0xFF	; 255
    3a3e:	61 e0       	ldi	r22, 0x01	; 1
    3a40:	47 e0       	ldi	r20, 0x07	; 7
    3a42:	20 e0       	ldi	r18, 0x00	; 0
    3a44:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[14],2,6,0);
    3a48:	ce 01       	movw	r24, r28
    3a4a:	86 5d       	subi	r24, 0xD6	; 214
    3a4c:	9e 4f       	sbci	r25, 0xFE	; 254
    3a4e:	80 59       	subi	r24, 0x90	; 144
    3a50:	9f 4f       	sbci	r25, 0xFF	; 255
    3a52:	62 e0       	ldi	r22, 0x02	; 2
    3a54:	46 e0       	ldi	r20, 0x06	; 6
    3a56:	20 e0       	ldi	r18, 0x00	; 0
    3a58:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[21],3,5,0);
    3a5c:	ce 01       	movw	r24, r28
    3a5e:	86 5d       	subi	r24, 0xD6	; 214
    3a60:	9e 4f       	sbci	r25, 0xFE	; 254
    3a62:	88 55       	subi	r24, 0x58	; 88
    3a64:	9f 4f       	sbci	r25, 0xFF	; 255
    3a66:	63 e0       	ldi	r22, 0x03	; 3
    3a68:	45 e0       	ldi	r20, 0x05	; 5
    3a6a:	20 e0       	ldi	r18, 0x00	; 0
    3a6c:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    3a70:	fe 01       	movw	r30, r28
    3a72:	e3 59       	subi	r30, 0x93	; 147
    3a74:	ff 4f       	sbci	r31, 0xFF	; 255
    3a76:	80 e0       	ldi	r24, 0x00	; 0
    3a78:	90 e0       	ldi	r25, 0x00	; 0
    3a7a:	aa ef       	ldi	r26, 0xFA	; 250
    3a7c:	b4 e4       	ldi	r27, 0x44	; 68
    3a7e:	80 83       	st	Z, r24
    3a80:	91 83       	std	Z+1, r25	; 0x01
    3a82:	a2 83       	std	Z+2, r26	; 0x02
    3a84:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a86:	8e 01       	movw	r16, r28
    3a88:	07 59       	subi	r16, 0x97	; 151
    3a8a:	1f 4f       	sbci	r17, 0xFF	; 255
    3a8c:	fe 01       	movw	r30, r28
    3a8e:	e3 59       	subi	r30, 0x93	; 147
    3a90:	ff 4f       	sbci	r31, 0xFF	; 255
    3a92:	60 81       	ld	r22, Z
    3a94:	71 81       	ldd	r23, Z+1	; 0x01
    3a96:	82 81       	ldd	r24, Z+2	; 0x02
    3a98:	93 81       	ldd	r25, Z+3	; 0x03
    3a9a:	20 e0       	ldi	r18, 0x00	; 0
    3a9c:	30 e0       	ldi	r19, 0x00	; 0
    3a9e:	4a e7       	ldi	r20, 0x7A	; 122
    3aa0:	55 e4       	ldi	r21, 0x45	; 69
    3aa2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3aa6:	dc 01       	movw	r26, r24
    3aa8:	cb 01       	movw	r24, r22
    3aaa:	f8 01       	movw	r30, r16
    3aac:	80 83       	st	Z, r24
    3aae:	91 83       	std	Z+1, r25	; 0x01
    3ab0:	a2 83       	std	Z+2, r26	; 0x02
    3ab2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3ab4:	fe 01       	movw	r30, r28
    3ab6:	e7 59       	subi	r30, 0x97	; 151
    3ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    3aba:	60 81       	ld	r22, Z
    3abc:	71 81       	ldd	r23, Z+1	; 0x01
    3abe:	82 81       	ldd	r24, Z+2	; 0x02
    3ac0:	93 81       	ldd	r25, Z+3	; 0x03
    3ac2:	20 e0       	ldi	r18, 0x00	; 0
    3ac4:	30 e0       	ldi	r19, 0x00	; 0
    3ac6:	40 e8       	ldi	r20, 0x80	; 128
    3ac8:	5f e3       	ldi	r21, 0x3F	; 63
    3aca:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3ace:	88 23       	and	r24, r24
    3ad0:	44 f4       	brge	.+16     	; 0x3ae2 <main+0x1fd8>
		__ticks = 1;
    3ad2:	fe 01       	movw	r30, r28
    3ad4:	e9 59       	subi	r30, 0x99	; 153
    3ad6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ad8:	81 e0       	ldi	r24, 0x01	; 1
    3ada:	90 e0       	ldi	r25, 0x00	; 0
    3adc:	91 83       	std	Z+1, r25	; 0x01
    3ade:	80 83       	st	Z, r24
    3ae0:	65 c0       	rjmp	.+202    	; 0x3bac <main+0x20a2>
	else if (__tmp > 65535)
    3ae2:	fe 01       	movw	r30, r28
    3ae4:	e7 59       	subi	r30, 0x97	; 151
    3ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae8:	60 81       	ld	r22, Z
    3aea:	71 81       	ldd	r23, Z+1	; 0x01
    3aec:	82 81       	ldd	r24, Z+2	; 0x02
    3aee:	93 81       	ldd	r25, Z+3	; 0x03
    3af0:	20 e0       	ldi	r18, 0x00	; 0
    3af2:	3f ef       	ldi	r19, 0xFF	; 255
    3af4:	4f e7       	ldi	r20, 0x7F	; 127
    3af6:	57 e4       	ldi	r21, 0x47	; 71
    3af8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3afc:	18 16       	cp	r1, r24
    3afe:	0c f0       	brlt	.+2      	; 0x3b02 <main+0x1ff8>
    3b00:	44 c0       	rjmp	.+136    	; 0x3b8a <main+0x2080>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b02:	fe 01       	movw	r30, r28
    3b04:	e3 59       	subi	r30, 0x93	; 147
    3b06:	ff 4f       	sbci	r31, 0xFF	; 255
    3b08:	60 81       	ld	r22, Z
    3b0a:	71 81       	ldd	r23, Z+1	; 0x01
    3b0c:	82 81       	ldd	r24, Z+2	; 0x02
    3b0e:	93 81       	ldd	r25, Z+3	; 0x03
    3b10:	20 e0       	ldi	r18, 0x00	; 0
    3b12:	30 e0       	ldi	r19, 0x00	; 0
    3b14:	40 e2       	ldi	r20, 0x20	; 32
    3b16:	51 e4       	ldi	r21, 0x41	; 65
    3b18:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3b1c:	dc 01       	movw	r26, r24
    3b1e:	cb 01       	movw	r24, r22
    3b20:	8e 01       	movw	r16, r28
    3b22:	09 59       	subi	r16, 0x99	; 153
    3b24:	1f 4f       	sbci	r17, 0xFF	; 255
    3b26:	bc 01       	movw	r22, r24
    3b28:	cd 01       	movw	r24, r26
    3b2a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3b2e:	dc 01       	movw	r26, r24
    3b30:	cb 01       	movw	r24, r22
    3b32:	f8 01       	movw	r30, r16
    3b34:	91 83       	std	Z+1, r25	; 0x01
    3b36:	80 83       	st	Z, r24
    3b38:	1f c0       	rjmp	.+62     	; 0x3b78 <main+0x206e>
    3b3a:	fe 01       	movw	r30, r28
    3b3c:	eb 59       	subi	r30, 0x9B	; 155
    3b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b40:	80 e9       	ldi	r24, 0x90	; 144
    3b42:	91 e0       	ldi	r25, 0x01	; 1
    3b44:	91 83       	std	Z+1, r25	; 0x01
    3b46:	80 83       	st	Z, r24
    3b48:	fe 01       	movw	r30, r28
    3b4a:	eb 59       	subi	r30, 0x9B	; 155
    3b4c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b4e:	80 81       	ld	r24, Z
    3b50:	91 81       	ldd	r25, Z+1	; 0x01
    3b52:	01 97       	sbiw	r24, 0x01	; 1
    3b54:	f1 f7       	brne	.-4      	; 0x3b52 <main+0x2048>
    3b56:	fe 01       	movw	r30, r28
    3b58:	eb 59       	subi	r30, 0x9B	; 155
    3b5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b5c:	91 83       	std	Z+1, r25	; 0x01
    3b5e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b60:	de 01       	movw	r26, r28
    3b62:	a9 59       	subi	r26, 0x99	; 153
    3b64:	bf 4f       	sbci	r27, 0xFF	; 255
    3b66:	fe 01       	movw	r30, r28
    3b68:	e9 59       	subi	r30, 0x99	; 153
    3b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b6c:	80 81       	ld	r24, Z
    3b6e:	91 81       	ldd	r25, Z+1	; 0x01
    3b70:	01 97       	sbiw	r24, 0x01	; 1
    3b72:	11 96       	adiw	r26, 0x01	; 1
    3b74:	9c 93       	st	X, r25
    3b76:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b78:	fe 01       	movw	r30, r28
    3b7a:	e9 59       	subi	r30, 0x99	; 153
    3b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    3b7e:	80 81       	ld	r24, Z
    3b80:	91 81       	ldd	r25, Z+1	; 0x01
    3b82:	00 97       	sbiw	r24, 0x00	; 0
    3b84:	d1 f6       	brne	.-76     	; 0x3b3a <main+0x2030>
    3b86:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b8a:	8e 01       	movw	r16, r28
    3b8c:	09 59       	subi	r16, 0x99	; 153
    3b8e:	1f 4f       	sbci	r17, 0xFF	; 255
    3b90:	fe 01       	movw	r30, r28
    3b92:	e7 59       	subi	r30, 0x97	; 151
    3b94:	ff 4f       	sbci	r31, 0xFF	; 255
    3b96:	60 81       	ld	r22, Z
    3b98:	71 81       	ldd	r23, Z+1	; 0x01
    3b9a:	82 81       	ldd	r24, Z+2	; 0x02
    3b9c:	93 81       	ldd	r25, Z+3	; 0x03
    3b9e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3ba2:	dc 01       	movw	r26, r24
    3ba4:	cb 01       	movw	r24, r22
    3ba6:	f8 01       	movw	r30, r16
    3ba8:	91 83       	std	Z+1, r25	; 0x01
    3baa:	80 83       	st	Z, r24
    3bac:	de 01       	movw	r26, r28
    3bae:	ad 59       	subi	r26, 0x9D	; 157
    3bb0:	bf 4f       	sbci	r27, 0xFF	; 255
    3bb2:	fe 01       	movw	r30, r28
    3bb4:	e9 59       	subi	r30, 0x99	; 153
    3bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    3bb8:	80 81       	ld	r24, Z
    3bba:	91 81       	ldd	r25, Z+1	; 0x01
    3bbc:	11 96       	adiw	r26, 0x01	; 1
    3bbe:	9c 93       	st	X, r25
    3bc0:	8e 93       	st	-X, r24
    3bc2:	fe 01       	movw	r30, r28
    3bc4:	ed 59       	subi	r30, 0x9D	; 157
    3bc6:	ff 4f       	sbci	r31, 0xFF	; 255
    3bc8:	80 81       	ld	r24, Z
    3bca:	91 81       	ldd	r25, Z+1	; 0x01
    3bcc:	01 97       	sbiw	r24, 0x01	; 1
    3bce:	f1 f7       	brne	.-4      	; 0x3bcc <main+0x20c2>
    3bd0:	fe 01       	movw	r30, r28
    3bd2:	ed 59       	subi	r30, 0x9D	; 157
    3bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    3bd6:	91 83       	std	Z+1, r25	; 0x01
    3bd8:	80 83       	st	Z, r24
    3bda:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case DRINK:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    3bde:	81 e0       	ldi	r24, 0x01	; 1
    3be0:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    3be4:	80 e0       	ldi	r24, 0x00	; 0
    3be6:	60 e0       	ldi	r22, 0x00	; 0
    3be8:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[19],0,8,0);
    3bec:	ce 01       	movw	r24, r28
    3bee:	86 5d       	subi	r24, 0xD6	; 214
    3bf0:	9e 4f       	sbci	r25, 0xFE	; 254
    3bf2:	88 56       	subi	r24, 0x68	; 104
    3bf4:	9f 4f       	sbci	r25, 0xFF	; 255
    3bf6:	60 e0       	ldi	r22, 0x00	; 0
    3bf8:	48 e0       	ldi	r20, 0x08	; 8
    3bfa:	20 e0       	ldi	r18, 0x00	; 0
    3bfc:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[5],1,7,0);
    3c00:	ce 01       	movw	r24, r28
    3c02:	86 5d       	subi	r24, 0xD6	; 214
    3c04:	9e 4f       	sbci	r25, 0xFE	; 254
    3c06:	88 96       	adiw	r24, 0x28	; 40
    3c08:	61 e0       	ldi	r22, 0x01	; 1
    3c0a:	47 e0       	ldi	r20, 0x07	; 7
    3c0c:	20 e0       	ldi	r18, 0x00	; 0
    3c0e:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[1],2,6,0);
    3c12:	ce 01       	movw	r24, r28
    3c14:	86 5d       	subi	r24, 0xD6	; 214
    3c16:	9e 4f       	sbci	r25, 0xFE	; 254
    3c18:	08 96       	adiw	r24, 0x08	; 8
    3c1a:	62 e0       	ldi	r22, 0x02	; 2
    3c1c:	46 e0       	ldi	r20, 0x06	; 6
    3c1e:	20 e0       	ldi	r18, 0x00	; 0
    3c20:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[21],3,5,0);
    3c24:	ce 01       	movw	r24, r28
    3c26:	86 5d       	subi	r24, 0xD6	; 214
    3c28:	9e 4f       	sbci	r25, 0xFE	; 254
    3c2a:	88 55       	subi	r24, 0x58	; 88
    3c2c:	9f 4f       	sbci	r25, 0xFF	; 255
    3c2e:	63 e0       	ldi	r22, 0x03	; 3
    3c30:	45 e0       	ldi	r20, 0x05	; 5
    3c32:	20 e0       	ldi	r18, 0x00	; 0
    3c34:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    3c38:	fe 01       	movw	r30, r28
    3c3a:	e1 5a       	subi	r30, 0xA1	; 161
    3c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c3e:	80 e0       	ldi	r24, 0x00	; 0
    3c40:	90 e0       	ldi	r25, 0x00	; 0
    3c42:	aa ef       	ldi	r26, 0xFA	; 250
    3c44:	b4 e4       	ldi	r27, 0x44	; 68
    3c46:	80 83       	st	Z, r24
    3c48:	91 83       	std	Z+1, r25	; 0x01
    3c4a:	a2 83       	std	Z+2, r26	; 0x02
    3c4c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c4e:	8e 01       	movw	r16, r28
    3c50:	05 5a       	subi	r16, 0xA5	; 165
    3c52:	1f 4f       	sbci	r17, 0xFF	; 255
    3c54:	fe 01       	movw	r30, r28
    3c56:	e1 5a       	subi	r30, 0xA1	; 161
    3c58:	ff 4f       	sbci	r31, 0xFF	; 255
    3c5a:	60 81       	ld	r22, Z
    3c5c:	71 81       	ldd	r23, Z+1	; 0x01
    3c5e:	82 81       	ldd	r24, Z+2	; 0x02
    3c60:	93 81       	ldd	r25, Z+3	; 0x03
    3c62:	20 e0       	ldi	r18, 0x00	; 0
    3c64:	30 e0       	ldi	r19, 0x00	; 0
    3c66:	4a e7       	ldi	r20, 0x7A	; 122
    3c68:	55 e4       	ldi	r21, 0x45	; 69
    3c6a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3c6e:	dc 01       	movw	r26, r24
    3c70:	cb 01       	movw	r24, r22
    3c72:	f8 01       	movw	r30, r16
    3c74:	80 83       	st	Z, r24
    3c76:	91 83       	std	Z+1, r25	; 0x01
    3c78:	a2 83       	std	Z+2, r26	; 0x02
    3c7a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3c7c:	fe 01       	movw	r30, r28
    3c7e:	e5 5a       	subi	r30, 0xA5	; 165
    3c80:	ff 4f       	sbci	r31, 0xFF	; 255
    3c82:	60 81       	ld	r22, Z
    3c84:	71 81       	ldd	r23, Z+1	; 0x01
    3c86:	82 81       	ldd	r24, Z+2	; 0x02
    3c88:	93 81       	ldd	r25, Z+3	; 0x03
    3c8a:	20 e0       	ldi	r18, 0x00	; 0
    3c8c:	30 e0       	ldi	r19, 0x00	; 0
    3c8e:	40 e8       	ldi	r20, 0x80	; 128
    3c90:	5f e3       	ldi	r21, 0x3F	; 63
    3c92:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3c96:	88 23       	and	r24, r24
    3c98:	44 f4       	brge	.+16     	; 0x3caa <main+0x21a0>
		__ticks = 1;
    3c9a:	fe 01       	movw	r30, r28
    3c9c:	e7 5a       	subi	r30, 0xA7	; 167
    3c9e:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca0:	81 e0       	ldi	r24, 0x01	; 1
    3ca2:	90 e0       	ldi	r25, 0x00	; 0
    3ca4:	91 83       	std	Z+1, r25	; 0x01
    3ca6:	80 83       	st	Z, r24
    3ca8:	65 c0       	rjmp	.+202    	; 0x3d74 <main+0x226a>
	else if (__tmp > 65535)
    3caa:	fe 01       	movw	r30, r28
    3cac:	e5 5a       	subi	r30, 0xA5	; 165
    3cae:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb0:	60 81       	ld	r22, Z
    3cb2:	71 81       	ldd	r23, Z+1	; 0x01
    3cb4:	82 81       	ldd	r24, Z+2	; 0x02
    3cb6:	93 81       	ldd	r25, Z+3	; 0x03
    3cb8:	20 e0       	ldi	r18, 0x00	; 0
    3cba:	3f ef       	ldi	r19, 0xFF	; 255
    3cbc:	4f e7       	ldi	r20, 0x7F	; 127
    3cbe:	57 e4       	ldi	r21, 0x47	; 71
    3cc0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3cc4:	18 16       	cp	r1, r24
    3cc6:	0c f0       	brlt	.+2      	; 0x3cca <main+0x21c0>
    3cc8:	44 c0       	rjmp	.+136    	; 0x3d52 <main+0x2248>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3cca:	fe 01       	movw	r30, r28
    3ccc:	e1 5a       	subi	r30, 0xA1	; 161
    3cce:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd0:	60 81       	ld	r22, Z
    3cd2:	71 81       	ldd	r23, Z+1	; 0x01
    3cd4:	82 81       	ldd	r24, Z+2	; 0x02
    3cd6:	93 81       	ldd	r25, Z+3	; 0x03
    3cd8:	20 e0       	ldi	r18, 0x00	; 0
    3cda:	30 e0       	ldi	r19, 0x00	; 0
    3cdc:	40 e2       	ldi	r20, 0x20	; 32
    3cde:	51 e4       	ldi	r21, 0x41	; 65
    3ce0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3ce4:	dc 01       	movw	r26, r24
    3ce6:	cb 01       	movw	r24, r22
    3ce8:	8e 01       	movw	r16, r28
    3cea:	07 5a       	subi	r16, 0xA7	; 167
    3cec:	1f 4f       	sbci	r17, 0xFF	; 255
    3cee:	bc 01       	movw	r22, r24
    3cf0:	cd 01       	movw	r24, r26
    3cf2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3cf6:	dc 01       	movw	r26, r24
    3cf8:	cb 01       	movw	r24, r22
    3cfa:	f8 01       	movw	r30, r16
    3cfc:	91 83       	std	Z+1, r25	; 0x01
    3cfe:	80 83       	st	Z, r24
    3d00:	1f c0       	rjmp	.+62     	; 0x3d40 <main+0x2236>
    3d02:	fe 01       	movw	r30, r28
    3d04:	e9 5a       	subi	r30, 0xA9	; 169
    3d06:	ff 4f       	sbci	r31, 0xFF	; 255
    3d08:	80 e9       	ldi	r24, 0x90	; 144
    3d0a:	91 e0       	ldi	r25, 0x01	; 1
    3d0c:	91 83       	std	Z+1, r25	; 0x01
    3d0e:	80 83       	st	Z, r24
    3d10:	fe 01       	movw	r30, r28
    3d12:	e9 5a       	subi	r30, 0xA9	; 169
    3d14:	ff 4f       	sbci	r31, 0xFF	; 255
    3d16:	80 81       	ld	r24, Z
    3d18:	91 81       	ldd	r25, Z+1	; 0x01
    3d1a:	01 97       	sbiw	r24, 0x01	; 1
    3d1c:	f1 f7       	brne	.-4      	; 0x3d1a <main+0x2210>
    3d1e:	fe 01       	movw	r30, r28
    3d20:	e9 5a       	subi	r30, 0xA9	; 169
    3d22:	ff 4f       	sbci	r31, 0xFF	; 255
    3d24:	91 83       	std	Z+1, r25	; 0x01
    3d26:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d28:	de 01       	movw	r26, r28
    3d2a:	a7 5a       	subi	r26, 0xA7	; 167
    3d2c:	bf 4f       	sbci	r27, 0xFF	; 255
    3d2e:	fe 01       	movw	r30, r28
    3d30:	e7 5a       	subi	r30, 0xA7	; 167
    3d32:	ff 4f       	sbci	r31, 0xFF	; 255
    3d34:	80 81       	ld	r24, Z
    3d36:	91 81       	ldd	r25, Z+1	; 0x01
    3d38:	01 97       	sbiw	r24, 0x01	; 1
    3d3a:	11 96       	adiw	r26, 0x01	; 1
    3d3c:	9c 93       	st	X, r25
    3d3e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d40:	fe 01       	movw	r30, r28
    3d42:	e7 5a       	subi	r30, 0xA7	; 167
    3d44:	ff 4f       	sbci	r31, 0xFF	; 255
    3d46:	80 81       	ld	r24, Z
    3d48:	91 81       	ldd	r25, Z+1	; 0x01
    3d4a:	00 97       	sbiw	r24, 0x00	; 0
    3d4c:	d1 f6       	brne	.-76     	; 0x3d02 <main+0x21f8>
    3d4e:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d52:	8e 01       	movw	r16, r28
    3d54:	07 5a       	subi	r16, 0xA7	; 167
    3d56:	1f 4f       	sbci	r17, 0xFF	; 255
    3d58:	fe 01       	movw	r30, r28
    3d5a:	e5 5a       	subi	r30, 0xA5	; 165
    3d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d5e:	60 81       	ld	r22, Z
    3d60:	71 81       	ldd	r23, Z+1	; 0x01
    3d62:	82 81       	ldd	r24, Z+2	; 0x02
    3d64:	93 81       	ldd	r25, Z+3	; 0x03
    3d66:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3d6a:	dc 01       	movw	r26, r24
    3d6c:	cb 01       	movw	r24, r22
    3d6e:	f8 01       	movw	r30, r16
    3d70:	91 83       	std	Z+1, r25	; 0x01
    3d72:	80 83       	st	Z, r24
    3d74:	de 01       	movw	r26, r28
    3d76:	ab 5a       	subi	r26, 0xAB	; 171
    3d78:	bf 4f       	sbci	r27, 0xFF	; 255
    3d7a:	fe 01       	movw	r30, r28
    3d7c:	e7 5a       	subi	r30, 0xA7	; 167
    3d7e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d80:	80 81       	ld	r24, Z
    3d82:	91 81       	ldd	r25, Z+1	; 0x01
    3d84:	11 96       	adiw	r26, 0x01	; 1
    3d86:	9c 93       	st	X, r25
    3d88:	8e 93       	st	-X, r24
    3d8a:	fe 01       	movw	r30, r28
    3d8c:	eb 5a       	subi	r30, 0xAB	; 171
    3d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d90:	80 81       	ld	r24, Z
    3d92:	91 81       	ldd	r25, Z+1	; 0x01
    3d94:	01 97       	sbiw	r24, 0x01	; 1
    3d96:	f1 f7       	brne	.-4      	; 0x3d94 <main+0x228a>
    3d98:	fe 01       	movw	r30, r28
    3d9a:	eb 5a       	subi	r30, 0xAB	; 171
    3d9c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d9e:	91 83       	std	Z+1, r25	; 0x01
    3da0:	80 83       	st	Z, r24
    3da2:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case SLEEP:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    3da6:	81 e0       	ldi	r24, 0x01	; 1
    3da8:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    3dac:	80 e0       	ldi	r24, 0x00	; 0
    3dae:	60 e0       	ldi	r22, 0x00	; 0
    3db0:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[4],0,8,0);
    3db4:	ce 01       	movw	r24, r28
    3db6:	86 5d       	subi	r24, 0xD6	; 214
    3db8:	9e 4f       	sbci	r25, 0xFE	; 254
    3dba:	80 96       	adiw	r24, 0x20	; 32
    3dbc:	60 e0       	ldi	r22, 0x00	; 0
    3dbe:	48 e0       	ldi	r20, 0x08	; 8
    3dc0:	20 e0       	ldi	r18, 0x00	; 0
    3dc2:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[22],1,7,0);
    3dc6:	ce 01       	movw	r24, r28
    3dc8:	86 5d       	subi	r24, 0xD6	; 214
    3dca:	9e 4f       	sbci	r25, 0xFE	; 254
    3dcc:	80 55       	subi	r24, 0x50	; 80
    3dce:	9f 4f       	sbci	r25, 0xFF	; 255
    3dd0:	61 e0       	ldi	r22, 0x01	; 1
    3dd2:	47 e0       	ldi	r20, 0x07	; 7
    3dd4:	20 e0       	ldi	r18, 0x00	; 0
    3dd6:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[12],2,6,0);
    3dda:	ce 01       	movw	r24, r28
    3ddc:	86 5d       	subi	r24, 0xD6	; 214
    3dde:	9e 4f       	sbci	r25, 0xFE	; 254
    3de0:	80 5a       	subi	r24, 0xA0	; 160
    3de2:	9f 4f       	sbci	r25, 0xFF	; 255
    3de4:	62 e0       	ldi	r22, 0x02	; 2
    3de6:	46 e0       	ldi	r20, 0x06	; 6
    3de8:	20 e0       	ldi	r18, 0x00	; 0
    3dea:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[21],3,5,0);
    3dee:	ce 01       	movw	r24, r28
    3df0:	86 5d       	subi	r24, 0xD6	; 214
    3df2:	9e 4f       	sbci	r25, 0xFE	; 254
    3df4:	88 55       	subi	r24, 0x58	; 88
    3df6:	9f 4f       	sbci	r25, 0xFF	; 255
    3df8:	63 e0       	ldi	r22, 0x03	; 3
    3dfa:	45 e0       	ldi	r20, 0x05	; 5
    3dfc:	20 e0       	ldi	r18, 0x00	; 0
    3dfe:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    3e02:	fe 01       	movw	r30, r28
    3e04:	ef 5a       	subi	r30, 0xAF	; 175
    3e06:	ff 4f       	sbci	r31, 0xFF	; 255
    3e08:	80 e0       	ldi	r24, 0x00	; 0
    3e0a:	90 e0       	ldi	r25, 0x00	; 0
    3e0c:	aa ef       	ldi	r26, 0xFA	; 250
    3e0e:	b4 e4       	ldi	r27, 0x44	; 68
    3e10:	80 83       	st	Z, r24
    3e12:	91 83       	std	Z+1, r25	; 0x01
    3e14:	a2 83       	std	Z+2, r26	; 0x02
    3e16:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e18:	8e 01       	movw	r16, r28
    3e1a:	03 5b       	subi	r16, 0xB3	; 179
    3e1c:	1f 4f       	sbci	r17, 0xFF	; 255
    3e1e:	fe 01       	movw	r30, r28
    3e20:	ef 5a       	subi	r30, 0xAF	; 175
    3e22:	ff 4f       	sbci	r31, 0xFF	; 255
    3e24:	60 81       	ld	r22, Z
    3e26:	71 81       	ldd	r23, Z+1	; 0x01
    3e28:	82 81       	ldd	r24, Z+2	; 0x02
    3e2a:	93 81       	ldd	r25, Z+3	; 0x03
    3e2c:	20 e0       	ldi	r18, 0x00	; 0
    3e2e:	30 e0       	ldi	r19, 0x00	; 0
    3e30:	4a e7       	ldi	r20, 0x7A	; 122
    3e32:	55 e4       	ldi	r21, 0x45	; 69
    3e34:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3e38:	dc 01       	movw	r26, r24
    3e3a:	cb 01       	movw	r24, r22
    3e3c:	f8 01       	movw	r30, r16
    3e3e:	80 83       	st	Z, r24
    3e40:	91 83       	std	Z+1, r25	; 0x01
    3e42:	a2 83       	std	Z+2, r26	; 0x02
    3e44:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3e46:	fe 01       	movw	r30, r28
    3e48:	e3 5b       	subi	r30, 0xB3	; 179
    3e4a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e4c:	60 81       	ld	r22, Z
    3e4e:	71 81       	ldd	r23, Z+1	; 0x01
    3e50:	82 81       	ldd	r24, Z+2	; 0x02
    3e52:	93 81       	ldd	r25, Z+3	; 0x03
    3e54:	20 e0       	ldi	r18, 0x00	; 0
    3e56:	30 e0       	ldi	r19, 0x00	; 0
    3e58:	40 e8       	ldi	r20, 0x80	; 128
    3e5a:	5f e3       	ldi	r21, 0x3F	; 63
    3e5c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    3e60:	88 23       	and	r24, r24
    3e62:	44 f4       	brge	.+16     	; 0x3e74 <main+0x236a>
		__ticks = 1;
    3e64:	fe 01       	movw	r30, r28
    3e66:	e5 5b       	subi	r30, 0xB5	; 181
    3e68:	ff 4f       	sbci	r31, 0xFF	; 255
    3e6a:	81 e0       	ldi	r24, 0x01	; 1
    3e6c:	90 e0       	ldi	r25, 0x00	; 0
    3e6e:	91 83       	std	Z+1, r25	; 0x01
    3e70:	80 83       	st	Z, r24
    3e72:	65 c0       	rjmp	.+202    	; 0x3f3e <main+0x2434>
	else if (__tmp > 65535)
    3e74:	fe 01       	movw	r30, r28
    3e76:	e3 5b       	subi	r30, 0xB3	; 179
    3e78:	ff 4f       	sbci	r31, 0xFF	; 255
    3e7a:	60 81       	ld	r22, Z
    3e7c:	71 81       	ldd	r23, Z+1	; 0x01
    3e7e:	82 81       	ldd	r24, Z+2	; 0x02
    3e80:	93 81       	ldd	r25, Z+3	; 0x03
    3e82:	20 e0       	ldi	r18, 0x00	; 0
    3e84:	3f ef       	ldi	r19, 0xFF	; 255
    3e86:	4f e7       	ldi	r20, 0x7F	; 127
    3e88:	57 e4       	ldi	r21, 0x47	; 71
    3e8a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    3e8e:	18 16       	cp	r1, r24
    3e90:	0c f0       	brlt	.+2      	; 0x3e94 <main+0x238a>
    3e92:	44 c0       	rjmp	.+136    	; 0x3f1c <main+0x2412>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e94:	fe 01       	movw	r30, r28
    3e96:	ef 5a       	subi	r30, 0xAF	; 175
    3e98:	ff 4f       	sbci	r31, 0xFF	; 255
    3e9a:	60 81       	ld	r22, Z
    3e9c:	71 81       	ldd	r23, Z+1	; 0x01
    3e9e:	82 81       	ldd	r24, Z+2	; 0x02
    3ea0:	93 81       	ldd	r25, Z+3	; 0x03
    3ea2:	20 e0       	ldi	r18, 0x00	; 0
    3ea4:	30 e0       	ldi	r19, 0x00	; 0
    3ea6:	40 e2       	ldi	r20, 0x20	; 32
    3ea8:	51 e4       	ldi	r21, 0x41	; 65
    3eaa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3eae:	dc 01       	movw	r26, r24
    3eb0:	cb 01       	movw	r24, r22
    3eb2:	8e 01       	movw	r16, r28
    3eb4:	05 5b       	subi	r16, 0xB5	; 181
    3eb6:	1f 4f       	sbci	r17, 0xFF	; 255
    3eb8:	bc 01       	movw	r22, r24
    3eba:	cd 01       	movw	r24, r26
    3ebc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3ec0:	dc 01       	movw	r26, r24
    3ec2:	cb 01       	movw	r24, r22
    3ec4:	f8 01       	movw	r30, r16
    3ec6:	91 83       	std	Z+1, r25	; 0x01
    3ec8:	80 83       	st	Z, r24
    3eca:	1f c0       	rjmp	.+62     	; 0x3f0a <main+0x2400>
    3ecc:	fe 01       	movw	r30, r28
    3ece:	e7 5b       	subi	r30, 0xB7	; 183
    3ed0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ed2:	80 e9       	ldi	r24, 0x90	; 144
    3ed4:	91 e0       	ldi	r25, 0x01	; 1
    3ed6:	91 83       	std	Z+1, r25	; 0x01
    3ed8:	80 83       	st	Z, r24
    3eda:	fe 01       	movw	r30, r28
    3edc:	e7 5b       	subi	r30, 0xB7	; 183
    3ede:	ff 4f       	sbci	r31, 0xFF	; 255
    3ee0:	80 81       	ld	r24, Z
    3ee2:	91 81       	ldd	r25, Z+1	; 0x01
    3ee4:	01 97       	sbiw	r24, 0x01	; 1
    3ee6:	f1 f7       	brne	.-4      	; 0x3ee4 <main+0x23da>
    3ee8:	fe 01       	movw	r30, r28
    3eea:	e7 5b       	subi	r30, 0xB7	; 183
    3eec:	ff 4f       	sbci	r31, 0xFF	; 255
    3eee:	91 83       	std	Z+1, r25	; 0x01
    3ef0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ef2:	de 01       	movw	r26, r28
    3ef4:	a5 5b       	subi	r26, 0xB5	; 181
    3ef6:	bf 4f       	sbci	r27, 0xFF	; 255
    3ef8:	fe 01       	movw	r30, r28
    3efa:	e5 5b       	subi	r30, 0xB5	; 181
    3efc:	ff 4f       	sbci	r31, 0xFF	; 255
    3efe:	80 81       	ld	r24, Z
    3f00:	91 81       	ldd	r25, Z+1	; 0x01
    3f02:	01 97       	sbiw	r24, 0x01	; 1
    3f04:	11 96       	adiw	r26, 0x01	; 1
    3f06:	9c 93       	st	X, r25
    3f08:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f0a:	fe 01       	movw	r30, r28
    3f0c:	e5 5b       	subi	r30, 0xB5	; 181
    3f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f10:	80 81       	ld	r24, Z
    3f12:	91 81       	ldd	r25, Z+1	; 0x01
    3f14:	00 97       	sbiw	r24, 0x00	; 0
    3f16:	d1 f6       	brne	.-76     	; 0x3ecc <main+0x23c2>
    3f18:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f1c:	8e 01       	movw	r16, r28
    3f1e:	05 5b       	subi	r16, 0xB5	; 181
    3f20:	1f 4f       	sbci	r17, 0xFF	; 255
    3f22:	fe 01       	movw	r30, r28
    3f24:	e3 5b       	subi	r30, 0xB3	; 179
    3f26:	ff 4f       	sbci	r31, 0xFF	; 255
    3f28:	60 81       	ld	r22, Z
    3f2a:	71 81       	ldd	r23, Z+1	; 0x01
    3f2c:	82 81       	ldd	r24, Z+2	; 0x02
    3f2e:	93 81       	ldd	r25, Z+3	; 0x03
    3f30:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3f34:	dc 01       	movw	r26, r24
    3f36:	cb 01       	movw	r24, r22
    3f38:	f8 01       	movw	r30, r16
    3f3a:	91 83       	std	Z+1, r25	; 0x01
    3f3c:	80 83       	st	Z, r24
    3f3e:	de 01       	movw	r26, r28
    3f40:	a9 5b       	subi	r26, 0xB9	; 185
    3f42:	bf 4f       	sbci	r27, 0xFF	; 255
    3f44:	fe 01       	movw	r30, r28
    3f46:	e5 5b       	subi	r30, 0xB5	; 181
    3f48:	ff 4f       	sbci	r31, 0xFF	; 255
    3f4a:	80 81       	ld	r24, Z
    3f4c:	91 81       	ldd	r25, Z+1	; 0x01
    3f4e:	11 96       	adiw	r26, 0x01	; 1
    3f50:	9c 93       	st	X, r25
    3f52:	8e 93       	st	-X, r24
    3f54:	fe 01       	movw	r30, r28
    3f56:	e9 5b       	subi	r30, 0xB9	; 185
    3f58:	ff 4f       	sbci	r31, 0xFF	; 255
    3f5a:	80 81       	ld	r24, Z
    3f5c:	91 81       	ldd	r25, Z+1	; 0x01
    3f5e:	01 97       	sbiw	r24, 0x01	; 1
    3f60:	f1 f7       	brne	.-4      	; 0x3f5e <main+0x2454>
    3f62:	fe 01       	movw	r30, r28
    3f64:	e9 5b       	subi	r30, 0xB9	; 185
    3f66:	ff 4f       	sbci	r31, 0xFF	; 255
    3f68:	91 83       	std	Z+1, r25	; 0x01
    3f6a:	80 83       	st	Z, r24
    3f6c:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case HOT:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    3f70:	81 e0       	ldi	r24, 0x01	; 1
    3f72:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    3f76:	80 e0       	ldi	r24, 0x00	; 0
    3f78:	60 e0       	ldi	r22, 0x00	; 0
    3f7a:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[17],0,9,0);
    3f7e:	ce 01       	movw	r24, r28
    3f80:	86 5d       	subi	r24, 0xD6	; 214
    3f82:	9e 4f       	sbci	r25, 0xFE	; 254
    3f84:	88 57       	subi	r24, 0x78	; 120
    3f86:	9f 4f       	sbci	r25, 0xFF	; 255
    3f88:	60 e0       	ldi	r22, 0x00	; 0
    3f8a:	49 e0       	ldi	r20, 0x09	; 9
    3f8c:	20 e0       	ldi	r18, 0x00	; 0
    3f8e:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[7],1,8,0);
    3f92:	ce 01       	movw	r24, r28
    3f94:	86 5d       	subi	r24, 0xD6	; 214
    3f96:	9e 4f       	sbci	r25, 0xFE	; 254
    3f98:	c8 96       	adiw	r24, 0x38	; 56
    3f9a:	61 e0       	ldi	r22, 0x01	; 1
    3f9c:	48 e0       	ldi	r20, 0x08	; 8
    3f9e:	20 e0       	ldi	r18, 0x00	; 0
    3fa0:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[23],2,7,0);
    3fa4:	ce 01       	movw	r24, r28
    3fa6:	86 5d       	subi	r24, 0xD6	; 214
    3fa8:	9e 4f       	sbci	r25, 0xFE	; 254
    3faa:	88 54       	subi	r24, 0x48	; 72
    3fac:	9f 4f       	sbci	r25, 0xFF	; 255
    3fae:	62 e0       	ldi	r22, 0x02	; 2
    3fb0:	47 e0       	ldi	r20, 0x07	; 7
    3fb2:	20 e0       	ldi	r18, 0x00	; 0
    3fb4:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[24],3,6,0);
    3fb8:	ce 01       	movw	r24, r28
    3fba:	86 5d       	subi	r24, 0xD6	; 214
    3fbc:	9e 4f       	sbci	r25, 0xFE	; 254
    3fbe:	80 54       	subi	r24, 0x40	; 64
    3fc0:	9f 4f       	sbci	r25, 0xFF	; 255
    3fc2:	63 e0       	ldi	r22, 0x03	; 3
    3fc4:	46 e0       	ldi	r20, 0x06	; 6
    3fc6:	20 e0       	ldi	r18, 0x00	; 0
    3fc8:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[21],4,5,0);
    3fcc:	ce 01       	movw	r24, r28
    3fce:	86 5d       	subi	r24, 0xD6	; 214
    3fd0:	9e 4f       	sbci	r25, 0xFE	; 254
    3fd2:	88 55       	subi	r24, 0x58	; 88
    3fd4:	9f 4f       	sbci	r25, 0xFF	; 255
    3fd6:	64 e0       	ldi	r22, 0x04	; 4
    3fd8:	45 e0       	ldi	r20, 0x05	; 5
    3fda:	20 e0       	ldi	r18, 0x00	; 0
    3fdc:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    3fe0:	fe 01       	movw	r30, r28
    3fe2:	ed 5b       	subi	r30, 0xBD	; 189
    3fe4:	ff 4f       	sbci	r31, 0xFF	; 255
    3fe6:	80 e0       	ldi	r24, 0x00	; 0
    3fe8:	90 e0       	ldi	r25, 0x00	; 0
    3fea:	aa ef       	ldi	r26, 0xFA	; 250
    3fec:	b4 e4       	ldi	r27, 0x44	; 68
    3fee:	80 83       	st	Z, r24
    3ff0:	91 83       	std	Z+1, r25	; 0x01
    3ff2:	a2 83       	std	Z+2, r26	; 0x02
    3ff4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ff6:	8e 01       	movw	r16, r28
    3ff8:	01 5c       	subi	r16, 0xC1	; 193
    3ffa:	1f 4f       	sbci	r17, 0xFF	; 255
    3ffc:	fe 01       	movw	r30, r28
    3ffe:	ed 5b       	subi	r30, 0xBD	; 189
    4000:	ff 4f       	sbci	r31, 0xFF	; 255
    4002:	60 81       	ld	r22, Z
    4004:	71 81       	ldd	r23, Z+1	; 0x01
    4006:	82 81       	ldd	r24, Z+2	; 0x02
    4008:	93 81       	ldd	r25, Z+3	; 0x03
    400a:	20 e0       	ldi	r18, 0x00	; 0
    400c:	30 e0       	ldi	r19, 0x00	; 0
    400e:	4a e7       	ldi	r20, 0x7A	; 122
    4010:	55 e4       	ldi	r21, 0x45	; 69
    4012:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4016:	dc 01       	movw	r26, r24
    4018:	cb 01       	movw	r24, r22
    401a:	f8 01       	movw	r30, r16
    401c:	80 83       	st	Z, r24
    401e:	91 83       	std	Z+1, r25	; 0x01
    4020:	a2 83       	std	Z+2, r26	; 0x02
    4022:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4024:	fe 01       	movw	r30, r28
    4026:	ff 96       	adiw	r30, 0x3f	; 63
    4028:	60 81       	ld	r22, Z
    402a:	71 81       	ldd	r23, Z+1	; 0x01
    402c:	82 81       	ldd	r24, Z+2	; 0x02
    402e:	93 81       	ldd	r25, Z+3	; 0x03
    4030:	20 e0       	ldi	r18, 0x00	; 0
    4032:	30 e0       	ldi	r19, 0x00	; 0
    4034:	40 e8       	ldi	r20, 0x80	; 128
    4036:	5f e3       	ldi	r21, 0x3F	; 63
    4038:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    403c:	88 23       	and	r24, r24
    403e:	2c f4       	brge	.+10     	; 0x404a <main+0x2540>
		__ticks = 1;
    4040:	81 e0       	ldi	r24, 0x01	; 1
    4042:	90 e0       	ldi	r25, 0x00	; 0
    4044:	9e af       	std	Y+62, r25	; 0x3e
    4046:	8d af       	std	Y+61, r24	; 0x3d
    4048:	47 c0       	rjmp	.+142    	; 0x40d8 <main+0x25ce>
	else if (__tmp > 65535)
    404a:	fe 01       	movw	r30, r28
    404c:	ff 96       	adiw	r30, 0x3f	; 63
    404e:	60 81       	ld	r22, Z
    4050:	71 81       	ldd	r23, Z+1	; 0x01
    4052:	82 81       	ldd	r24, Z+2	; 0x02
    4054:	93 81       	ldd	r25, Z+3	; 0x03
    4056:	20 e0       	ldi	r18, 0x00	; 0
    4058:	3f ef       	ldi	r19, 0xFF	; 255
    405a:	4f e7       	ldi	r20, 0x7F	; 127
    405c:	57 e4       	ldi	r21, 0x47	; 71
    405e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4062:	18 16       	cp	r1, r24
    4064:	6c f5       	brge	.+90     	; 0x40c0 <main+0x25b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4066:	fe 01       	movw	r30, r28
    4068:	ed 5b       	subi	r30, 0xBD	; 189
    406a:	ff 4f       	sbci	r31, 0xFF	; 255
    406c:	60 81       	ld	r22, Z
    406e:	71 81       	ldd	r23, Z+1	; 0x01
    4070:	82 81       	ldd	r24, Z+2	; 0x02
    4072:	93 81       	ldd	r25, Z+3	; 0x03
    4074:	20 e0       	ldi	r18, 0x00	; 0
    4076:	30 e0       	ldi	r19, 0x00	; 0
    4078:	40 e2       	ldi	r20, 0x20	; 32
    407a:	51 e4       	ldi	r21, 0x41	; 65
    407c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4080:	dc 01       	movw	r26, r24
    4082:	cb 01       	movw	r24, r22
    4084:	bc 01       	movw	r22, r24
    4086:	cd 01       	movw	r24, r26
    4088:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    408c:	dc 01       	movw	r26, r24
    408e:	cb 01       	movw	r24, r22
    4090:	9e af       	std	Y+62, r25	; 0x3e
    4092:	8d af       	std	Y+61, r24	; 0x3d
    4094:	0f c0       	rjmp	.+30     	; 0x40b4 <main+0x25aa>
    4096:	80 e9       	ldi	r24, 0x90	; 144
    4098:	91 e0       	ldi	r25, 0x01	; 1
    409a:	9c af       	std	Y+60, r25	; 0x3c
    409c:	8b af       	std	Y+59, r24	; 0x3b
    409e:	8b ad       	ldd	r24, Y+59	; 0x3b
    40a0:	9c ad       	ldd	r25, Y+60	; 0x3c
    40a2:	01 97       	sbiw	r24, 0x01	; 1
    40a4:	f1 f7       	brne	.-4      	; 0x40a2 <main+0x2598>
    40a6:	9c af       	std	Y+60, r25	; 0x3c
    40a8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40aa:	8d ad       	ldd	r24, Y+61	; 0x3d
    40ac:	9e ad       	ldd	r25, Y+62	; 0x3e
    40ae:	01 97       	sbiw	r24, 0x01	; 1
    40b0:	9e af       	std	Y+62, r25	; 0x3e
    40b2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40b4:	8d ad       	ldd	r24, Y+61	; 0x3d
    40b6:	9e ad       	ldd	r25, Y+62	; 0x3e
    40b8:	00 97       	sbiw	r24, 0x00	; 0
    40ba:	69 f7       	brne	.-38     	; 0x4096 <main+0x258c>
    40bc:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40c0:	fe 01       	movw	r30, r28
    40c2:	ff 96       	adiw	r30, 0x3f	; 63
    40c4:	60 81       	ld	r22, Z
    40c6:	71 81       	ldd	r23, Z+1	; 0x01
    40c8:	82 81       	ldd	r24, Z+2	; 0x02
    40ca:	93 81       	ldd	r25, Z+3	; 0x03
    40cc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    40d0:	dc 01       	movw	r26, r24
    40d2:	cb 01       	movw	r24, r22
    40d4:	9e af       	std	Y+62, r25	; 0x3e
    40d6:	8d af       	std	Y+61, r24	; 0x3d
    40d8:	8d ad       	ldd	r24, Y+61	; 0x3d
    40da:	9e ad       	ldd	r25, Y+62	; 0x3e
    40dc:	9a af       	std	Y+58, r25	; 0x3a
    40de:	89 af       	std	Y+57, r24	; 0x39
    40e0:	89 ad       	ldd	r24, Y+57	; 0x39
    40e2:	9a ad       	ldd	r25, Y+58	; 0x3a
    40e4:	01 97       	sbiw	r24, 0x01	; 1
    40e6:	f1 f7       	brne	.-4      	; 0x40e4 <main+0x25da>
    40e8:	9a af       	std	Y+58, r25	; 0x3a
    40ea:	89 af       	std	Y+57, r24	; 0x39
    40ec:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case COLD:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    40f0:	81 e0       	ldi	r24, 0x01	; 1
    40f2:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    40f6:	80 e0       	ldi	r24, 0x00	; 0
    40f8:	60 e0       	ldi	r22, 0x00	; 0
    40fa:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[1],0,9,0);
    40fe:	ce 01       	movw	r24, r28
    4100:	86 5d       	subi	r24, 0xD6	; 214
    4102:	9e 4f       	sbci	r25, 0xFE	; 254
    4104:	08 96       	adiw	r24, 0x08	; 8
    4106:	60 e0       	ldi	r22, 0x00	; 0
    4108:	49 e0       	ldi	r20, 0x09	; 9
    410a:	20 e0       	ldi	r18, 0x00	; 0
    410c:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[7],1,8,0);
    4110:	ce 01       	movw	r24, r28
    4112:	86 5d       	subi	r24, 0xD6	; 214
    4114:	9e 4f       	sbci	r25, 0xFE	; 254
    4116:	c8 96       	adiw	r24, 0x38	; 56
    4118:	61 e0       	ldi	r22, 0x01	; 1
    411a:	48 e0       	ldi	r20, 0x08	; 8
    411c:	20 e0       	ldi	r18, 0x00	; 0
    411e:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[5],2,7,0);
    4122:	ce 01       	movw	r24, r28
    4124:	86 5d       	subi	r24, 0xD6	; 214
    4126:	9e 4f       	sbci	r25, 0xFE	; 254
    4128:	88 96       	adiw	r24, 0x28	; 40
    412a:	62 e0       	ldi	r22, 0x02	; 2
    412c:	47 e0       	ldi	r20, 0x07	; 7
    412e:	20 e0       	ldi	r18, 0x00	; 0
    4130:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[11],3,6,0);
    4134:	ce 01       	movw	r24, r28
    4136:	86 5d       	subi	r24, 0xD6	; 214
    4138:	9e 4f       	sbci	r25, 0xFE	; 254
    413a:	88 5a       	subi	r24, 0xA8	; 168
    413c:	9f 4f       	sbci	r25, 0xFF	; 255
    413e:	63 e0       	ldi	r22, 0x03	; 3
    4140:	46 e0       	ldi	r20, 0x06	; 6
    4142:	20 e0       	ldi	r18, 0x00	; 0
    4144:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[21],4,5,0);
    4148:	ce 01       	movw	r24, r28
    414a:	86 5d       	subi	r24, 0xD6	; 214
    414c:	9e 4f       	sbci	r25, 0xFE	; 254
    414e:	88 55       	subi	r24, 0x58	; 88
    4150:	9f 4f       	sbci	r25, 0xFF	; 255
    4152:	64 e0       	ldi	r22, 0x04	; 4
    4154:	45 e0       	ldi	r20, 0x05	; 5
    4156:	20 e0       	ldi	r18, 0x00	; 0
    4158:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    415c:	80 e0       	ldi	r24, 0x00	; 0
    415e:	90 e0       	ldi	r25, 0x00	; 0
    4160:	aa ef       	ldi	r26, 0xFA	; 250
    4162:	b4 e4       	ldi	r27, 0x44	; 68
    4164:	8d ab       	std	Y+53, r24	; 0x35
    4166:	9e ab       	std	Y+54, r25	; 0x36
    4168:	af ab       	std	Y+55, r26	; 0x37
    416a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    416c:	6d a9       	ldd	r22, Y+53	; 0x35
    416e:	7e a9       	ldd	r23, Y+54	; 0x36
    4170:	8f a9       	ldd	r24, Y+55	; 0x37
    4172:	98 ad       	ldd	r25, Y+56	; 0x38
    4174:	20 e0       	ldi	r18, 0x00	; 0
    4176:	30 e0       	ldi	r19, 0x00	; 0
    4178:	4a e7       	ldi	r20, 0x7A	; 122
    417a:	55 e4       	ldi	r21, 0x45	; 69
    417c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4180:	dc 01       	movw	r26, r24
    4182:	cb 01       	movw	r24, r22
    4184:	89 ab       	std	Y+49, r24	; 0x31
    4186:	9a ab       	std	Y+50, r25	; 0x32
    4188:	ab ab       	std	Y+51, r26	; 0x33
    418a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    418c:	69 a9       	ldd	r22, Y+49	; 0x31
    418e:	7a a9       	ldd	r23, Y+50	; 0x32
    4190:	8b a9       	ldd	r24, Y+51	; 0x33
    4192:	9c a9       	ldd	r25, Y+52	; 0x34
    4194:	20 e0       	ldi	r18, 0x00	; 0
    4196:	30 e0       	ldi	r19, 0x00	; 0
    4198:	40 e8       	ldi	r20, 0x80	; 128
    419a:	5f e3       	ldi	r21, 0x3F	; 63
    419c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    41a0:	88 23       	and	r24, r24
    41a2:	2c f4       	brge	.+10     	; 0x41ae <main+0x26a4>
		__ticks = 1;
    41a4:	81 e0       	ldi	r24, 0x01	; 1
    41a6:	90 e0       	ldi	r25, 0x00	; 0
    41a8:	98 ab       	std	Y+48, r25	; 0x30
    41aa:	8f a7       	std	Y+47, r24	; 0x2f
    41ac:	40 c0       	rjmp	.+128    	; 0x422e <main+0x2724>
	else if (__tmp > 65535)
    41ae:	69 a9       	ldd	r22, Y+49	; 0x31
    41b0:	7a a9       	ldd	r23, Y+50	; 0x32
    41b2:	8b a9       	ldd	r24, Y+51	; 0x33
    41b4:	9c a9       	ldd	r25, Y+52	; 0x34
    41b6:	20 e0       	ldi	r18, 0x00	; 0
    41b8:	3f ef       	ldi	r19, 0xFF	; 255
    41ba:	4f e7       	ldi	r20, 0x7F	; 127
    41bc:	57 e4       	ldi	r21, 0x47	; 71
    41be:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    41c2:	18 16       	cp	r1, r24
    41c4:	54 f5       	brge	.+84     	; 0x421a <main+0x2710>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    41c6:	6d a9       	ldd	r22, Y+53	; 0x35
    41c8:	7e a9       	ldd	r23, Y+54	; 0x36
    41ca:	8f a9       	ldd	r24, Y+55	; 0x37
    41cc:	98 ad       	ldd	r25, Y+56	; 0x38
    41ce:	20 e0       	ldi	r18, 0x00	; 0
    41d0:	30 e0       	ldi	r19, 0x00	; 0
    41d2:	40 e2       	ldi	r20, 0x20	; 32
    41d4:	51 e4       	ldi	r21, 0x41	; 65
    41d6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    41da:	dc 01       	movw	r26, r24
    41dc:	cb 01       	movw	r24, r22
    41de:	bc 01       	movw	r22, r24
    41e0:	cd 01       	movw	r24, r26
    41e2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    41e6:	dc 01       	movw	r26, r24
    41e8:	cb 01       	movw	r24, r22
    41ea:	98 ab       	std	Y+48, r25	; 0x30
    41ec:	8f a7       	std	Y+47, r24	; 0x2f
    41ee:	0f c0       	rjmp	.+30     	; 0x420e <main+0x2704>
    41f0:	80 e9       	ldi	r24, 0x90	; 144
    41f2:	91 e0       	ldi	r25, 0x01	; 1
    41f4:	9e a7       	std	Y+46, r25	; 0x2e
    41f6:	8d a7       	std	Y+45, r24	; 0x2d
    41f8:	8d a5       	ldd	r24, Y+45	; 0x2d
    41fa:	9e a5       	ldd	r25, Y+46	; 0x2e
    41fc:	01 97       	sbiw	r24, 0x01	; 1
    41fe:	f1 f7       	brne	.-4      	; 0x41fc <main+0x26f2>
    4200:	9e a7       	std	Y+46, r25	; 0x2e
    4202:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4204:	8f a5       	ldd	r24, Y+47	; 0x2f
    4206:	98 a9       	ldd	r25, Y+48	; 0x30
    4208:	01 97       	sbiw	r24, 0x01	; 1
    420a:	98 ab       	std	Y+48, r25	; 0x30
    420c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    420e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4210:	98 a9       	ldd	r25, Y+48	; 0x30
    4212:	00 97       	sbiw	r24, 0x00	; 0
    4214:	69 f7       	brne	.-38     	; 0x41f0 <main+0x26e6>
    4216:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    421a:	69 a9       	ldd	r22, Y+49	; 0x31
    421c:	7a a9       	ldd	r23, Y+50	; 0x32
    421e:	8b a9       	ldd	r24, Y+51	; 0x33
    4220:	9c a9       	ldd	r25, Y+52	; 0x34
    4222:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4226:	dc 01       	movw	r26, r24
    4228:	cb 01       	movw	r24, r22
    422a:	98 ab       	std	Y+48, r25	; 0x30
    422c:	8f a7       	std	Y+47, r24	; 0x2f
    422e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4230:	98 a9       	ldd	r25, Y+48	; 0x30
    4232:	9c a7       	std	Y+44, r25	; 0x2c
    4234:	8b a7       	std	Y+43, r24	; 0x2b
    4236:	8b a5       	ldd	r24, Y+43	; 0x2b
    4238:	9c a5       	ldd	r25, Y+44	; 0x2c
    423a:	01 97       	sbiw	r24, 0x01	; 1
    423c:	f1 f7       	brne	.-4      	; 0x423a <main+0x2730>
    423e:	9c a7       	std	Y+44, r25	; 0x2c
    4240:	8b a7       	std	Y+43, r24	; 0x2b
    4242:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case WHAT_IS_YOUR_NAME:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    4246:	81 e0       	ldi	r24, 0x01	; 1
    4248:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    424c:	80 e0       	ldi	r24, 0x00	; 0
    424e:	60 e0       	ldi	r22, 0x00	; 0
    4250:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[9],0,11,0);
    4254:	ce 01       	movw	r24, r28
    4256:	86 5d       	subi	r24, 0xD6	; 214
    4258:	9e 4f       	sbci	r25, 0xFE	; 254
    425a:	88 5b       	subi	r24, 0xB8	; 184
    425c:	9f 4f       	sbci	r25, 0xFF	; 255
    425e:	60 e0       	ldi	r22, 0x00	; 0
    4260:	4b e0       	ldi	r20, 0x0B	; 11
    4262:	20 e0       	ldi	r18, 0x00	; 0
    4264:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[7],1,10,0);
    4268:	ce 01       	movw	r24, r28
    426a:	86 5d       	subi	r24, 0xD6	; 214
    426c:	9e 4f       	sbci	r25, 0xFE	; 254
    426e:	c8 96       	adiw	r24, 0x38	; 56
    4270:	61 e0       	ldi	r22, 0x01	; 1
    4272:	4a e0       	ldi	r20, 0x0A	; 10
    4274:	20 e0       	ldi	r18, 0x00	; 0
    4276:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[0],2,8,0);
    427a:	ce 01       	movw	r24, r28
    427c:	86 5d       	subi	r24, 0xD6	; 214
    427e:	9e 4f       	sbci	r25, 0xFE	; 254
    4280:	62 e0       	ldi	r22, 0x02	; 2
    4282:	48 e0       	ldi	r20, 0x08	; 8
    4284:	20 e0       	ldi	r18, 0x00	; 0
    4286:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[17],3,7,0);
    428a:	ce 01       	movw	r24, r28
    428c:	86 5d       	subi	r24, 0xD6	; 214
    428e:	9e 4f       	sbci	r25, 0xFE	; 254
    4290:	88 57       	subi	r24, 0x78	; 120
    4292:	9f 4f       	sbci	r25, 0xFF	; 255
    4294:	63 e0       	ldi	r22, 0x03	; 3
    4296:	47 e0       	ldi	r20, 0x07	; 7
    4298:	20 e0       	ldi	r18, 0x00	; 0
    429a:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[9],4,6,0);
    429e:	ce 01       	movw	r24, r28
    42a0:	86 5d       	subi	r24, 0xD6	; 214
    42a2:	9e 4f       	sbci	r25, 0xFE	; 254
    42a4:	88 5b       	subi	r24, 0xB8	; 184
    42a6:	9f 4f       	sbci	r25, 0xFF	; 255
    42a8:	64 e0       	ldi	r22, 0x04	; 4
    42aa:	46 e0       	ldi	r20, 0x06	; 6
    42ac:	20 e0       	ldi	r18, 0x00	; 0
    42ae:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[16],5,5,0);
    42b2:	ce 01       	movw	r24, r28
    42b4:	86 5d       	subi	r24, 0xD6	; 214
    42b6:	9e 4f       	sbci	r25, 0xFE	; 254
    42b8:	80 58       	subi	r24, 0x80	; 128
    42ba:	9f 4f       	sbci	r25, 0xFF	; 255
    42bc:	65 e0       	ldi	r22, 0x05	; 5
    42be:	45 e0       	ldi	r20, 0x05	; 5
    42c0:	20 e0       	ldi	r18, 0x00	; 0
    42c2:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[21],6,4,0);
    42c6:	ce 01       	movw	r24, r28
    42c8:	86 5d       	subi	r24, 0xD6	; 214
    42ca:	9e 4f       	sbci	r25, 0xFE	; 254
    42cc:	88 55       	subi	r24, 0x58	; 88
    42ce:	9f 4f       	sbci	r25, 0xFF	; 255
    42d0:	66 e0       	ldi	r22, 0x06	; 6
    42d2:	44 e0       	ldi	r20, 0x04	; 4
    42d4:	20 e0       	ldi	r18, 0x00	; 0
    42d6:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    42da:	80 e0       	ldi	r24, 0x00	; 0
    42dc:	90 e0       	ldi	r25, 0x00	; 0
    42de:	aa ef       	ldi	r26, 0xFA	; 250
    42e0:	b4 e4       	ldi	r27, 0x44	; 68
    42e2:	8f a3       	std	Y+39, r24	; 0x27
    42e4:	98 a7       	std	Y+40, r25	; 0x28
    42e6:	a9 a7       	std	Y+41, r26	; 0x29
    42e8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    42ea:	6f a1       	ldd	r22, Y+39	; 0x27
    42ec:	78 a5       	ldd	r23, Y+40	; 0x28
    42ee:	89 a5       	ldd	r24, Y+41	; 0x29
    42f0:	9a a5       	ldd	r25, Y+42	; 0x2a
    42f2:	20 e0       	ldi	r18, 0x00	; 0
    42f4:	30 e0       	ldi	r19, 0x00	; 0
    42f6:	4a e7       	ldi	r20, 0x7A	; 122
    42f8:	55 e4       	ldi	r21, 0x45	; 69
    42fa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    42fe:	dc 01       	movw	r26, r24
    4300:	cb 01       	movw	r24, r22
    4302:	8b a3       	std	Y+35, r24	; 0x23
    4304:	9c a3       	std	Y+36, r25	; 0x24
    4306:	ad a3       	std	Y+37, r26	; 0x25
    4308:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    430a:	6b a1       	ldd	r22, Y+35	; 0x23
    430c:	7c a1       	ldd	r23, Y+36	; 0x24
    430e:	8d a1       	ldd	r24, Y+37	; 0x25
    4310:	9e a1       	ldd	r25, Y+38	; 0x26
    4312:	20 e0       	ldi	r18, 0x00	; 0
    4314:	30 e0       	ldi	r19, 0x00	; 0
    4316:	40 e8       	ldi	r20, 0x80	; 128
    4318:	5f e3       	ldi	r21, 0x3F	; 63
    431a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    431e:	88 23       	and	r24, r24
    4320:	2c f4       	brge	.+10     	; 0x432c <main+0x2822>
		__ticks = 1;
    4322:	81 e0       	ldi	r24, 0x01	; 1
    4324:	90 e0       	ldi	r25, 0x00	; 0
    4326:	9a a3       	std	Y+34, r25	; 0x22
    4328:	89 a3       	std	Y+33, r24	; 0x21
    432a:	40 c0       	rjmp	.+128    	; 0x43ac <main+0x28a2>
	else if (__tmp > 65535)
    432c:	6b a1       	ldd	r22, Y+35	; 0x23
    432e:	7c a1       	ldd	r23, Y+36	; 0x24
    4330:	8d a1       	ldd	r24, Y+37	; 0x25
    4332:	9e a1       	ldd	r25, Y+38	; 0x26
    4334:	20 e0       	ldi	r18, 0x00	; 0
    4336:	3f ef       	ldi	r19, 0xFF	; 255
    4338:	4f e7       	ldi	r20, 0x7F	; 127
    433a:	57 e4       	ldi	r21, 0x47	; 71
    433c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    4340:	18 16       	cp	r1, r24
    4342:	54 f5       	brge	.+84     	; 0x4398 <main+0x288e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4344:	6f a1       	ldd	r22, Y+39	; 0x27
    4346:	78 a5       	ldd	r23, Y+40	; 0x28
    4348:	89 a5       	ldd	r24, Y+41	; 0x29
    434a:	9a a5       	ldd	r25, Y+42	; 0x2a
    434c:	20 e0       	ldi	r18, 0x00	; 0
    434e:	30 e0       	ldi	r19, 0x00	; 0
    4350:	40 e2       	ldi	r20, 0x20	; 32
    4352:	51 e4       	ldi	r21, 0x41	; 65
    4354:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4358:	dc 01       	movw	r26, r24
    435a:	cb 01       	movw	r24, r22
    435c:	bc 01       	movw	r22, r24
    435e:	cd 01       	movw	r24, r26
    4360:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4364:	dc 01       	movw	r26, r24
    4366:	cb 01       	movw	r24, r22
    4368:	9a a3       	std	Y+34, r25	; 0x22
    436a:	89 a3       	std	Y+33, r24	; 0x21
    436c:	0f c0       	rjmp	.+30     	; 0x438c <main+0x2882>
    436e:	80 e9       	ldi	r24, 0x90	; 144
    4370:	91 e0       	ldi	r25, 0x01	; 1
    4372:	98 a3       	std	Y+32, r25	; 0x20
    4374:	8f 8f       	std	Y+31, r24	; 0x1f
    4376:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4378:	98 a1       	ldd	r25, Y+32	; 0x20
    437a:	01 97       	sbiw	r24, 0x01	; 1
    437c:	f1 f7       	brne	.-4      	; 0x437a <main+0x2870>
    437e:	98 a3       	std	Y+32, r25	; 0x20
    4380:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4382:	89 a1       	ldd	r24, Y+33	; 0x21
    4384:	9a a1       	ldd	r25, Y+34	; 0x22
    4386:	01 97       	sbiw	r24, 0x01	; 1
    4388:	9a a3       	std	Y+34, r25	; 0x22
    438a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    438c:	89 a1       	ldd	r24, Y+33	; 0x21
    438e:	9a a1       	ldd	r25, Y+34	; 0x22
    4390:	00 97       	sbiw	r24, 0x00	; 0
    4392:	69 f7       	brne	.-38     	; 0x436e <main+0x2864>
    4394:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4398:	6b a1       	ldd	r22, Y+35	; 0x23
    439a:	7c a1       	ldd	r23, Y+36	; 0x24
    439c:	8d a1       	ldd	r24, Y+37	; 0x25
    439e:	9e a1       	ldd	r25, Y+38	; 0x26
    43a0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    43a4:	dc 01       	movw	r26, r24
    43a6:	cb 01       	movw	r24, r22
    43a8:	9a a3       	std	Y+34, r25	; 0x22
    43aa:	89 a3       	std	Y+33, r24	; 0x21
    43ac:	89 a1       	ldd	r24, Y+33	; 0x21
    43ae:	9a a1       	ldd	r25, Y+34	; 0x22
    43b0:	9e 8f       	std	Y+30, r25	; 0x1e
    43b2:	8d 8f       	std	Y+29, r24	; 0x1d
    43b4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    43b6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    43b8:	01 97       	sbiw	r24, 0x01	; 1
    43ba:	f1 f7       	brne	.-4      	; 0x43b8 <main+0x28ae>
    43bc:	9e 8f       	std	Y+30, r25	; 0x1e
    43be:	8d 8f       	std	Y+29, r24	; 0x1d
    43c0:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			case HOW_ARE_YOU:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);
    43c4:	81 e0       	ldi	r24, 0x01	; 1
    43c6:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    43ca:	80 e0       	ldi	r24, 0x00	; 0
    43cc:	60 e0       	ldi	r22, 0x00	; 0
    43ce:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
			LCD_voidSendSpecialChar(alpha[16],0,12,0);
    43d2:	ce 01       	movw	r24, r28
    43d4:	86 5d       	subi	r24, 0xD6	; 214
    43d6:	9e 4f       	sbci	r25, 0xFE	; 254
    43d8:	80 58       	subi	r24, 0x80	; 128
    43da:	9f 4f       	sbci	r25, 0xFF	; 255
    43dc:	60 e0       	ldi	r22, 0x00	; 0
    43de:	4c e0       	ldi	r20, 0x0C	; 12
    43e0:	20 e0       	ldi	r18, 0x00	; 0
    43e2:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[8],1,11,0);
    43e6:	ce 01       	movw	r24, r28
    43e8:	86 5d       	subi	r24, 0xD6	; 214
    43ea:	9e 4f       	sbci	r25, 0xFE	; 254
    43ec:	80 5c       	subi	r24, 0xC0	; 192
    43ee:	9f 4f       	sbci	r25, 0xFF	; 255
    43f0:	61 e0       	ldi	r22, 0x01	; 1
    43f2:	4b e0       	ldi	r20, 0x0B	; 11
    43f4:	20 e0       	ldi	r18, 0x00	; 0
    43f6:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[25],2,10,0);
    43fa:	ce 01       	movw	r24, r28
    43fc:	86 5d       	subi	r24, 0xD6	; 214
    43fe:	9e 4f       	sbci	r25, 0xFE	; 254
    4400:	88 53       	subi	r24, 0x38	; 56
    4402:	9f 4f       	sbci	r25, 0xFF	; 255
    4404:	62 e0       	ldi	r22, 0x02	; 2
    4406:	4a e0       	ldi	r20, 0x0A	; 10
    4408:	20 e0       	ldi	r18, 0x00	; 0
    440a:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[3],3,8,0);
    440e:	ce 01       	movw	r24, r28
    4410:	86 5d       	subi	r24, 0xD6	; 214
    4412:	9e 4f       	sbci	r25, 0xFE	; 254
    4414:	48 96       	adiw	r24, 0x18	; 24
    4416:	63 e0       	ldi	r22, 0x03	; 3
    4418:	48 e0       	ldi	r20, 0x08	; 8
    441a:	20 e0       	ldi	r18, 0x00	; 0
    441c:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[7],4,7,0);
    4420:	ce 01       	movw	r24, r28
    4422:	86 5d       	subi	r24, 0xD6	; 214
    4424:	9e 4f       	sbci	r25, 0xFE	; 254
    4426:	c8 96       	adiw	r24, 0x38	; 56
    4428:	64 e0       	ldi	r22, 0x04	; 4
    442a:	47 e0       	ldi	r20, 0x07	; 7
    442c:	20 e0       	ldi	r18, 0x00	; 0
    442e:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[14],5,6,0);
    4432:	ce 01       	movw	r24, r28
    4434:	86 5d       	subi	r24, 0xD6	; 214
    4436:	9e 4f       	sbci	r25, 0xFE	; 254
    4438:	80 59       	subi	r24, 0x90	; 144
    443a:	9f 4f       	sbci	r25, 0xFF	; 255
    443c:	65 e0       	ldi	r22, 0x05	; 5
    443e:	46 e0       	ldi	r20, 0x06	; 6
    4440:	20 e0       	ldi	r18, 0x00	; 0
    4442:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[16],6,5,0);
    4446:	ce 01       	movw	r24, r28
    4448:	86 5d       	subi	r24, 0xD6	; 214
    444a:	9e 4f       	sbci	r25, 0xFE	; 254
    444c:	80 58       	subi	r24, 0x80	; 128
    444e:	9f 4f       	sbci	r25, 0xFF	; 255
    4450:	66 e0       	ldi	r22, 0x06	; 6
    4452:	45 e0       	ldi	r20, 0x05	; 5
    4454:	20 e0       	ldi	r18, 0x00	; 0
    4456:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
			LCD_voidSendSpecialChar(alpha[21],7,4,0);
    445a:	ce 01       	movw	r24, r28
    445c:	86 5d       	subi	r24, 0xD6	; 214
    445e:	9e 4f       	sbci	r25, 0xFE	; 254
    4460:	88 55       	subi	r24, 0x58	; 88
    4462:	9f 4f       	sbci	r25, 0xFF	; 255
    4464:	67 e0       	ldi	r22, 0x07	; 7
    4466:	44 e0       	ldi	r20, 0x04	; 4
    4468:	20 e0       	ldi	r18, 0x00	; 0
    446a:	0e 94 85 0c 	call	0x190a	; 0x190a <LCD_voidSendSpecialChar>
    446e:	80 e0       	ldi	r24, 0x00	; 0
    4470:	90 e0       	ldi	r25, 0x00	; 0
    4472:	aa ef       	ldi	r26, 0xFA	; 250
    4474:	b4 e4       	ldi	r27, 0x44	; 68
    4476:	89 8f       	std	Y+25, r24	; 0x19
    4478:	9a 8f       	std	Y+26, r25	; 0x1a
    447a:	ab 8f       	std	Y+27, r26	; 0x1b
    447c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    447e:	69 8d       	ldd	r22, Y+25	; 0x19
    4480:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4482:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4484:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4486:	20 e0       	ldi	r18, 0x00	; 0
    4488:	30 e0       	ldi	r19, 0x00	; 0
    448a:	4a e7       	ldi	r20, 0x7A	; 122
    448c:	55 e4       	ldi	r21, 0x45	; 69
    448e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4492:	dc 01       	movw	r26, r24
    4494:	cb 01       	movw	r24, r22
    4496:	8d 8b       	std	Y+21, r24	; 0x15
    4498:	9e 8b       	std	Y+22, r25	; 0x16
    449a:	af 8b       	std	Y+23, r26	; 0x17
    449c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    449e:	6d 89       	ldd	r22, Y+21	; 0x15
    44a0:	7e 89       	ldd	r23, Y+22	; 0x16
    44a2:	8f 89       	ldd	r24, Y+23	; 0x17
    44a4:	98 8d       	ldd	r25, Y+24	; 0x18
    44a6:	20 e0       	ldi	r18, 0x00	; 0
    44a8:	30 e0       	ldi	r19, 0x00	; 0
    44aa:	40 e8       	ldi	r20, 0x80	; 128
    44ac:	5f e3       	ldi	r21, 0x3F	; 63
    44ae:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    44b2:	88 23       	and	r24, r24
    44b4:	2c f4       	brge	.+10     	; 0x44c0 <main+0x29b6>
		__ticks = 1;
    44b6:	81 e0       	ldi	r24, 0x01	; 1
    44b8:	90 e0       	ldi	r25, 0x00	; 0
    44ba:	9c 8b       	std	Y+20, r25	; 0x14
    44bc:	8b 8b       	std	Y+19, r24	; 0x13
    44be:	40 c0       	rjmp	.+128    	; 0x4540 <main+0x2a36>
	else if (__tmp > 65535)
    44c0:	6d 89       	ldd	r22, Y+21	; 0x15
    44c2:	7e 89       	ldd	r23, Y+22	; 0x16
    44c4:	8f 89       	ldd	r24, Y+23	; 0x17
    44c6:	98 8d       	ldd	r25, Y+24	; 0x18
    44c8:	20 e0       	ldi	r18, 0x00	; 0
    44ca:	3f ef       	ldi	r19, 0xFF	; 255
    44cc:	4f e7       	ldi	r20, 0x7F	; 127
    44ce:	57 e4       	ldi	r21, 0x47	; 71
    44d0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    44d4:	18 16       	cp	r1, r24
    44d6:	54 f5       	brge	.+84     	; 0x452c <main+0x2a22>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44d8:	69 8d       	ldd	r22, Y+25	; 0x19
    44da:	7a 8d       	ldd	r23, Y+26	; 0x1a
    44dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    44de:	9c 8d       	ldd	r25, Y+28	; 0x1c
    44e0:	20 e0       	ldi	r18, 0x00	; 0
    44e2:	30 e0       	ldi	r19, 0x00	; 0
    44e4:	40 e2       	ldi	r20, 0x20	; 32
    44e6:	51 e4       	ldi	r21, 0x41	; 65
    44e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    44ec:	dc 01       	movw	r26, r24
    44ee:	cb 01       	movw	r24, r22
    44f0:	bc 01       	movw	r22, r24
    44f2:	cd 01       	movw	r24, r26
    44f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    44f8:	dc 01       	movw	r26, r24
    44fa:	cb 01       	movw	r24, r22
    44fc:	9c 8b       	std	Y+20, r25	; 0x14
    44fe:	8b 8b       	std	Y+19, r24	; 0x13
    4500:	0f c0       	rjmp	.+30     	; 0x4520 <main+0x2a16>
    4502:	80 e9       	ldi	r24, 0x90	; 144
    4504:	91 e0       	ldi	r25, 0x01	; 1
    4506:	9a 8b       	std	Y+18, r25	; 0x12
    4508:	89 8b       	std	Y+17, r24	; 0x11
    450a:	89 89       	ldd	r24, Y+17	; 0x11
    450c:	9a 89       	ldd	r25, Y+18	; 0x12
    450e:	01 97       	sbiw	r24, 0x01	; 1
    4510:	f1 f7       	brne	.-4      	; 0x450e <main+0x2a04>
    4512:	9a 8b       	std	Y+18, r25	; 0x12
    4514:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4516:	8b 89       	ldd	r24, Y+19	; 0x13
    4518:	9c 89       	ldd	r25, Y+20	; 0x14
    451a:	01 97       	sbiw	r24, 0x01	; 1
    451c:	9c 8b       	std	Y+20, r25	; 0x14
    451e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4520:	8b 89       	ldd	r24, Y+19	; 0x13
    4522:	9c 89       	ldd	r25, Y+20	; 0x14
    4524:	00 97       	sbiw	r24, 0x00	; 0
    4526:	69 f7       	brne	.-38     	; 0x4502 <main+0x29f8>
    4528:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    452c:	6d 89       	ldd	r22, Y+21	; 0x15
    452e:	7e 89       	ldd	r23, Y+22	; 0x16
    4530:	8f 89       	ldd	r24, Y+23	; 0x17
    4532:	98 8d       	ldd	r25, Y+24	; 0x18
    4534:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4538:	dc 01       	movw	r26, r24
    453a:	cb 01       	movw	r24, r22
    453c:	9c 8b       	std	Y+20, r25	; 0x14
    453e:	8b 8b       	std	Y+19, r24	; 0x13
    4540:	8b 89       	ldd	r24, Y+19	; 0x13
    4542:	9c 89       	ldd	r25, Y+20	; 0x14
    4544:	98 8b       	std	Y+16, r25	; 0x10
    4546:	8f 87       	std	Y+15, r24	; 0x0f
    4548:	8f 85       	ldd	r24, Y+15	; 0x0f
    454a:	98 89       	ldd	r25, Y+16	; 0x10
    454c:	01 97       	sbiw	r24, 0x01	; 1
    454e:	f1 f7       	brne	.-4      	; 0x454c <main+0x2a42>
    4550:	98 8b       	std	Y+16, r25	; 0x10
    4552:	8f 87       	std	Y+15, r24	; 0x0f
    4554:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			_delay_ms(2000);
			break;}
			default:{LCD_VoidSendCommand(1); LCD_voidGoToXY(0,0);LCD_u8SendString("No choice");_delay_ms(2000);break;}
    4558:	81 e0       	ldi	r24, 0x01	; 1
    455a:	0e 94 44 0b 	call	0x1688	; 0x1688 <LCD_VoidSendCommand>
    455e:	80 e0       	ldi	r24, 0x00	; 0
    4560:	60 e0       	ldi	r22, 0x00	; 0
    4562:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <LCD_voidGoToXY>
    4566:	8f e6       	ldi	r24, 0x6F	; 111
    4568:	90 e0       	ldi	r25, 0x00	; 0
    456a:	0e 94 1e 0c 	call	0x183c	; 0x183c <LCD_u8SendString>
    456e:	80 e0       	ldi	r24, 0x00	; 0
    4570:	90 e0       	ldi	r25, 0x00	; 0
    4572:	aa ef       	ldi	r26, 0xFA	; 250
    4574:	b4 e4       	ldi	r27, 0x44	; 68
    4576:	8b 87       	std	Y+11, r24	; 0x0b
    4578:	9c 87       	std	Y+12, r25	; 0x0c
    457a:	ad 87       	std	Y+13, r26	; 0x0d
    457c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    457e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4580:	7c 85       	ldd	r23, Y+12	; 0x0c
    4582:	8d 85       	ldd	r24, Y+13	; 0x0d
    4584:	9e 85       	ldd	r25, Y+14	; 0x0e
    4586:	20 e0       	ldi	r18, 0x00	; 0
    4588:	30 e0       	ldi	r19, 0x00	; 0
    458a:	4a e7       	ldi	r20, 0x7A	; 122
    458c:	55 e4       	ldi	r21, 0x45	; 69
    458e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    4592:	dc 01       	movw	r26, r24
    4594:	cb 01       	movw	r24, r22
    4596:	8f 83       	std	Y+7, r24	; 0x07
    4598:	98 87       	std	Y+8, r25	; 0x08
    459a:	a9 87       	std	Y+9, r26	; 0x09
    459c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    459e:	6f 81       	ldd	r22, Y+7	; 0x07
    45a0:	78 85       	ldd	r23, Y+8	; 0x08
    45a2:	89 85       	ldd	r24, Y+9	; 0x09
    45a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    45a6:	20 e0       	ldi	r18, 0x00	; 0
    45a8:	30 e0       	ldi	r19, 0x00	; 0
    45aa:	40 e8       	ldi	r20, 0x80	; 128
    45ac:	5f e3       	ldi	r21, 0x3F	; 63
    45ae:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    45b2:	88 23       	and	r24, r24
    45b4:	2c f4       	brge	.+10     	; 0x45c0 <main+0x2ab6>
		__ticks = 1;
    45b6:	81 e0       	ldi	r24, 0x01	; 1
    45b8:	90 e0       	ldi	r25, 0x00	; 0
    45ba:	9e 83       	std	Y+6, r25	; 0x06
    45bc:	8d 83       	std	Y+5, r24	; 0x05
    45be:	40 c0       	rjmp	.+128    	; 0x4640 <main+0x2b36>
	else if (__tmp > 65535)
    45c0:	6f 81       	ldd	r22, Y+7	; 0x07
    45c2:	78 85       	ldd	r23, Y+8	; 0x08
    45c4:	89 85       	ldd	r24, Y+9	; 0x09
    45c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    45c8:	20 e0       	ldi	r18, 0x00	; 0
    45ca:	3f ef       	ldi	r19, 0xFF	; 255
    45cc:	4f e7       	ldi	r20, 0x7F	; 127
    45ce:	57 e4       	ldi	r21, 0x47	; 71
    45d0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    45d4:	18 16       	cp	r1, r24
    45d6:	54 f5       	brge	.+84     	; 0x462c <main+0x2b22>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    45da:	7c 85       	ldd	r23, Y+12	; 0x0c
    45dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    45de:	9e 85       	ldd	r25, Y+14	; 0x0e
    45e0:	20 e0       	ldi	r18, 0x00	; 0
    45e2:	30 e0       	ldi	r19, 0x00	; 0
    45e4:	40 e2       	ldi	r20, 0x20	; 32
    45e6:	51 e4       	ldi	r21, 0x41	; 65
    45e8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    45ec:	dc 01       	movw	r26, r24
    45ee:	cb 01       	movw	r24, r22
    45f0:	bc 01       	movw	r22, r24
    45f2:	cd 01       	movw	r24, r26
    45f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    45f8:	dc 01       	movw	r26, r24
    45fa:	cb 01       	movw	r24, r22
    45fc:	9e 83       	std	Y+6, r25	; 0x06
    45fe:	8d 83       	std	Y+5, r24	; 0x05
    4600:	0f c0       	rjmp	.+30     	; 0x4620 <main+0x2b16>
    4602:	80 e9       	ldi	r24, 0x90	; 144
    4604:	91 e0       	ldi	r25, 0x01	; 1
    4606:	9c 83       	std	Y+4, r25	; 0x04
    4608:	8b 83       	std	Y+3, r24	; 0x03
    460a:	8b 81       	ldd	r24, Y+3	; 0x03
    460c:	9c 81       	ldd	r25, Y+4	; 0x04
    460e:	01 97       	sbiw	r24, 0x01	; 1
    4610:	f1 f7       	brne	.-4      	; 0x460e <main+0x2b04>
    4612:	9c 83       	std	Y+4, r25	; 0x04
    4614:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4616:	8d 81       	ldd	r24, Y+5	; 0x05
    4618:	9e 81       	ldd	r25, Y+6	; 0x06
    461a:	01 97       	sbiw	r24, 0x01	; 1
    461c:	9e 83       	std	Y+6, r25	; 0x06
    461e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4620:	8d 81       	ldd	r24, Y+5	; 0x05
    4622:	9e 81       	ldd	r25, Y+6	; 0x06
    4624:	00 97       	sbiw	r24, 0x00	; 0
    4626:	69 f7       	brne	.-38     	; 0x4602 <main+0x2af8>
    4628:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    462c:	6f 81       	ldd	r22, Y+7	; 0x07
    462e:	78 85       	ldd	r23, Y+8	; 0x08
    4630:	89 85       	ldd	r24, Y+9	; 0x09
    4632:	9a 85       	ldd	r25, Y+10	; 0x0a
    4634:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    4638:	dc 01       	movw	r26, r24
    463a:	cb 01       	movw	r24, r22
    463c:	9e 83       	std	Y+6, r25	; 0x06
    463e:	8d 83       	std	Y+5, r24	; 0x05
    4640:	8d 81       	ldd	r24, Y+5	; 0x05
    4642:	9e 81       	ldd	r25, Y+6	; 0x06
    4644:	9a 83       	std	Y+2, r25	; 0x02
    4646:	89 83       	std	Y+1, r24	; 0x01
    4648:	89 81       	ldd	r24, Y+1	; 0x01
    464a:	9a 81       	ldd	r25, Y+2	; 0x02
    464c:	01 97       	sbiw	r24, 0x01	; 1
    464e:	f1 f7       	brne	.-4      	; 0x464c <main+0x2b42>
    4650:	9a 83       	std	Y+2, r25	; 0x02
    4652:	89 83       	std	Y+1, r24	; 0x01
    4654:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <main+0x6ac>

00004658 <__mulsi3>:
    4658:	62 9f       	mul	r22, r18
    465a:	d0 01       	movw	r26, r0
    465c:	73 9f       	mul	r23, r19
    465e:	f0 01       	movw	r30, r0
    4660:	82 9f       	mul	r24, r18
    4662:	e0 0d       	add	r30, r0
    4664:	f1 1d       	adc	r31, r1
    4666:	64 9f       	mul	r22, r20
    4668:	e0 0d       	add	r30, r0
    466a:	f1 1d       	adc	r31, r1
    466c:	92 9f       	mul	r25, r18
    466e:	f0 0d       	add	r31, r0
    4670:	83 9f       	mul	r24, r19
    4672:	f0 0d       	add	r31, r0
    4674:	74 9f       	mul	r23, r20
    4676:	f0 0d       	add	r31, r0
    4678:	65 9f       	mul	r22, r21
    467a:	f0 0d       	add	r31, r0
    467c:	99 27       	eor	r25, r25
    467e:	72 9f       	mul	r23, r18
    4680:	b0 0d       	add	r27, r0
    4682:	e1 1d       	adc	r30, r1
    4684:	f9 1f       	adc	r31, r25
    4686:	63 9f       	mul	r22, r19
    4688:	b0 0d       	add	r27, r0
    468a:	e1 1d       	adc	r30, r1
    468c:	f9 1f       	adc	r31, r25
    468e:	bd 01       	movw	r22, r26
    4690:	cf 01       	movw	r24, r30
    4692:	11 24       	eor	r1, r1
    4694:	08 95       	ret

00004696 <__udivmodsi4>:
    4696:	a1 e2       	ldi	r26, 0x21	; 33
    4698:	1a 2e       	mov	r1, r26
    469a:	aa 1b       	sub	r26, r26
    469c:	bb 1b       	sub	r27, r27
    469e:	fd 01       	movw	r30, r26
    46a0:	0d c0       	rjmp	.+26     	; 0x46bc <__udivmodsi4_ep>

000046a2 <__udivmodsi4_loop>:
    46a2:	aa 1f       	adc	r26, r26
    46a4:	bb 1f       	adc	r27, r27
    46a6:	ee 1f       	adc	r30, r30
    46a8:	ff 1f       	adc	r31, r31
    46aa:	a2 17       	cp	r26, r18
    46ac:	b3 07       	cpc	r27, r19
    46ae:	e4 07       	cpc	r30, r20
    46b0:	f5 07       	cpc	r31, r21
    46b2:	20 f0       	brcs	.+8      	; 0x46bc <__udivmodsi4_ep>
    46b4:	a2 1b       	sub	r26, r18
    46b6:	b3 0b       	sbc	r27, r19
    46b8:	e4 0b       	sbc	r30, r20
    46ba:	f5 0b       	sbc	r31, r21

000046bc <__udivmodsi4_ep>:
    46bc:	66 1f       	adc	r22, r22
    46be:	77 1f       	adc	r23, r23
    46c0:	88 1f       	adc	r24, r24
    46c2:	99 1f       	adc	r25, r25
    46c4:	1a 94       	dec	r1
    46c6:	69 f7       	brne	.-38     	; 0x46a2 <__udivmodsi4_loop>
    46c8:	60 95       	com	r22
    46ca:	70 95       	com	r23
    46cc:	80 95       	com	r24
    46ce:	90 95       	com	r25
    46d0:	9b 01       	movw	r18, r22
    46d2:	ac 01       	movw	r20, r24
    46d4:	bd 01       	movw	r22, r26
    46d6:	cf 01       	movw	r24, r30
    46d8:	08 95       	ret

000046da <__prologue_saves__>:
    46da:	2f 92       	push	r2
    46dc:	3f 92       	push	r3
    46de:	4f 92       	push	r4
    46e0:	5f 92       	push	r5
    46e2:	6f 92       	push	r6
    46e4:	7f 92       	push	r7
    46e6:	8f 92       	push	r8
    46e8:	9f 92       	push	r9
    46ea:	af 92       	push	r10
    46ec:	bf 92       	push	r11
    46ee:	cf 92       	push	r12
    46f0:	df 92       	push	r13
    46f2:	ef 92       	push	r14
    46f4:	ff 92       	push	r15
    46f6:	0f 93       	push	r16
    46f8:	1f 93       	push	r17
    46fa:	cf 93       	push	r28
    46fc:	df 93       	push	r29
    46fe:	cd b7       	in	r28, 0x3d	; 61
    4700:	de b7       	in	r29, 0x3e	; 62
    4702:	ca 1b       	sub	r28, r26
    4704:	db 0b       	sbc	r29, r27
    4706:	0f b6       	in	r0, 0x3f	; 63
    4708:	f8 94       	cli
    470a:	de bf       	out	0x3e, r29	; 62
    470c:	0f be       	out	0x3f, r0	; 63
    470e:	cd bf       	out	0x3d, r28	; 61
    4710:	09 94       	ijmp

00004712 <__epilogue_restores__>:
    4712:	2a 88       	ldd	r2, Y+18	; 0x12
    4714:	39 88       	ldd	r3, Y+17	; 0x11
    4716:	48 88       	ldd	r4, Y+16	; 0x10
    4718:	5f 84       	ldd	r5, Y+15	; 0x0f
    471a:	6e 84       	ldd	r6, Y+14	; 0x0e
    471c:	7d 84       	ldd	r7, Y+13	; 0x0d
    471e:	8c 84       	ldd	r8, Y+12	; 0x0c
    4720:	9b 84       	ldd	r9, Y+11	; 0x0b
    4722:	aa 84       	ldd	r10, Y+10	; 0x0a
    4724:	b9 84       	ldd	r11, Y+9	; 0x09
    4726:	c8 84       	ldd	r12, Y+8	; 0x08
    4728:	df 80       	ldd	r13, Y+7	; 0x07
    472a:	ee 80       	ldd	r14, Y+6	; 0x06
    472c:	fd 80       	ldd	r15, Y+5	; 0x05
    472e:	0c 81       	ldd	r16, Y+4	; 0x04
    4730:	1b 81       	ldd	r17, Y+3	; 0x03
    4732:	aa 81       	ldd	r26, Y+2	; 0x02
    4734:	b9 81       	ldd	r27, Y+1	; 0x01
    4736:	ce 0f       	add	r28, r30
    4738:	d1 1d       	adc	r29, r1
    473a:	0f b6       	in	r0, 0x3f	; 63
    473c:	f8 94       	cli
    473e:	de bf       	out	0x3e, r29	; 62
    4740:	0f be       	out	0x3f, r0	; 63
    4742:	cd bf       	out	0x3d, r28	; 61
    4744:	ed 01       	movw	r28, r26
    4746:	08 95       	ret

00004748 <_exit>:
    4748:	f8 94       	cli

0000474a <__stop_program>:
    474a:	ff cf       	rjmp	.-2      	; 0x474a <__stop_program>
